[
    {
        "expression": "^\\d$",
        "raw_prompt": "Matches exactly 1 numeric digit (0-9).",
        "refined_prompt": "Matches exactly 1 numeric digit (0-9).\nMatch examples:\n- \"1\"\n- \"2\"\n- \"3\"\nNon-match examples:\n- \"a\"\n- \"324\"",
        "matches": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "0"
        ],
        "non_matches": [
            "a",
            "324",
            "num",
            "location = 3",
            "ssda",
            "11",
            "hello world",
            "something something",
            "asd",
            "123fsf",
            "the car",
            "lorem ipsum"
        ],
        "stress_tests": [
            "eeeeeeeeeeeeyyyyyyyyhhyhuy"
        ],
        "id": 1,
        "output": {
            "warning": "This model version is deprecated. Migrate before January 4, 2024 to avoid disruption of service. Learn more https://platform.openai.com/docs/deprecations",
            "id": "cmpl-8BrLpj6hLwwccjKr33kBOc72p1zpw",
            "object": "text_completion",
            "created": 1697837381,
            "model": "text-davinci-003",
            "choices": [
                {
                    "text": "    \\d",
                    "index": 0,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\n\\d",
                    "index": 1,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": " \\d",
                    "index": 2,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": " \\d",
                    "index": 3,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^\\d$",
                    "index": 4,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": " \\d",
                    "index": 5,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\n/\\d/",
                    "index": 6,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\n/\\d/",
                    "index": 7,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\n\\d",
                    "index": 8,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "`\\d`",
                    "index": 9,
                    "logprobs": null,
                    "finish_reason": "stop"
                }
            ],
            "usage": {
                "prompt_tokens": 22,
                "completion_tokens": 33,
                "total_tokens": 55
            }
        }
    },
    {
        "expression": "^\\d{5}$",
        "raw_prompt": "Matches 5 numeric digits, such as a zip code.",
        "refined_prompt": "Matches 5 numeric digits, such as a zip code.\nMatch examples:\n- \"33333\"\n- \"55555\"\n- \"23445\"\nNon-match examples:\n- \"abcd\"\n- \"1324\"",
        "matches": [
            "33333",
            "55555",
            "23445",
            "89343",
            "46556",
            "25432",
            "25336",
            "43576",
            "68797",
            "30495",
            "54348",
            "45935",
            "93857"
        ],
        "non_matches": [
            "abcd",
            "1324",
            "as;lkjdf",
            "jaldks",
            "234",
            "8hr4f",
            "fsdg",
            "2546dgwre",
            "8j989",
            "xhsn",
            "potrewjdsg",
            "h345gf43"
        ],
        "id": 2,
        "output": {
            "warning": "This model version is deprecated. Migrate before January 4, 2024 to avoid disruption of service. Learn more https://platform.openai.com/docs/deprecations",
            "id": "cmpl-8BrLpLk1CLKPsQP3g7XPXaT2zzCUl",
            "object": "text_completion",
            "created": 1697837381,
            "model": "text-davinci-003",
            "choices": [
                {
                    "text": " \\([0-9]{5}\\)",
                    "index": 0,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "`\\d{5}`",
                    "index": 1,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\\d{5}",
                    "index": 2,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": " \\d{5}",
                    "index": 3,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\\d{5}",
                    "index": 4,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\\d{5}",
                    "index": 5,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\\d{5}",
                    "index": 6,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\\d{5}",
                    "index": 7,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\\d{5}",
                    "index": 8,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\\d{5}",
                    "index": 9,
                    "logprobs": null,
                    "finish_reason": "stop"
                }
            ],
            "usage": {
                "prompt_tokens": 23,
                "completion_tokens": 57,
                "total_tokens": 80
            }
        }
    },
    {
        "expression": "^\\d{5}-\\d{4}$",
        "raw_prompt": "Numeric and hyphen 5+4 ZIP code match for ZIP+4.",
        "refined_prompt": "Matches a string that starts with five digits, followed by a hyphen, and ends with four digits.\nMatch examples:\n- \"22222-3333\"\n- \"34545-2367\"\n- \"56334-2343\"\nNon-match examples:\n- \"123456789\"\n- \"A3B 4C5\"",
        "matches": [
            "22222-3333",
            "34545-2367",
            "56334-2343",
            "34539-5433",
            "12349-5943",
            "54329-9875",
            "34852-5493",
            "83542-2314",
            "52435-3489",
            "12345-0983",
            "98745-2385",
            "48294-2945"
        ],
        "non_matches": [
            "123456789",
            "A3B 4C5",
            "55335",
            "dinfa",
            "sfalijad234",
            "asdf3453",
            "dsjlka3",
            "234fsd",
            "gaqwer3",
            "adfa2",
            "23457-4332w2"
        ],
        "id": 3,
        "output": {
            "warning": "This model version is deprecated. Migrate before January 4, 2024 to avoid disruption of service. Learn more https://platform.openai.com/docs/deprecations",
            "id": "cmpl-8BrLqAmH55rWAlt2fPYrFS2ywAkYg",
            "object": "text_completion",
            "created": 1697837382,
            "model": "text-davinci-003",
            "choices": [
                {
                    "text": "^\\d{5}-\\d{4}$",
                    "index": 0,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\\d{5}-\\d{4}",
                    "index": 1,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^\\d{5}-\\d{4}$",
                    "index": 2,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^(\\d{5}-?\\d{4}|\\d{5}|\\d{9})$",
                    "index": 3,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^\\d{5}-\\d{4}$",
                    "index": 4,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^\\d{5}-\\d{4}$",
                    "index": 5,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^\\d{5}-\\d{4}$",
                    "index": 6,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\\d{5}-\\d{4}",
                    "index": 7,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^\\d{5}-\\d{4}$",
                    "index": 8,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^\\d{5}-\\d{4}$",
                    "index": 9,
                    "logprobs": null,
                    "finish_reason": "stop"
                }
            ],
            "usage": {
                "prompt_tokens": 27,
                "completion_tokens": 139,
                "total_tokens": 166
            }
        }
    },
    {
        "expression": "^\\d{5}$|^\\d{5}-\\d{4}$",
        "raw_prompt": "This regular expression will match either a 5 digit ZIP code or a ZIP+4 code formatted as 5 digits, a hyphen, and another 4 digits. Other than that, this is just a really really long description of a regular expression that I'm using to test how my front page will look in the case where very long expression descriptions are used.",
        "refined_prompt": "Match either a 5 digit ZIP code or a ZIP+4 code formatted as a string that starts with five digits, followed by a hyphen, and ends with four digits..\nMatch examples:\n- \"55555-5555\"\n- \"34564-3342\"\n- \"90210\"\nNon-match examples:\n- \"434454444\"\n- \"645-32-2345\"",
        "matches": [
            "55555-5555",
            "34564-3342",
            "90210",
            "03945",
            "02946",
            "46556",
            "52346",
            "34534-3252",
            "49672-3923",
            "59403-6934",
            "35349-6753",
            "52346-3953"
        ],
        "non_matches": [
            "434454444",
            "645-32-2345",
            "abc",
            "394-3498",
            "234565423",
            "j3942fw",
            "43-5432",
            "5324523-345",
            "h909f34f",
            "0953jg",
            "wtre-0n",
            "3409fjg43"
        ],
        "id": 4,
        "output": {
            "warning": "This model version is deprecated. Migrate before January 4, 2024 to avoid disruption of service. Learn more https://platform.openai.com/docs/deprecations",
            "id": "cmpl-8BrLq5iCEik3b05xg2bAaoibLerSw",
            "object": "text_completion",
            "created": 1697837382,
            "model": "text-davinci-003",
            "choices": [
                {
                    "text": "/^\\d{5}(-\\d{4})?$/",
                    "index": 0,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\\d{5}(-\\d{4})?",
                    "index": 1,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "/^\\d{5}(-\\d{4})?$/",
                    "index": 2,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\\d{5}(-\\d{4})?",
                    "index": 3,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "/^\\d{5}(-\\d{4})?$/",
                    "index": 4,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^\\d{5}(-\\d{4})?$",
                    "index": 5,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^\\d{5}(-\\d{4})?$",
                    "index": 6,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^\\d{5}(-\\d{4})?$",
                    "index": 7,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^\\d{5}(-\\d{4})?$",
                    "index": 8,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^\\d{5}(-\\d{4})?$",
                    "index": 9,
                    "logprobs": null,
                    "finish_reason": "stop"
                }
            ],
            "usage": {
                "prompt_tokens": 81,
                "completion_tokens": 142,
                "total_tokens": 223
            }
        }
    },
    {
        "expression": "^\\d{3}-\\d{2}-\\d{4}$",
        "raw_prompt": "This regular expression will match a hyphen-separated Social Security Number (SSN) in the format NNN-NN-NNNN.",
        "refined_prompt": "This regular expression will match a hyphen-separated Social Security Number (SSN) in the format NNN-NN-NNNN.\nMatch examples:\n- \"333-22-4444\"\n- \"123-45-6789\"\n- \"534-74-2573\"\nNon-match examples:\n- \"123456789\"\n- \"SSN\"",
        "matches": [
            "333-22-4444",
            "123-45-6789",
            "534-74-2573",
            "234-45-6235",
            "968-24-4395",
            "948-53-5924",
            "493-42-5938",
            "954-97-5942",
            "534-96-3623",
            "549-69-3456",
            "543-54-6396",
            "294-68-1957"
        ],
        "non_matches": [
            "123456789",
            "SSN",
            "-243",
            "4523-24352-453",
            "2346-2345-2435",
            "dgsfjkl",
            "2204fj",
            "234jgs-345",
            "4235-fgdsg",
            "afd-asdf",
            "dfg",
            "32542"
        ],
        "id": 5,
        "output": {
            "warning": "This model version is deprecated. Migrate before January 4, 2024 to avoid disruption of service. Learn more https://platform.openai.com/docs/deprecations",
            "id": "cmpl-8BrLr6oX3BFY6ZLZzVnWitXph2u0I",
            "object": "text_completion",
            "created": 1697837383,
            "model": "text-davinci-003",
            "choices": [
                {
                    "text": "/\\d{3}-\\d{2}-\\d{4}/",
                    "index": 0,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\\d{3}-\\d{2}-\\d{4}",
                    "index": 1,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\\d{3}-\\d{2}-\\d{4}",
                    "index": 2,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^\\d{3}-\\d{2}-\\d{4}$",
                    "index": 3,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\\d{3}-\\d{2}-\\d{4}",
                    "index": 4,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "/\\d{3}-\\d{2}-\\d{4}/",
                    "index": 5,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^\\d{3}-\\d{2}-\\d{4}$",
                    "index": 6,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "/\\d{3}-\\d{2}-\\d{4}/",
                    "index": 7,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "/\\d{3}-\\d{2}-\\d{4}/",
                    "index": 8,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "/^\\d{3}-\\d{2}-\\d{4}$/",
                    "index": 9,
                    "logprobs": null,
                    "finish_reason": "stop"
                }
            ],
            "usage": {
                "prompt_tokens": 40,
                "completion_tokens": 186,
                "total_tokens": 226
            }
        }
    },
    {
        "expression": "^[a-zA-Z]$",
        "raw_prompt": "Matches any single upper- or lower-case letter.",
        "refined_prompt": "Matches any single upper- or lower-case letter.\nMatch examples:\n- \"a\"\n- \"B\"\n- \"c\"\nNon-match examples:\n- \"0\"\n- \"&amp;\"",
        "matches": [
            "a",
            "B",
            "c",
            "f",
            "J",
            "D",
            "s",
            "D",
            "d",
            "o",
            "F",
            "p",
            "r"
        ],
        "non_matches": [
            "0",
            "&amp;",
            "AbC",
            "rewv342",
            "vr",
            "@",
            "sdfSDF",
            "asf",
            "324df",
            "34fs2",
            "34d2vdw",
            "99999@gmail"
        ],
        "id": 6,
        "output": {
            "warning": "This model version is deprecated. Migrate before January 4, 2024 to avoid disruption of service. Learn more https://platform.openai.com/docs/deprecations",
            "id": "cmpl-8BrLsXQofkJhYK6nEmJKDZhjFqNdA",
            "object": "text_completion",
            "created": 1697837384,
            "model": "text-davinci-003",
            "choices": [
                {
                    "text": "[a-zA-Z]",
                    "index": 0,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "[a-zA-Z]",
                    "index": 1,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "[a-zA-Z]",
                    "index": 2,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": " [a-zA-Z]",
                    "index": 3,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\n[a-zA-Z]",
                    "index": 4,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "[a-zA-Z]",
                    "index": 5,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "[a-zA-Z]",
                    "index": 6,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "[a-zA-Z]",
                    "index": 7,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\n[a-zA-Z]",
                    "index": 8,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\n[a-zA-Z]",
                    "index": 9,
                    "logprobs": null,
                    "finish_reason": "stop"
                }
            ],
            "usage": {
                "prompt_tokens": 23,
                "completion_tokens": 83,
                "total_tokens": 106
            }
        }
    },
    {
        "expression": "^[a-zA-Z]+$",
        "raw_prompt": "Matches any string of only upper- and lower- case letters (no spaces).",
        "refined_prompt": "Matches any string of only upper- and lower- case letters (no spaces).\nMatch examples:\n- \"abc\"\n- \"ABC\"\n- \"aBcDeF\"\nNon-match examples:\n- \"abc123\"\n- \"mr.\"",
        "matches": [
            "abc",
            "ABC",
            "aBcDeF",
            "dfasdfs",
            "ALKFJsf",
            "FDSfdsf",
            "AJFDAL",
            "sfdjk",
            "FISD",
            "sadfkjl",
            "fadghui",
            "FDSnfsdFDS",
            "sdfjoi"
        ],
        "non_matches": [
            "abc123",
            "mr.",
            "a word",
            "a a a",
            "209fsd",
            "3nf@",
            "fgsda23",
            "nu9",
            "u09nKLJG FSL",
            "gdfios jsfoi",
            "JFLSKJ FSDOIJ",
            "GOOD friend"
        ],
        "id": 7,
        "output": {
            "warning": "This model version is deprecated. Migrate before January 4, 2024 to avoid disruption of service. Learn more https://platform.openai.com/docs/deprecations",
            "id": "cmpl-8BrLslJCX6HUu7lzsXwX113cRoSb2",
            "object": "text_completion",
            "created": 1697837384,
            "model": "text-davinci-003",
            "choices": [
                {
                    "text": "^[a-zA-Z]+$",
                    "index": 0,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\n^[a-zA-Z]+$",
                    "index": 1,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\n[a-zA-Z]+",
                    "index": 2,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^[a-zA-Z]+$",
                    "index": 3,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^[a-zA-Z]+$",
                    "index": 4,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\n[a-zA-Z]+",
                    "index": 5,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "[a-zA-Z]+",
                    "index": 6,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "  /^[a-zA-Z]+$/",
                    "index": 7,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\n[a-zA-Z]+",
                    "index": 8,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\n^[a-zA-Z]+$",
                    "index": 9,
                    "logprobs": null,
                    "finish_reason": "stop"
                }
            ],
            "usage": {
                "prompt_tokens": 28,
                "completion_tokens": 100,
                "total_tokens": 128
            }
        }
    },
    {
        "expression": "^[a-zA-Z0-9]+$",
        "raw_prompt": "Matches any alphanumeric string (no spaces).",
        "refined_prompt": "Matches any alphanumeric string (a string that contains only English letters and/or digits without spaces).\nMatch examples:\n- \"10a\"\n- \"ABC\"\n- \"A3fg\"\nNon-match examples:\n- \"45.3\"\n- \"this or that\"",
        "matches": [
            "10a",
            "ABC",
            "A3fg",
            "AFDSA",
            "asfsafd",
            "123",
            "123123abcAfds",
            "2398djAD",
            "dsfhoi329",
            "98hsd",
            "NOTREDAME",
            "ILOVEND",
            "notredame46556"
        ],
        "non_matches": [
            "45.3",
            "this or that",
            "$23",
            "...111",
            "2346-2345-2435",
            "3nf@",
            "43-5432",
            "2546dgwre fsdfsd",
            "u09nKLJG FSL",
            "90ndfdfs ,./././ dcf",
            "sdf324 abc...",
            "99999@gmail"
        ],
        "id": 8,
        "output": {
            "warning": "This model version is deprecated. Migrate before January 4, 2024 to avoid disruption of service. Learn more https://platform.openai.com/docs/deprecations",
            "id": "cmpl-8BrLsWShhEoAXRbd3mmOjlEjFgtS8",
            "object": "text_completion",
            "created": 1697837384,
            "model": "text-davinci-003",
            "choices": [
                {
                    "text": "^[a-zA-Z0-9]+$",
                    "index": 0,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^[a-zA-Z0-9]+$",
                    "index": 1,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\n^[a-zA-Z0-9]+$",
                    "index": 2,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\n^\\w+$",
                    "index": 3,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^\\w+$",
                    "index": 4,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\n^[a-zA-Z0-9]+$",
                    "index": 5,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^\\w+$",
                    "index": 6,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^[a-zA-Z0-9]+$",
                    "index": 7,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^[a-zA-Z0-9]+$",
                    "index": 8,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "\n^[A-Za-z0-9]+$",
                    "index": 9,
                    "logprobs": null,
                    "finish_reason": "stop"
                }
            ],
            "usage": {
                "prompt_tokens": 22,
                "completion_tokens": 110,
                "total_tokens": 132
            }
        }
    },
    {
        "expression": "^\\d+$",
        "raw_prompt": "Positive integer value.",
        "refined_prompt": "Positive integer value.\nMatch examples:\n- \"123\"\n- \"10\"\n- \"54\"\nNon-match examples:\n- \"-54\"\n- \"54.234\"",
        "matches": [
            "123",
            "10",
            "54",
            "39",
            "583",
            "395",
            "2394",
            "2394854",
            "384",
            "324",
            "222",
            "1",
            "2",
            "39",
            "583",
            "395",
            "2394",
            "2394854",
            "384",
            "324",
            "222",
            "1",
            "2"
        ],
        "non_matches": [
            "-54",
            "54.234",
            "abc",
            "-123",
            "9ijn",
            "qwer",
            "-312",
            "1.1",
            "1.1.1",
            "1-1-2",
            "34.31",
            "8h98009hu",
            "-123",
            "9ijn",
            "qwer",
            "-312",
            "1.1",
            "1.1.1",
            "1-1-2",
            "34.31",
            "8h98009hu"
        ],
        "id": 9,
        "output": {
            "warning": "This model version is deprecated. Migrate before January 4, 2024 to avoid disruption of service. Learn more https://platform.openai.com/docs/deprecations",
            "id": "cmpl-8BrLtrvPkzXTKYyBKa08g9WI8JI1m",
            "object": "text_completion",
            "created": 1697837385,
            "model": "text-davinci-003",
            "choices": [
                {
                    "text": "^[1-9][0-9]*$",
                    "index": 0,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^[1-9][0-9]*$",
                    "index": 1,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^[1-9]\\d*$",
                    "index": 2,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^[1-9]\\d*$",
                    "index": 3,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^[0-9]{1,}$",
                    "index": 4,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^\\d+$",
                    "index": 5,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^[1-9][0-9]*$",
                    "index": 6,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^(0*[1-9][0-9]*)$",
                    "index": 7,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^[1-9]\\d*$",
                    "index": 8,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^[1-9]\\d*$",
                    "index": 9,
                    "logprobs": null,
                    "finish_reason": "stop"
                }
            ],
            "usage": {
                "prompt_tokens": 16,
                "completion_tokens": 107,
                "total_tokens": 123
            }
        }
    },
    {
        "expression": "^(\\+|-)?\\d+$",
        "raw_prompt": "Matches any signed integer.",
        "refined_prompt": "Matches any signed integer, in other words, a string that can start with an optional plus (+) or minus (-) sign, followed by one or more digits.\nMatch examples:\n- \"-34\"\n- \"34\"\n- \"+5\"\nNon-match examples:\n- \"abc\"\n- \"3.1415\"",
        "matches": [
            "-34",
            "34",
            "+5",
            "809",
            "790987",
            "+5483920",
            "-2354",
            "+540893",
            "-234",
            "2349",
            "5094",
            "234234",
            "+123"
        ],
        "non_matches": [
            "abc",
            "3.1415",
            "-5.3",
            "0bu9",
            "234dc",
            "312ccc",
            "123u98b",
            "1.2",
            "-2.3",
            "4.5",
            "+4.5",
            "-99.99"
        ],
        "id": 10,
        "output": {
            "warning": "This model version is deprecated. Migrate before January 4, 2024 to avoid disruption of service. Learn more https://platform.openai.com/docs/deprecations",
            "id": "cmpl-8BrLt6iA0ayofutettJoh5p6cFeyi",
            "object": "text_completion",
            "created": 1697837385,
            "model": "text-davinci-003",
            "choices": [
                {
                    "text": "\t\\-?[0-9]+",
                    "index": 0,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "-?\\d+",
                    "index": 1,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "-\\d+",
                    "index": 2,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "-?\\d+",
                    "index": 3,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "-\\d+",
                    "index": 4,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "^-?[0-9]+$",
                    "index": 5,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "-\\d+",
                    "index": 6,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "-?[0-9]+",
                    "index": 7,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": " [-+]?\\d+",
                    "index": 8,
                    "logprobs": null,
                    "finish_reason": "stop"
                },
                {
                    "text": "-\\d+",
                    "index": 9,
                    "logprobs": null,
                    "finish_reason": "stop"
                }
            ],
            "usage": {
                "prompt_tokens": 17,
                "completion_tokens": 58,
                "total_tokens": 75
            }
        }
    }
]