{
    "items": [
        {
            "tags": [
                "node.js",
                "npm"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 2,
            "is_answered": false,
            "question_id": 77060069,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1694096821,
            "creation_date": 1694093416,
            "body": "After 7 hours, I have given up. I try to run &quot;npm i&quot;, which worked yesterday, but not today. The only thing changed in the meantime is I updated Node.js from 16 (I think) to 18. Yes, big mistake.\nThe error\nThis is the error I am getting when I run &quot;npm i&quot; in my project:\n\nThings Ive tried\n\nremove node_modules and package-lock.json\nremove node.js from Windows (with Add/Remove programs)\nrevert back to latest commit (working) from yesterday\ncompletely removed node from Windows (npm and npm-cache files in Appdata/Roaming and node from C:/ProgramData)\ntried to remove .npmrc file but can&#39;t find it anywhere (hidden files are shown)\nuninstall and install node-sass\ncleared npm cache with force\nremoved chocolately &amp; python and reinstalled when installing node 16\nrebooted machine\nWindows Powershell in Administrator removed node-gyp (was reinstalled by installing node.js)\nWindows Powershell in Administrator npm i windows-build-tools (was deprecated)\nran &quot;npm ci&quot;, same error\nran &quot;npm i&quot; with force\n\nPackage.json\nThis is my package.json file, in which nothing is changed since yesterday when it still worked:\n\nNVM\nI installed this thing called &quot;nvm&quot;. When I run &quot;nvm list&quot;, I have a few versions. My project ALWAYS used to run on 11.10.1\n\nWhen I run &quot;nvm current&quot;, it says: 16.16.0\nWhen I run &quot;nvm install 11.10.1&quot;, it says already installed.\nWhen I run &quot;nvm use 11.10.1&quot;, it says Now using node v11.10.1(64-bit)\nWhen I run &quot;nvm current&quot; again, it still says 16.16.0\n\nWhat is this about? How can I fix my issue and run &quot;npm i&quot;?\n\nEDIT\nI have succesfully installed python 2, now my errors have changed to:\n\n",
            "excerpt": "Please use @babel/plugin-transform-numeric-separator instead.\nnpm WARN deprecated @babel/plugin-proposal-unicode-property-<span class=\"highlight\">regex</span>@7.10.1: This proposal has been merged to the ECMAScript standard <span class=\"highlight\">and</span> thus &hellip; Please use @babel/plugin-transform-unicode-property-<span class=\"highlight\">regex</span> instead.\nnpm WARN deprecated @babel/plugin-proposal-optional-catch-binding@7.10.1: This proposal has been merged to the ECMAScript standard <span class=\"highlight\">and</span> &hellip; ",
            "title": "Windows errors when I try to run &quot;npm i&quot;"
        },
        {
            "tags": [
                "java",
                "regex"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 2,
            "is_answered": true,
            "question_id": 76947953,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1692647902,
            "creation_date": 1692643259,
            "body": "Starting with Java 9, the regex engine began supporting variable-length lookbehind. I guess that&#39;s great and all if you want it, but that&#39;s a really good way to make a regex that is vulnerable to ReDOS attacks, or just being accidentally ReDOSsed by ordinary user input.\nFor reasons that are beyond the scope of this question, I am unable to police the regexes that my application is using to the extent that I&#39;d like. We&#39;ve had problems with regexes that wouldn&#39;t even have compiled in ancient versions of Java, but instead are causing application hangs (when a clean failure would have been much preferred).\nI&#39;m guessing the answer is &quot;no&quot;, but is there any way to get like legacy behavior on the Java regex engine, or to otherwise enable stricter checking, so that pathological regexes like this won&#39;t even be compiled by the engine? It would be much better to just fail these regexes, than for it to work most of the time but then if you give it just the right input it hangs.\nEdit to add: So there&#39;s stuff like this open source project that would maybe be something to look at if I decide I need to analyze any new regexes to make sure they aren&#39;t Evil. It would be nice if there was just a &quot;strict&quot; setting on the regex engine or something tho...\n",
            "excerpt": "Starting with Java 9, the <span class=\"highlight\">regex</span> engine began supporting variable-length lookbehind. &hellip; I guess that&#39;s great <span class=\"highlight\">and</span> all if you want it, but that&#39;s a really good way to make a <span class=\"highlight\">regex</span> that is vulnerable to <span class=\"highlight\">ReDOS</span> attacks, or just being accidentally ReDOSsed by ordinary user input. &hellip; ",
            "title": "Can Java&#39;s regex engine be made to forbid variable length lookbehind?"
        },
        {
            "tags": [
                "java",
                "regex"
            ],
            "question_score": 0,
            "is_accepted": true,
            "answer_id": 76948171,
            "is_answered": false,
            "question_id": 76947953,
            "item_type": "answer",
            "score": 2,
            "last_activity_date": 1692645649,
            "creation_date": 1692645649,
            "body": "The introduction of variable-length lookbehind in Java 9 indeed made it more flexible but also potentially riskier to ReDoS attacks. If you&#39;re concerned about the safety of regexes in your application, you might need to implement your own regex validation or filtering mechanism.\nAs stated here, the ReDoS issue has been handled in Java 9 but is still vulnerable to ReDoS, just needs trickier patterns than a basic . This problem will never go away. A regular expression engine like RE2, is by design immune to these exponential runtime problems, but they had to drop certain regular expression features to achieve this.\n",
            "excerpt": "If you&#39;re concerned about the safety of regexes in your application, you might need to implement your own <span class=\"highlight\">regex</span> validation or filtering mechanism. &hellip; As stated here, the <span class=\"highlight\">ReDoS</span> issue has been handled in Java 9 but is still vulnerable to <span class=\"highlight\">ReDoS</span>, just needs trickier patterns than a basic (a|aa)+. This problem will never go away. &hellip; ",
            "title": "Can Java&#39;s regex engine be made to forbid variable length lookbehind?"
        },
        {
            "tags": [
                "python",
                "sql-server",
                "odbc",
                "deadlock"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 0,
            "is_answered": false,
            "question_id": 76927688,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1692358992,
            "creation_date": 1692347833,
            "body": "In short:\nI need to write data for the past 8 years to a database per quarter. Every quarter will be written in 9 batches. When I try to run the script over the 32 quarters (8*4) it randomly errors at one point. I get many &quot;Fractional truncation&quot; errors with a single deadlock mixed in.\nSince the data is significantly large, I can&#39;t find the row that errors. IT WORKS when I redo the exact batch that gave the &quot;fractional truncation&quot; errors and deadlock errors. So there is no way to narrow the batch down to the problem.\nThe process takes several days (an issue for another time) so I can&#39;t monitor until it breaks, manually redo the batch, filter out duplicates, check if everything is in there and restart the other quarters.\nIn detail:\nIn the SQL Server database, I&#39;m reading data from Table A into Python. I&#39;m predicting column X and column Y. I&#39;m dumping the data in table B, which is table A + columns X, Y and Z (timestamp).\nMy analysis:\nSince the column types of the overlapping columns in A and B are the same, these shouldn&#39;t give a problem. In Python, I check for nans, extremes, lengths, and I even regex the floats to see if those fit in a decimal datatype. So those columns should not be an issue. The timestamp is just a date stamp and can be written as well. The X and Y columns are floating values and are also controlled with regex to fit in the decimal(7,2).\nThe issue probably isn&#39;t the data on itself, since the data can be written to the database when I redo the batch manually. What could be causing the fractional truncation? What could cause the deadlock error, is it even relevant? I&#39;m 99.9% sure nobody is reading from this table since I&#39;m one of the few that has access to it, and it&#39;s on the develop server. Is it because when I&#39;m writing those batches SQL Server is doing something on the background while I am writing the next batch to the table?\nAdditional information:\nThe data I&#39;m writing is around 8.5 million rows per quarter and around 14 columns. So nothing extreme.\nError:\n\nScript to write to database:\n\nPython 3.10.10\nsqlalchemy 1.4.47\nMicrosoft SQL Server 2019\nAdded DDL Table A (source table):\n\nTable B (destination table):\n\n",
            "excerpt": "In Python, I check for nans, extremes, lengths, <span class=\"highlight\">and</span> I even <span class=\"highlight\">regex</span> the floats to see if those fit in a decimal datatype. So those columns should not be an issue. &hellip; The timestamp is just a date stamp <span class=\"highlight\">and</span> can be written as well. The X <span class=\"highlight\">and</span> Y columns are floating values <span class=\"highlight\">and</span> are also controlled with <span class=\"highlight\">regex</span> to fit in the decimal(7,2). &hellip; ",
            "title": "Fractional truncation into deadlock SSMS"
        },
        {
            "tags": [
                "npm",
                "snyk"
            ],
            "question_score": 1,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 1,
            "is_answered": true,
            "question_id": 76767862,
            "item_type": "question",
            "score": 1,
            "last_activity_date": 1690360999,
            "creation_date": 1690342416,
            "body": "In my node.js project, I have dependency on . Since this package is archived now, I had to override one of it&#39;s dependencies (not sure if this is relevant). My package.json looks like this-\n\nWhen I run  to detect vulnerabilities, it shows the following-\n\nSo  is using , which should be updated. But if I run , the output is like this-\n\nSo  is not really dependant on that old version. However, the problem is not probably with . Just that somehow my  file is including an old version.\nIf I run , nothing happens - it&#39;s already up-to-date.\nIf I search  file for all reference to , delete those, and then run , it just goes back to the previous state.\nI also tried deleting the  folder and  file and ran  after cleaning cache. This seems to solve the problem, but that also updates the whole  file, which should be risky in production environment.\nAny suggestions how I can fix this? Thanks in advance.\n",
            "excerpt": "When I run snyk test to detect vulnerabilities, it shows the following-\n✗ Regular Expression Denial of Service (<span class=\"highlight\">ReDoS</span>) [High Severity][https://security.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908] in ansi-<span class=\"highlight\">regex</span> &hellip; If I search package-lock.json file for all reference to ansi-<span class=\"highlight\">regex</span>@2.1.1, delete those, <span class=\"highlight\">and</span> then run npm install, it just goes back to the previous state. &hellip; ",
            "title": "npm - a package&#39;s 6th level dependency is shown to be using outdated version by snyk"
        },
        {
            "tags": [
                "java",
                "regex",
                "regex-group",
                "microbenchmark",
                "recursive-backtracking"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 0,
            "is_answered": false,
            "question_id": 76314651,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1684844802,
            "creation_date": 1684844161,
            "body": "I have a regex in Java that matches zero or more whitespace characters, followed by a comma, followed by zero or more whitespace characters. To clean up the s I use the following:\n\nIf I understand correctly, this regex will backtrack if there is no comma in a given string. Say we have  (4 spaces between words, no comma), then:\n\nThe regex will start by trying to match the first , which succeeds by matching the four spaces after .\nThen it tries to match the comma, which fails because there is no comma.\nThe regex backtracks to the first  and decides to match three spaces, leaving one space for the comma. It tries to match the comma again, which fails because there is still no comma.\nIt continues the process of and tries again until it has exhausted all possibilities. In the end, the match fails as there is no comma in the string.\n\nI&#39;m looking for a version of this pattern that will prevent the backtracking. My idea was to use atomic groups, i.e.:\n\nTo test the approach, I wrote a simple JMH benchmark using a  that has 50000 spaces between  and , and no comma. On average, the approach with the atomic groups is 2x faster. This is of course better, but still unsatisfactory.\nBench result (see below for setup):\n\nEDIT: Oddly enough, according to the https://regex101.com/ debugger, the pattern  needs 86 steps to decide that there is no match, whereas the one that uses atomic groups 172. Consequently, the former shall be faster, so I&#39;m perplexed why the latter is quicker in Java.\n\nHere&#39;s the bench setup:\n\nAnd these dependencies to pom.xml:\n\n",
            "excerpt": "The <span class=\"highlight\">regex</span> backtracks to the first \\\\s* <span class=\"highlight\">and</span> decides to match three spaces, leaving one space for the comma. It tries to match the comma again, which fails because there is still no comma. &hellip; &gt;\\\\s*)&quot;, &quot;,&quot;);\n\nTo test the approach, I wrote a simple JMH benchmark using a String that has 50000 spaces between Hello <span class=\"highlight\">and</span> World, <span class=\"highlight\">and</span> no comma. &hellip; ",
            "title": "ReDoS-resistant regex for removing whitespaces around a comma"
        },
        {
            "tags": [
                "php",
                "regex",
                "security"
            ],
            "question_score": 1,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 0,
            "is_answered": false,
            "question_id": 76190100,
            "item_type": "question",
            "score": 1,
            "last_activity_date": 1683447197,
            "creation_date": 1683392285,
            "body": "Is there a way to validate a user-provided regex pattern to avoid Regex Denial-of-Service (ReDoS) or arbitrary code execution attacks, assuming that also the subject (second argument of preg_match) is user-provided? I would like to use it like below:\n\n",
            "excerpt": "Is there a way to validate a user-provided <span class=\"highlight\">regex</span> pattern to avoid <span class=\"highlight\">Regex</span> Denial-of-Service (<span class=\"highlight\">ReDoS</span>) or arbitrary code execution attacks, assuming that also the subject (second argument of preg_match) is &hellip; ",
            "title": "Validate user-provided regex to avoid ReDoS attacks"
        },
        {
            "tags": [
                "java",
                "regex",
                "denial-of-service"
            ],
            "question_score": 0,
            "is_accepted": false,
            "answer_id": 76009216,
            "is_answered": false,
            "question_id": 76009007,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1681416732,
            "creation_date": 1681414531,
            "body": "The &quot;vulnerability&quot; (such as it is) is not one of those chars, but the leading . tldr: you could change it to \nConsider an input string with none of the suspect characters, e.g. .\nIn trying to match this string against , the regex engine will attempt to match the leading  greedily, so it tries:\n\nThe result of the greedy matching up front is that the engine must backtrack repeatedly, so determining the lack of match takes time superlinear(?) in the length of the input. The regex analyser will be being very conservative when it comes to evaluating the &quot;risk&quot;.\nThe easy workaround is to use a non-greedy quantifier on the leading , i.e. . The regex engine does not backtrack, so the input is evaluated in linear time.\nOn a side-note, this type of &quot;potential ReDoS&quot; pattern is reminiscent to one that was reported in AngularJS&#39;s angular.copy a couple of weeks back (and indeed in lodash&#39;s clone machinery for RegExps, and probably countless other libraries that use the same quick trick to extract flags from the end of a stringified RegExp).\nUnrelated to the mechanics of this, I agree with rzwitserloot that this stuff tends to be a distraction from other more significant vulnerabilities. Maybe the real &quot;denial of service&quot; of each of these reports of a &quot;regular expression denial of service&quot; is the amount of time wasted every time while folks around the world scramble around trying to ascertain whether there&#39;s even an associated attack vector.\n",
            "excerpt": "The <span class=\"highlight\">regex</span> engine does not backtrack, so the input is evaluated in linear time. &hellip; On a side-note, this type of &quot;potential <span class=\"highlight\">ReDoS</span>&quot; pattern is reminiscent to one that was reported in AngularJS&#39;s angular.copy a couple of weeks back (<span class=\"highlight\">and</span> indeed in lodash&#39;s clone machinery for RegExps, <span class=\"highlight\">and</span> &hellip; ",
            "title": "Regex vulnerable to polynomial runtime"
        },
        {
            "tags": [
                "vuejs2",
                "npm-install"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 0,
            "is_answered": false,
            "question_id": 75520560,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1676983579,
            "creation_date": 1676982581,
            "body": "No matter what I do my VueJS solution will succeed with . The output I see is this:\n\nI have tried:\n\nBut I cannot determine what the core problem is. How can I update and resolve the dependencies?\nRunning  and  produces this:\n\nI don&#39;t know how to resolve all these dependency issues.\n",
            "excerpt": "How can I update <span class=\"highlight\">and</span> resolve the dependencies? &hellip; Running npm ci <span class=\"highlight\">and</span> npm audit fix --force produces this:\n# npm audit report\n\nansi-<span class=\"highlight\">regex</span>  4.0.0 - 4.1.0\nSeverity: high\nInefficient Regular Expression Complexity in chalk/ansi-<span class=\"highlight\">regex</span> - https://github.com/advisories &hellip; ",
            "title": "How to update dependencies of VueJS 2 solution?"
        },
        {
            "tags": [
                "javascript",
                "node.js",
                "mongodb"
            ],
            "question_score": 0,
            "is_accepted": true,
            "answer_id": 75486464,
            "is_answered": false,
            "question_id": 75485181,
            "item_type": "answer",
            "score": 0,
            "last_activity_date": 1676648981,
            "creation_date": 1676648981,
            "body": " (without quotes is a regular expression):\n\nNow if you want to construct a RegEx from a string you may want to consider using RegEx constructor:\n\nOr, you can read your filter as a string from your query parameters then use the other way of passing filters to MongoDB with :\n\n\nWARNING\nEither way please be careful when using such approaches as they may lead to ReDOS and/or NoSQL injection.\n",
            "excerpt": "filters to MongoDB with $<span class=\"highlight\">regex</span>:\nconst filter = pick(req.query, [&#39;name&#39;]); \nconst result = await projectService.queryProjects({&quot;name&quot;: {&quot;$<span class=\"highlight\">regex</span>&quot;: filter, &quot;$options&quot;: &quot;i&quot;}, options, req.user);\n\n\nWARNING &hellip; Either way please be careful when using such approaches as they may lead to <span class=\"highlight\">ReDOS</span> <span class=\"highlight\">and</span>/or NoSQL injection. &hellip; ",
            "title": "Pass API Filters to MongoDB Query"
        },
        {
            "tags": [
                "qt"
            ],
            "question_score": 50,
            "is_accepted": false,
            "answer_id": 28573370,
            "is_answered": false,
            "question_id": 4905222,
            "item_type": "answer",
            "score": 120,
            "last_activity_date": 1675790528,
            "creation_date": 1424216550,
            "body": "NOTE: This post has been edited incrementally over the years to be more accurate. Please see S.O. history for what has changed.\nI have spent over a decade developing on various C++ based games both 2D and 3D for a number of different engines both big and small and I have also had a short but rather intense run with Qt5 (1.5 years at the time of writing). So far Qt has blown me away with all its neatly stacked cross-platform and performance features and so I am planning on porting my biggest game project to Qt as soon as time lets me.\nTo be honest I am a bit confused myself as to why Qt is not more prevalent in games. I think the main reason is its rather crooked licensing history together with the fact that it just has not being marketed for use in games. Qt is after all made primarily  to ace at cross-platform UI + real-time graphics on many platforms from  embedded and up. Now that Qt has become it&#39;s own company and with the new QML/QtQuick features maybe there will be a boom of Qt based game soon, who knows? I sure hope more game developers will discover Qt and start using it in their projects.\nTo answer your question, I will try to match the offerings of Qt with the needs of different types of games.\nPerformance graphics for 2D\nIn traditional Qt there exists different abstractions for graphics. For some smaller embedded platforms it can rely on a simple 2D subsystem only. But for most desktop platforms (Windows/MacOSX/Linux) and mobile platforms (Android/OSX) the 2D abstraction rests neatly on top of a high-performance 3D stack based on OpenGL or OpenGL ES respectively.\nThis is a true gem, and makes graphics programming a joy thanks to the well thought out architecture that allows you to chose how high- or low- level you want to approach your graphics programming.\nThere are lots of classes that allow you to go about your drawing as usual with well known concepts like color, line thickness, and shape while knowing that i|t will all be 3D accelerated under the hood.\nhttp://doc.qt.io/qt-6/graphicsview.html\nhttp://doc.qt.io/qt-6/coordsys.html\nThen there is the whole new thing &quot;QtQuick&quot; or &quot;QML&quot;. A declarative language that together with java script provides the quickest and meanest way to chug out interactive UI and games that I know about on this planet. After I managed to make a full flight of piano keys in 5 lines of code and in under 15minutes I was sold.\nhttp://doc.qt.io/qt-6/qtquick-index.html\nPerformance graphics for 3D\nQt has traditionally had a very strong bond to OpenGL, and this bond has served Qt very well as OpenGL is portable and performant over a wide range of platforms. However with the realization that OpenGL is showing it&#39;s age, the ever present question of comparability with DirectX on the Microsoft platforms and the advent of new technologies like Vulkan and Metal, the Qt company has made the wise strategic move of generalizing the hardware abstraction layer, and from version 6, Qt now is no longer tied to OpenGL.\nWhile we wait, there is also nothing in Qt to hinder you from using DX together with Qt on the Microsoft platforms. Qt goes to great lengths to not interfere with other libraries on any platform, so it will work with a lot of other toolkits and engines, and you can even embed game engines based on OpenGL inside Qt by exposing Qt&#39;s OpenGL context directly. Also keeping the same code-base for a game that is ported to the two noteworthy mobile platforms with Qt will be much simpler without DX.\nBut, beyond all the convenience classes for managing OpenGL spesific features such as VBO, FBO, loading textures and shaders etc, there really isn&#39;t a full-blown 3D engine anywhere in Qt.\nUPDATE 2016-01-29: Since I first wrote this answer it has come to my atention that there is a great effort being made to provide a full-blown 3D engine in Qt. It is called Qt3D 2.0 and is a complete rewrite of the old Qt3D that was part of Qt4.x and that was part of only one release before it was removed due to political reasons (Nokia ditched Qt).\nIt has an impressive set of features and a lot of good thinking has gone into it&#39;s API to ensure that it can leverage the full potential of modern graphics hardware while staying flexible and performant. Another good news is that is in technology preview. This means that you can try it out today and it will be part of main-line Qt soon. You can read more about it here.\nMath\nAs part of the 3D stack, Qt has a full set of performance math routines such as matrix, vector, quaternions, point, rect etc.\nThe common stl math functions such as sqrt, floor, sin etc. are also wrapped in a platform-independence layer.\nhttp://doc.qt.io/qt-6/qtmath.html\nThere are no support for advanced math like full blown physics engine, collision detection or response.\nFor that you might be interested in this:\nhttps://github.com/junggon/gear\nAssets management\nQt has a fully fledged resource management system that compiles resources into your binary. This is cross platform and supports any file type you need with special support for common image formats, svg, sounds, fonts, HTML, CSS. And loading and using resources is really simple since all of Qt&#39;s file handlign orutines accept URLs that point to these resources. Really awesome.\nUser interfaces\nGUI code is Qt&#39;s forte. It has great tools for working with GUIs that for some small&#39;ish 2D games will actually be usable as level editors.\nCross platform support\nUPDATE 2016-01-29: It is part of the core values for Qt to be platform agnostic. Qt supports the major desktop platforms, the major mobile platforms and a bunch of embedded hardware that you never heard of.  Please see the official list of community supported (free/open source) platforms here. It will allow you to bring your mostly unchanged code base to all platforms you like, saving you a lot of time, money and effort the day you decide to make the &quot;iOS version&quot;.\nPlatform integration\nQt has wrapped all platform integration in a cross-platform way. This includes:\n\nLauncher icons\nConfiguration file (with properly abstracted platform specifics like location and format)\nPopups\nClipboard management\nDrag and drop\nFullscreen/imersive mode switching.\nMultiple display support\nTooltips\nPlatform look and feel\n\n2D Animation\nQt features a full framework for working with state machines. On top of this there sits a full framework for animating properties that can be used for making interactive UI in 2D (or even 3D if you play your cards right). It has all the stuff you expect like easing, automatic state transition and tons of convenience wrappers and ways of doing interresting stuff. It&#39;s like working with jQuery but in C++. For some games, this is all you need.\nhttp://doc.qt.io/qt-6/qtquick-statesanimations-animations.html\nContainers\nQt has a bunch of STL like container classes with extensions to accommodate Qt specific features. These classes include everything from Lists to maps to arrays and buffers.\nhttp://doc.qt.io/qt-6/containers.html\nStrings\nQt&#39;s string class is my favourite of any language. It has its quirks, but it gives you a ton of performance and features, and as usual its cross-platform together with all it&#39;s friends:\nhttp://doc.qt.io/qt-6/string-processing.html\nTimers, threads and events\nThe whole of Qt framework is implemented around an asynchronous architecture based on event-loops with light-weight events called &quot;signals&quot;.\nhttp://doc.qt.io/qt-6/qtqml-syntax-signals.html\nQt supports multiple levels of concurrency from low-level threads, through managed thread pools to modern map-reduce and &quot;futures&quot;. It also has cross-platform high-performance locking mechanism such as mutecies, locks, wait conditions, lock free stuff, atomic operations and a whole bunch of other stuff that I didn&#39;t get a chance to check out yet.\nhttp://doc.qt.io/qt-6/examples-threadandconcurrent.html\nOf course Qt has support for timers that fit well into all this with a lot of convenience features such as adjusting the precision, triggering single-shot etc.\nhttp://doc.qt.io/qt-6/timers.html\nInput\nInput from touch screens, mice and keyboards is handled using the event architecture, and Qt really has this wrapped up in a basket. There was experimental support for joysticks and gamepads at one point, but it was removed in Qt6.\nBut there are several Qt-aligned project that seem to add joystick/gamepad supoport like this.\nhttp://doc.qt.io/qt-6/eventsandfilters.html\nThere is also support for sensors like position, pressure, compass, rotation, temperature, so you can make never-ball clones too.\nhttp://doc.qt.io/qt-6/qtsensors-index.html\nAnd there is support for blue-tooth for connecting and sharing game data over the air without access to wifi.\nhttp://doc.qt.io/qt-6/qtbluetooth-index.html\nAnd there is camera support for whatever you might want to use that for in a game.\nhttp://doc.qt.io/qt-6/cameraoverview.html\nAll cross-platform.\nScripting\nQt has an embedded high-performance ECMA (a.k.a. java script) engine tied into its core. Oh and you get a tightly embedded port of google web-kit included as well, if you need it.\nhttps://doc.qt.io/qt-6/qtjavascript.html\nMedia playback\nQt wraps gstreamer and other media libraries to support play back of media such as video and sound. It allows the developer to chose on which level they want to intearact with media. On the high level you can just put a widget and run .play() on the low level you get access to buffers of video and audio for your processing pleasure.\nhttp://doc.qt.io/qt-6/multimediaoverview.html\nMedia encoding\nDepending on the active back-end Qt also gives you access to encode streams to network/disk etc.\nUtility classes\nWhere do I start?\n\nMD5/SHA other secure hash algorithms\nCompression/decompression algorithms\nEncryption/decryption algorithms\nFile handling both blocking, non-blocking, mapped etc.\nFile system handling such as copy, move, rename of files\nFile alteration monitoring\nHTTP client\nHigh performance socket programming\nSynthetic UI events generation\nTime and date\nDNS access\nLogging\nError messages\nMIME and URL processing\njson parser/generator\nGesture recognition\nCompiled regex\nSerial IO\nXML parser/generator\nSSL\nUndo/Redo\n\nThe list really goes on and on... See for your self here:\nhttp://doc.qt.io/qt-6/classes.html\nInternationalization\nOut-of-the-box internationalization through the use of ICU with all the advanced features such as RTL support in text widgets etc.\nhttp://doc.qt.io/qt-6/internationalization.html\nUpdates / plug-ins\nQt has a plug-in architecture. That means you can split your executable into bits and update them separately, reloading each bit dynamically at run-time.\nhttp://doc.qt.io/qt-6/plugins-howto.html\nUnit testing\nQt has it very own unit testing framework built right in. What sets it apart is that it is tightly integrated with Qt and supports visual testing of user interfaces. You can simulate key-presses and mouse clicks, check for the presence of widgets and states etc.\nIt also has modes for profiling, bench-marking, data-driven testing and more.\nThis post is getting kind of long so I won&#39;t go into more detail.\nhttp://doc.qt.io/qt-6/qttest-index.html\nStability\nQt was first released in 1995 and has thus had a long time to stabilize. It has a huge set of regression tests that is run before every release and it is thoroughly tested on a bunch of compilers, platforms and devices. For some reason this is not on the top of many game developer&#39;s lists.\nhttp://en.wikipedia.org/wiki/List_of_Qt_releases\nDocumentation\nQt has really good documentation, and it is continuously improving. If you clicked some of my links you would already know.\nCommunity\nSince Qt has been around for so long a large community of experienced users has formed. You will find blog posts, wikis and forums in many languages and rich with knowledge of any kind of issue you might be working with. Here is a list:\nhttps://wiki.qt.io/Online_Communities\nThis turned out to be one hell of a long post with mostly Qt PROs, but I figure this is what it takes to judge a platform before you test it out. Good luck on your project!\n",
            "excerpt": "I have spent over a decade developing on various C++ based games both 2D <span class=\"highlight\">and</span> 3D for a number of different engines both big <span class=\"highlight\">and</span> small <span class=\"highlight\">and</span> I have also had a short but rather intense run with Qt5 (1.5 years &hellip; messages\nMIME <span class=\"highlight\">and</span> URL processing\njson parser/generator\nGesture recognition\nCompiled <span class=\"highlight\">regex</span>\nSerial IO\nXML parser/generator\nSSL\nUndo/<span class=\"highlight\">Redo</span>\n\nThe list really goes on <span class=\"highlight\">and</span> on... &hellip; ",
            "title": "Will Qt be a good choice for a game?"
        },
        {
            "tags": [
                "javascript",
                "node.js",
                "reactjs",
                "npm"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 1,
            "is_answered": true,
            "question_id": 75039131,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1673087230,
            "creation_date": 1673081931,
            "body": "I am trying to deploy the following git repo locally:\nhttps://github.com/maxie112/gatsby-ecommerce-theme\nI am following the exact instructions on Mac OS.\n\nMy two cents:\nIt looks like there was an error while trying to install the sharp and msgpackr-extract packages, which may be causing issues with your npm package installation. The error message mentions that the directories for these packages could not be removed because they were not empty.\nOne potential cause for this error could be that these directories were not properly cleaned up during a previous installation attempt, and there are still files present in them. Another possibility is that some processes or programs may be holding onto files in these directories, preventing them from being deleted.\nPlease help\n",
            "excerpt": "Upgrade to @latest\nnpm WARN deprecated devcert@1.2.0: critical <span class=\"highlight\">regex</span> denial of service bug fixed in 1.2.1 patch\nnpm WARN deprecated babel-eslint@10.1.0: babel-eslint is now @babel/eslint-parser. &hellip; <span class=\"highlight\">ReDos</span> regression when used in a Node.js environment. &hellip; ",
            "title": "Why are npm install packages not working?"
        },
        {
            "tags": [
                "c++",
                "cmake"
            ],
            "question_score": 0,
            "is_accepted": false,
            "answer_id": 74991188,
            "is_answered": false,
            "question_id": 74987886,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1672772879,
            "creation_date": 1672737042,
            "body": "The  would make sense if your directory tree would look a bit different. But because you have seperated the header files from the implementation files - it would only lead to bad practice, unless you redo your whole directory tree.\nEDIT: The  shouldn&#39;t be used in this case as it was intended for literally installing a whole directory. That means copying all the files from that given directory. An example of such use would be a folder with  files that are needed for icons in your program. Thus (out of experience) I do not recommend it&#39;s usage for the installation of headers.\nI&#39;ve found/created and stored two macros that help me quickly solve issues across different  that I come across.\nI assume you wish to install the library(/ies) after you build them and then use them in another project, while preserving the specified structure. I&#39;ve worked in one company where we couldn&#39;t change the folder structure, but they didn&#39;t mention anything about the install folder. The source folder resembled the one you posted. Hence after some time I got ahold of this macro and it might be useful for you too (regex might&#39;ve changed across versions hence it might need some updating):\n\nWhat this macro does is to preserve the  structure of the include files in the install directory. Normally you would have to type it out yourself, this does it for you.\n\n\nBonus\nOfcourse I once had a different problem as well (this is most likely not your case) where within the same company, they wanted to build the files from source while developing it and didn&#39;t understand that they no longer can use system paths in the  directives, unless they do some changes within the  files. If this is your case then this function solves this for you (so you don&#39;t have to move a finger):\n\nAnd then you can easily...\n\n",
            "excerpt": "Hence after some time I got ahold of this macro <span class=\"highlight\">and</span> it might be useful for you too (<span class=\"highlight\">regex</span> might&#39;ve changed across versions hence it might need some updating):\nmacro(install_directory_headers_macro HEADER_LIST &hellip; )\n\nforeach(HEADER ${${HEADER_LIST}})\n    #This gets 2 matches DIR <span class=\"highlight\">and</span> HEADER (folder path <span class=\"highlight\">and</span> header file name)\n    string(<span class=\"highlight\">REGEX</span> MATCH &quot;(.*\\/*\\\\*)[\\/\\\\]&quot; DIR ${HEADER})\n    install(FILES ${HEADER} DESTINATION &hellip; ",
            "title": "Installing nested includes with CMake"
        },
        {
            "tags": [
                "regex",
                "notepad++"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 1,
            "is_answered": false,
            "question_id": 74567200,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1669452859,
            "creation_date": 1669333947,
            "body": "Have I found a bug in Notepad++ or am I doing something wrong?\nBackground info\n(Please note that I do know that one are supposed not to use Regex parsing HTML, but I think this is a special case that should work - without the possible Notepad++ bug ;-)\nI have exported Apple Notes as HTML using Exporter 3.0 on a Mac. In the HTML output every Note line is between  -  elements and also &quot;header/title lines&quot; like  -  or  -  etc. Each &quot;header/title line&quot; is often split in several unnecessary HTML header elements as in the following simplified example.\n\nThis HTML can&#39;t be imported into OneNote giving the same result as seen in Apple Notes i.e. each &quot;header/title&quot; line is split in multiple lines. That&#39;s true even when changing the  block elements to inline elements using an initial  statement. (Maybe that is a bug or restriction in OneNote, but I need to find a workaround.)\nTherefore, I need to clean the example HTML output above from the unnecessary HTML header  or  (all but the first in every line) and  or  (all but the last in every line), to get the following result that can be imported to OneNote without problem.\n\nSolution ? - Developed Regex\nI&#39;m quite new to Regex, especially advanced Regex, but I think I have found a way to clean the erroneous HTML code using TWO different Regex expressions as follows.\nBoth works well when tested using regex101.com, I think.\n\nThe first one is used to remove unnecessary  or  elements and is a Positive Lookahead function (it works both in regex101 and in Notepad++)\n(&lt;/h[1-6]&gt;)(?=.*?\\1)\n(Demo)\n\n\nPicture 1 shows a working Find All + Mark All in Notepad++\n\nPicture 2 shows a working Replace All\n\n\nThe Second one used to remove unnecessary  or  elements and is a Positive Lookbehind function (it works in regex101 but NOT fully in Notepad++)\n(?&lt;=(&lt;(h[1-6])&gt;))(?:.*?)\\K\\1\n(Demo)\n\n\nPicture 3 shows a working Find All + Mark All in Notepad++ = All 8 occurrences found\n\nPicture 4 shows a NOT working Replace All in Notepad++ = Only 5 occurrences (of the 8 found) are replaced\n\n\nIf I redo the same Replace All a second time 2 of the\nremaining 3 occurrences are replaced.\nIf I redo the same Replace    All a third time the last\nremaining occurrence is replaced.\n\nBUG ?\nIs this a bug in Notepad++ or is this behavior normal or am I doing something strange here? Please help me understand.\n",
            "excerpt": "- Developed <span class=\"highlight\">Regex</span>\nI&#39;m quite new to <span class=\"highlight\">Regex</span>, especially advanced <span class=\"highlight\">Regex</span>, but I think I have found a way to clean the erroneous HTML code using TWO different <span class=\"highlight\">Regex</span> expressions as follows. &hellip; The first one is used to remove unnecessary &lt;/h1&gt; or &lt;/h2&gt; elements <span class=\"highlight\">and</span> is a Positive Lookahead function (it works both in regex101 <span class=\"highlight\">and</span> in Notepad++)\n(&lt;/h[1-6]&gt;)(?=.*? &hellip; ",
            "title": "Possible Bug using Regex in Notepad++ with Replace All?"
        },
        {
            "tags": [
                "java",
                "spring",
                "java-8",
                "cron",
                "checkmarx"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 0,
            "is_answered": false,
            "question_id": 74447391,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1668522992,
            "creation_date": 1668522992,
            "body": "I have a Scheduler with a cron expression as shown below.\n\nCheckmarx complains that Potential RedOs, - &quot;The application uses a dangerous regex pattern &quot;&quot;0 0 5 * * SUN&quot;&quot;, at line y of class X, to search and compare user input with &quot;&quot;0 0 5 * * SUN&quot;&quot;, at line y of class X. How do we solve this?\n",
            "excerpt": "Sunday at 5 o&#39;clock\n    public void checkAuditSizeAndSendEmail()  {\n        log.info(&quot;AuditSizeMonitorScheduler::Scheduler::Start&quot;);\n        //other code\n     }\n   }\n\nCheckmarx complains that Potential <span class=\"highlight\">RedOs</span> &hellip; , - &quot;The application uses a dangerous <span class=\"highlight\">regex</span> pattern &quot;&quot;0 0 5 * * SUN&quot;&quot;, at line y of class X, to search <span class=\"highlight\">and</span> compare user input with &quot;&quot;0 0 5 * * SUN&quot;&quot;, at line y of class X. &hellip; ",
            "title": "Potential ReDOs - The application uses a dangerous regex pattern"
        },
        {
            "tags": [
                "reactjs",
                "npm",
                "gatsby"
            ],
            "question_score": 3,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 2,
            "is_answered": true,
            "question_id": 71552122,
            "item_type": "question",
            "score": 3,
            "last_activity_date": 1666263973,
            "creation_date": 1647828364,
            "body": "I am trying to set up my first Gatsby website. After running , I do  (just like the website https://www.gatsbyjs.com/starters/gatsbyjs/gatsby-starter-hello-world/ says) to download the hello world starter. When I run  I see the following error\n\nI tried multiple things, including , which literally destroyed everything and I had to reinstall node, react and gatsby-cli. What could be causing this error? I am also using npm version 8.5.0 and node version 16.14.2.\nPlease find attached a complete copy of my terminal:\n\n",
            "excerpt": "<span class=\"highlight\">and</span> gatsby-cli. &hellip; gatsby@2.32.13, which is a breaking change\nnode_modules/yurnalist/node_modules/ansi-<span class=\"highlight\">regex</span>\n  strip-ansi  4.0.0 - 5.2.0\n  Depends on vulnerable versions of ansi-<span class=\"highlight\">regex</span>\n  node_modules/yurnalist/node_modules &hellip; ",
            "title": "Error 11903 when developing first gatsby project"
        },
        {
            "tags": [
                "python-3.x",
                "parsing",
                "networking",
                "pyparsing"
            ],
            "question_score": 1,
            "is_accepted": true,
            "answer_id": 73315689,
            "is_answered": false,
            "question_id": 73307625,
            "item_type": "answer",
            "score": 2,
            "last_activity_date": 1660196008,
            "creation_date": 1660196008,
            "body": "\nPrimarily, pyparsing is slower because it is running in pure Python. Python&#39;s regex engine is implemented in C, so is inherently faster. Also, pyparsing&#39;s matching logic is broken up across many objects each with its own separate parse function to nibble away at the input string. re&#39;s implement their logic in a single C function call.\nI tried redoing a few of your low-level terms using pyparsing  instead of  (though Word uses a regex internally anyway, so unlikely to gain much). I do note that your terms aren&#39;t really doing much pattern matching in their parsing - for instance using  to parse a time given in the form  is a bit of cheating, since that term would also match &quot;::::&quot;, &quot;:0:0:&quot;, and any integer. Similar for defining IpAddress as any word composed of digits and &quot;.&quot;. If the re&#39;s you are comparing to are as tolerant of badly formatted data, then I&#39;m sure they will be fast.\nOn my machine, pyparsing parses 1000 elements per second, so about 40 seconds for your list of 40,000 elements. If you are processing that router output once a day, 40 seconds seems fast enough. If you are doing it once a minute, then pyparsing will not be the right tool.\n\n",
            "excerpt": "Python&#39;s <span class=\"highlight\">regex</span> engine is implemented in C, so is inherently faster. &hellip; I tried redoing a few of your low-level terms using pyparsing <span class=\"highlight\">Regex</span> instead of Word(word_chars) (though Word uses a <span class=\"highlight\">regex</span> internally anyway, so unlikely to gain much). &hellip; ",
            "title": "Why is PyParsing taking so much longer to parse vs RegEx? Is it because it creates objects instead of dicts?"
        },
        {
            "tags": [
                "regex"
            ],
            "question_score": -1,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 1,
            "is_answered": false,
            "question_id": 72613594,
            "item_type": "question",
            "score": -1,
            "last_activity_date": 1655200699,
            "creation_date": 1655194450,
            "body": "Writing a regex that&#39;ll validate that some inputs are known link formats which I use on my site, an example would be \nThe requirements are\n\nleading slash\nthe path just contains alfanumerics, dashes and slashes\nqueryparams are allowed\n\nMy regex is\n\nThis kinda works but it&#39;s not optimized.\nGithub CodeScan shows the warning &#39;Polynomial regular expression&#39;\nhttps://codeql.github.com/codeql-query-help/java/java-polynomial-redos/\nI assume that&#39;s because the groups  and  potentially could overlap and cause slowness. But I&#39;m unsure of how to improve it while still allowing queryparams.\nHow would I optimize the regex?\nHere&#39;s some testdata I&#39;ve used\n\nPS: my current regex does allow multiple slashes after eachother, which is undesirable so preventing that would also be a bonus.\n",
            "excerpt": "test=b\nThe requirements are\n\nleading slash\nthe path just contains alfanumerics, dashes <span class=\"highlight\">and</span> slashes\nqueryparams are allowed\n\nMy <span class=\"highlight\">regex</span> is\n/^((\\/)[\\dA-Za-z-]+)*(\\/)?([&amp;? &hellip; Github CodeScan shows the warning &#39;Polynomial regular expression&#39;\nhttps://codeql.github.com/codeql-query-help/java/java-polynomial-<span class=\"highlight\">redos</span>/\nI assume that&#39;s because the groups [\\dA-Za-z-] <span class=\"highlight\">and</span> [&amp;? &hellip; ",
            "title": "Regex for URL path and query. (CodeScan warns of &#39;Polynomial regular expression&#39;)"
        },
        {
            "tags": [
                "regex",
                "validation",
                "email"
            ],
            "question_score": 17,
            "is_accepted": false,
            "answer_id": 48233817,
            "is_answered": false,
            "question_id": 48055431,
            "item_type": "answer",
            "score": 9,
            "last_activity_date": 1652191667,
            "creation_date": 1515790087,
            "body": "In addition to other answers, I would like to point out, that regex engines that use backtracking are susceptible to ReDoS - regex denial of service attacks. The attack is based on the fact that many non-trivial regular expressions have inputs that can take an extraordinary amount of CPU cycles to produce a non-match.\nCrafting such an input might cause trouble to the availability of the site even with small botnet.\nMitigations of the issue:\n\nit is often possible to rewrite the regex expression to avoid catastrophic backtracking; or:\nusing a regex engine without support for backtracking - while most support it, engines without such support do exist - a notable example would be the RE2 regex engine used by Go/Golang.\n\nFor more information: &quot;Regular Expressions Denial of the Service (ReDoS) Attacks&quot;\n",
            "excerpt": "In addition to other answers, I would like to point out, that <span class=\"highlight\">regex</span> engines that use backtracking are susceptible to <span class=\"highlight\">ReDoS</span> - <span class=\"highlight\">regex</span> denial of service attacks. &hellip; For more information: &quot;Regular Expressions Denial of the Service (<span class=\"highlight\">ReDoS</span>) Attacks&quot; &hellip; ",
            "title": "Can it cause harm to validate email addresses with a regex?"
        },
        {
            "tags": [
                "javascript",
                "regex",
                "security",
                "pattern-matching",
                "ddos"
            ],
            "question_score": 5,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 2,
            "is_answered": true,
            "question_id": 63127145,
            "item_type": "question",
            "score": 5,
            "last_activity_date": 1650733280,
            "creation_date": 1595911252,
            "body": "I&#39;ve recently faced with some redos attack issues.\nExplain in simple steps:\n: it means the attacker can put some malicious/crafted inputs to bring your server down by making it impossible to stop to finding the correct pattern, so it takes your whole CPU, and finally causing internal server error.\ne.g. if you have a pattern like  , and the attacker put a malicious input like  it will cause a catastrophic error:\n\n\nThe issue comes to the surface when using , quantifying over a sub-expression which can, itself, match in many ways in the same position. as you can see in the below picture(https://jex.im/regulex):\n\nThere are many solutions for many pattern matching problems, e.g if you want a pattern for  there are tons of answers(also in the StackOverflow), which are good answers but almost vulnerable to this kind of attack.\nI&#39;ve found some useful tools like : https://www.npmjs.com/package/safe-regex , which works good but have false-positives and false negatives. As you already know, Safe Regex Patterns from Redos Attack are hard to find.\nNeed\nI&#39;m asking, is there any list of safe regex patterns out there to use for common uses like passwords, URLs,etc.?\nUseful resource\nUseful for only js platform,\nhttps://github.com/validatorjs/validator.js\nUpdate\nI&#39;ve struggled with this issue and found there are some libraries like , and , which are good tools, and found out that java solves this problem from v9 and erlang too, but in javascript regex engine still has the problem in chrome, but in firefox, it will throw an error which is good to handle in try cache,  and finally, I&#39;ve put my tries to make a list for this purpose at this Github link:\nhttps://github.com/phoenixdevio/safe-regex-patterns\nstill couldn&#39;t found a good solution. although I know there may be a solution using the . it will be great if anyone could help with this to make the list more and better.\n",
            "excerpt": "I&#39;ve recently faced with some <span class=\"highlight\">redos</span> attack issues. &hellip; As you already know, Safe <span class=\"highlight\">Regex</span> Patterns from <span class=\"highlight\">Redos</span> Attack are hard to find.\nNeed\nI&#39;m asking, is there any list of safe <span class=\"highlight\">regex</span> patterns out there to use for common uses like passwords, URLs,etc.? &hellip; ",
            "title": "Safe regex patterns from ReDos attack"
        },
        {
            "tags": [
                "javascript",
                "ajax",
                "filenames",
                "file-type",
                "content-disposition"
            ],
            "question_score": 131,
            "is_accepted": false,
            "answer_id": 67994693,
            "is_answered": false,
            "question_id": 40939380,
            "item_type": "answer",
            "score": 28,
            "last_activity_date": 1649865494,
            "creation_date": 1623800785,
            "body": "If you want to get the filename and support both those weird url encoded UTF-8 headers and the ascii headers, you can use something like this\n\nA couple of notes:\n\nthis will take the value of the UTF-8 filename, if set, over the ascii name\non download, your browser may further alter the name to replace certain characters, like , with  (Chrome)\nthe ascii pattern works best for quoted file names, but supports unquoted values. In that case it treats all text after the  and before the either the next  or the end of the header value as the file name.\nThis does not clean up path information. If you are saving the file from a website, that&#39;s the browser&#39;s job, but if your using this in the context of a node app or something similar, be sure to clean up the path information per the OS and leave just the filename, or a crafted file name might be used to overwrite a system file (think of a file name like )\n\nMDN Content Disposition Header\n",
            "excerpt": "|$)/i;\n\n    let fileName: string = null;\n    if (utf8FilenameRegex.test(disposition)) {\n      fileName = decodeURIComponent(utf8FilenameRegex.exec(disposition)[1]);\n    } else {\n      // prevent <span class=\"highlight\">ReDos</span> &hellip; attacks by anchoring the ascii <span class=\"highlight\">regex</span> to string start <span class=\"highlight\">and</span>\n      //  slicing off everything before &#39;filename=&#39;\n      const filenameStart = disposition.toLowerCase().indexOf(&#39;filename=&#39;);\n      if (filenameStart &hellip; ",
            "title": "How to get file name from content-disposition"
        },
        {
            "tags": [
                "node.js",
                "npm",
                "package.json",
                "package-lock.json",
                "npm-audit"
            ],
            "question_score": 1,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 1,
            "is_answered": true,
            "question_id": 71788496,
            "item_type": "question",
            "score": 1,
            "last_activity_date": 1649379508,
            "creation_date": 1649363000,
            "body": "I got some vulnerabilities resolved in my Node.js project by forcing some nested dependency updates but I need help understanding what&#39;s actually happening behind the scene of this improvement.\nHere is my original &quot;package.json&quot;\n\nWhen I did &quot;npm install&quot; and then &quot;npm audit&quot;, I got\n\n32 vulnerabilities (5 low, 8 moderate, 9 high, 10 critical)\n\nHere is the full report\n\nI added an &quot;overrides&quot; section to &quot;package.json&quot; to force some nested dependency update and improve the vulnerability report. Here is the new &quot;package.json&quot;\n\nBut I still got the same vulnerability report.\nThen in addition to &quot;overrides&quot; in &quot;package.json&quot;, based on a suggestion on another question here on Stack Overflow, I also modified &quot;package-lock.json&quot; with just this block bellow that doesn&#39;t even look like a normal structure of what we usually have in &quot;package-lock.json&quot;\n\nNow if I run &quot;npm install&quot; and then &quot;npm audit&quot;, I get a much better report like this\n\n8 vulnerabilities (4 low, 1 moderate, 3 high)\n\nHere is the full improved report\n\nIf I either remove the &quot;overrides&quot; section in &quot;package.json&quot; or not modify &quot;package-lock.json&quot; like I mentioned above I won&#39;t get the vulnerability report improved. Looks like I need  both.\nEven if I do &quot;npm install&quot; again, all the vulnerabilities will get back into the report. And I really don&#39;t understand why.\nBut the main confusion is: how that modification I made to &quot;package-lock.json&quot; helps with a better vulnerability report. I know &quot;npm install&quot; regenerates &quot;package-lock.json&quot; and what I added there should be lost. Does &quot;npm install&quot; consider the dependency I manually added to &quot;package-lock.json&quot; before regenerating it? And why this should matter when I have all the dependencies overridden in my &quot;package.json&quot;.\nAny help would be appriciated!\n",
            "excerpt": "/node_modules/eslint/node_modules/ansi-<span class=\"highlight\">regex</span>\nnode_modules/sails-hook-grunt/node_modules/inquirer/node_modules/ansi-<span class=\"highlight\">regex</span>\nnode_modules/sails-hook-grunt/node_modules/string-width/node_modules/ansi-<span class=\"highlight\">regex</span> &hellip; Depends on vulnerable versions of growl\n Depends on vulnerable versions of mkdirp\n node_modules/sails-hook-grunt/node_modules/mocha\n\ndiff &lt;3.5.0\nSeverity: high\nRegular Expression Denial of Service (<span class=\"highlight\">ReDoS</span> &hellip; ",
            "title": "Overriding nested dependencies in Node.js projects to improve &quot;npm audit&quot; vulnerability report"
        },
        {
            "tags": [
                "split",
                "vbscript",
                "instr"
            ],
            "question_score": 1,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 1,
            "is_answered": false,
            "question_id": 71309116,
            "item_type": "question",
            "score": 1,
            "last_activity_date": 1646211853,
            "creation_date": 1646140827,
            "body": "I have a question that could be easy or not.\nI will explain further: I have a string like this:\n\nNow, my objective is to put those in an array separately like:\n\nand then reshape and redim the array to keep only, let&#39;s say, the strings starting with fas....\nWhat is the easiest method? Spliting? regEx? inStr?\nI have the following code:\n\nBut retrieving the data using:\n\nI get undesired results:\n\nOne thing most important: I want my FUNCTION only to deal with putting the detached string in arrays and dealing with it after in another portion of code.\nAfter the array hold everything like I want it, I want only the array to keep this data:\n\nWhat I am doing wrong? Remember please. This is vbscript, not VB.Net.\nThanks in advance I think this could be very easy but I am not quite trying to accomplish it after some hours redoing and checking code.\n",
            "excerpt": "then reshape <span class=\"highlight\">and</span> redim the array to keep only, let&#39;s say, the strings starting with fas.... &hellip; <span class=\"highlight\">regEx</span>? inStr? &hellip; ",
            "title": "VBScript - Spliting a String with 2 target chars, turning them in composite Array and then removing those unnecessary from the array"
        },
        {
            "tags": [
                "node.js",
                "reactjs",
                "graphql",
                "gatsby"
            ],
            "question_score": 1,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 0,
            "is_answered": false,
            "question_id": 70745411,
            "item_type": "question",
            "score": 1,
            "last_activity_date": 1642690651,
            "creation_date": 1642441059,
            "body": "When I run gatsby build/develop I get multiple identical errors\n\nI ran &quot;node --trace warnings ...&quot; and here is the output:\n\nLooking through similar posts, I have gone though a couple of suggested solutions but nothing has worked yet.\nAnybody run into the same issue with Gatsby?\nEDIT 1: Here is the package.json and gatsby-config.js\npackage.json :\n\ngatsby-config.js :\n\nEdit 2:\nnpm audit report is showing multiple vulnerabilities.  doesn&#39;t work and somehow downgrades many of the dependencies in package.json and breaks the code completely.\n\n",
            "excerpt": "gatsby@2.19.38, which is a breaking change\nnode_modules/ansi-<span class=\"highlight\">regex</span>\n  strip-ansi  4.0.0 - 5.2.0\n  Depends on vulnerable versions of ansi-<span class=\"highlight\">regex</span>\n  node_modules/strip-ansi\n    gatsby  2.3.24-ink.60 - 2.3.24 &hellip; audit fix`\nnode_modules/object-path\n  graphql-compose  0.1.0 - 1.5.1 || 7.24.1 - 9.0.2\n  Depends on vulnerable versions of object-path\n  node_modules/graphql-compose\n\nws  7.0.0 - 7.4.5\nSeverity: moderate\n<span class=\"highlight\">ReDoS</span> &hellip; ",
            "title": "Error: MaxListenersExceededWarning: Possible EventEmitter memory leak detected"
        },
        {
            "tags": [
                "javascript",
                "regex",
                "sonarqube"
            ],
            "question_score": 17,
            "is_accepted": true,
            "answer_id": 61527326,
            "is_answered": false,
            "question_id": 61478960,
            "item_type": "answer",
            "score": 37,
            "last_activity_date": 1641911198,
            "creation_date": 1588261347,
            "body": "Hotspot vs. Vulnerability\nFirst of all note that SonarQube is informing you about a security hotspot, not a vulnerability. What that means is (quoting from the docs):\n\nA Security Hotspot highlights a security-sensitive piece of code that the developer needs to review. Upon review, you&#39;ll either find there is no threat or you need to apply a fix to secure the code.\n[...]\nWith a Hotspot, a security-sensitive piece of code is highlighted, but the overall application security may not be impacted. It&#39;s up to the developer to review the code to determine whether or not a fix is needed to secure the code.\n\nThe important takeaway here is that SonarQube is not telling you that there is something wrong. It&#39;s telling you that you should look carefully at the code to determine whether something is wrong.\nIn other words it&#39;s telling you that your regex may be vulnerable to ReDoS attacks, not that it actually is. If you review the code and determine that there is no vulnerability, it is perfectly fine to just dismiss the issue without changing anything.\nSo why exactly is SonarQube telling you to review this code?\nSonarQube doesn&#39;t actually detect whether a regular expression is vulnerable to ReDoS or not (that&#39;s why it&#39;s labelled as a security hotspot, not a vulnerability). Instead it flags all non-trivial regular expressions and reminds you to review them to determine whether they&#39;re vulnerable or not. As explained in the documentation of the rule, it considers any regex as non-trivial that contains more than one occurrence of any of the characters .\nSince both of your regular expressions are non-trivial by that criteria, both are flagged.\nUpdate: The above applies to the ReDoS rule that was around when this answer was written. This rule has been deprecated in the mean time and replaced with a new rule that should only complain about regular expressions that actually have a superlinear runtime. The new rule does not complain about the regex in this question.\nSo is your code vulnerable?\nNo, neither of your regular expressions are vulnerable. In fact the only repetition operator used in either expression is  and since you provide an upper bound in all cases, there isn&#39;t even any unbounded repetition.\nHowever, I&#39;d say your first regex is complicated enough to be a readability and maintenance nightmare. So you should consider replacing it with another approach (such as splitting the string into individual numbers and checking that each number is in the desired range).\nSo what should you do?\nHaving determined that the regular expressions are not vulnerable, you should dismiss the hotspot.\nIn the comments it was pointed out, that the message will go away if you split the regex string into multiple concatenated strings or move it into a variable. The reason that works is simply that it tricks SonarQube into not finding the regex. So that change wouldn&#39;t make your code any better or safer, it would just confuse SonarQube and is in no way preferable to just dismissing the message. It is generally not advisable to obfuscate your code just to make your static analysis tools shut up.\n",
            "excerpt": "In other words it&#39;s telling you that your <span class=\"highlight\">regex</span> may be vulnerable to <span class=\"highlight\">ReDoS</span> attacks, not that it actually is. &hellip; However, I&#39;d say your first <span class=\"highlight\">regex</span> is complicated enough to be a readability <span class=\"highlight\">and</span> maintenance nightmare. &hellip; ",
            "title": "SonarQube showing Regular expression Denial of Service (ReDoS)"
        },
        {
            "tags": [
                "python",
                "format",
                "locale",
                "number-formatting",
                "digit-separator"
            ],
            "question_score": 66,
            "is_accepted": false,
            "answer_id": 49868510,
            "is_answered": false,
            "question_id": 5513615,
            "item_type": "answer",
            "score": 2,
            "last_activity_date": 1639126424,
            "creation_date": 1523928708,
            "body": "Strange that nobody mentioned a straightforward solution with regex:\n\nGives the following output:\n\nIt also works if you want to separate the digits only before comma:\n\ngives:\n\nthe regex uses lookahead to check that the number of digits after a given position is divisible by 3.\n\nUpdate 2021: Please use this for scripting only (i.e. only in situation where you can destroy the code after using it). When used in an application, this approach would constitute a ReDoS.\n",
            "excerpt": "Strange that nobody mentioned a straightforward solution with <span class=\"highlight\">regex</span>:\nimport re\nprint(re.sub(r&#39;(?&lt;!^)(? &hellip; When used in an application, this approach would constitute a <span class=\"highlight\">ReDoS</span>. &hellip; ",
            "title": "Add &#39;decimal-mark&#39; thousands separators to a number"
        },
        {
            "tags": [
                "node.js",
                "reactjs",
                "npm",
                "npm-install"
            ],
            "question_score": 1,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 0,
            "is_answered": false,
            "question_id": 70172420,
            "item_type": "question",
            "score": 1,
            "last_activity_date": 1638288316,
            "creation_date": 1638288316,
            "body": "Current React Version 17\nI am running\n\nResult:\n\nThen I run\n\nResult:\n\nThen I run\n\nto see if something is already fixed... but I got:\n\nSo I tried to update all packages...\nRunning\nnpm update\nResult:\n\nI tried also installing with --force or with --legacy-peer-deps and got the same result.\nSo I want to update my project to the most stable versions of all dependencies and not to have issues later.\n",
            "excerpt": "react-scripts@0.9.5, which is a breaking change\nnode_modules/sass-graph/node_modules/ansi-<span class=\"highlight\">regex</span>\nnode_modules/webpack-dev-server/node_modules/ansi-<span class=\"highlight\">regex</span>\n  strip-ansi  4.0.0 - 5.2.0\n  Depends on vulnerable &hellip; So I want to update my project to the most stable versions of all dependencies <span class=\"highlight\">and</span> not to have issues later. &hellip; ",
            "title": "Error installing and updating client dependencies of project"
        },
        {
            "tags": [
                "node.js",
                "npm",
                "npm-install",
                "react-scripts",
                "npm-audit"
            ],
            "question_score": 1,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 0,
            "is_answered": false,
            "question_id": 70165350,
            "item_type": "question",
            "score": 1,
            "last_activity_date": 1638254910,
            "creation_date": 1638254910,
            "body": "See this console output with npm. First, when I run  it tells me I need to downgrade from  to  because of supposed vulnerabilities with the newer version?\nSo I follow the advice of  and run , which downgrades me to  and then tells me there are now 48 vulnerabilities (up from 27 initially) which can be solved by upgrading to .\nSo by running this  command, I end up in an endless cycle of vulnerabilities.\nI see there is an open issue on npm https://github.com/npm/cli/issues/3472\nIs there any kind of hack fix that will make these errors go away, even if temporarily? This is a bug with npm right?\nmy versions, for ref\n\n\n",
            "excerpt": "So I follow the advice of npm <span class=\"highlight\">and</span> run npm audit fix --force, which downgrades me to react-scripts@0.9.5 <span class=\"highlight\">and</span> then tells me there are now 48 vulnerabilities (up from 27 initially) which can be solved by &hellip; node_modules/webpack-dev-server/node_modules/wrap-ansi/node_modules/ansi-<span class=\"highlight\">regex</span>\n  strip-ansi  4.0.0 - 5.2.0\n  Depends on vulnerable versions of ansi-<span class=\"highlight\">regex</span>\n  node_modules/webpack-dev-server/node_modules &hellip; ",
            "title": "npm audit fix causes cascading vulnerabilities"
        },
        {
            "tags": [
                "node.js",
                "reactjs",
                "firebase",
                "npm",
                "webpack"
            ],
            "question_score": -2,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 1,
            "is_answered": false,
            "question_id": 69612524,
            "item_type": "question",
            "score": -2,
            "last_activity_date": 1635265916,
            "creation_date": 1634543678,
            "body": "\n\nTo address issues that do not require attention, run:\nnpm audit fix\nTo address all issues (including breaking changes), run:\nnpm audit fix --force\n",
            "excerpt": "&gt; npm install firebase      \n\nadded 13 packages, changed 1 package, <span class=\"highlight\">and</span> audited 2276 packages in 7s\n\n148 packages are looking for funding\n  run `npm fund` for details\n\n70 vulnerabilities (24 moderate, &hellip; firebase-tools@7.1.1, which is a breaking change\nnode_modules/inquirer/node_modules/ansi-<span class=\"highlight\">regex</span>\nnode_modules/inquirer/node_modules/string-width/node_modules/ansi-<span class=\"highlight\">regex</span>\nnode_modules/ora/node_modules/ansi-<span class=\"highlight\">regex</span> &hellip; ",
            "title": "Error in installing firebase through npm while working in react project"
        },
        {
            "tags": [
                "python",
                "apache-spark",
                "pyspark"
            ],
            "question_score": 1,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 1,
            "is_answered": true,
            "question_id": 69087192,
            "item_type": "question",
            "score": 1,
            "last_activity_date": 1631025669,
            "creation_date": 1631013122,
            "body": "I am new to Spark and am trying to optimize code written by another developer. The scenario is as follows:\n\nThere is a list of dictionaries with three key-value pairs. One is source:value, second is target:value and third is column:value.\nCASE WHEN THEN statement is generated based on above three key-value pairs. For instance, the list of dictionaries is as follows:\n\n\n\nThe following code generates the CASE WHEN THEN statement that follows.\n\n\n\n\nThis CASE WHEN THEN is then used to select data from a dataframe.\n\nQuestion: Is the usage of CASE WHEN THEN valid here (is it optimized)? Some of the CASE WHEN statements are very very lengthy (around 1000+). Is there a better way to redo the code (regex perhaps)?\nI looked at the below questions, but were not relevant for my case.\nCASE WHEN ... THEN\nSPARK SQL - case when then\nThanks.\n",
            "excerpt": "One is source:value, second is target:value <span class=\"highlight\">and</span> third is column:value.\nCASE WHEN THEN statement is generated based on above three key-value pairs. &hellip; Is there a better way to <span class=\"highlight\">redo</span> the code (<span class=\"highlight\">regex</span> perhaps)?\nI looked at the below questions, but were not relevant for my case.\nCASE WHEN ... THEN\nSPARK SQL - case when then\nThanks. &hellip; ",
            "title": "Replacement for Spark&#39;s CASE WHEN THEN"
        },
        {
            "tags": [
                "regex"
            ],
            "question_score": 116,
            "is_accepted": true,
            "answer_id": 12846121,
            "is_answered": false,
            "question_id": 12841970,
            "item_type": "answer",
            "score": 116,
            "last_activity_date": 1630933909,
            "creation_date": 1349979734,
            "body": "Why Are Evil Regexes A Problem?\nBecause computers do exactly what you tell them to do, even if it&#39;s not what you meant or is totally unreasonable. If you ask a regex engine to prove that, for some given input, there either is or is not a match for a given pattern, then the engine will attempt to do that no matter how many different combinations must be tested.\nHere is a simple pattern inspired by the first example in the OP&#39;s post:\n\nGiven the input:\n\nabababababababababababab\n\nThe regex engine tries something like  and a match is found on the first try.\nBut then we throw the monkey wrench in:\n\nabababababababababababab a\n\nThe engine will first try  but that fails because of that extra . This causes catastrophic backtracking, because our pattern , in a show of good faith, will release one of its captures (it will &quot;backtrack&quot;) and let the outer pattern try again. For our regex engine, that looks something like this:\n\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n - Nope\n\nThe number of possible combinations scales exponentially with the length of the input and, before you know it, the regex engine is eating up all your system resources trying to solve this thing until, having exhausted every possible combination of terms, it finally gives up and reports &quot;There is no match.&quot; Meanwhile your server has turned into a burning pile of molten metal.\nHow to Spot Evil Regexes\nIt&#39;s actually very tricky. Catastrophic backtracking in modern regex engines is similar in nature to the halting problem which Alan Turing proved was impossible to solve. I have written problematic regexes myself, even though I know what they are and generally how to avoid them. Wrapping everything you can in an atomic group can help to prevent the backtracking issue. It basically tells the regex engine not to revisit a given expression - &quot;lock whatever you matched on the first try&quot;. Note, however, that atomic expressions don&#39;t prevent backtracking within the expression, so  is still dangerous, but  is safe (it&#39;ll match  and then refuse to give up any of it&#39;s matched characters, thus preventing catastrophic backtracking).\nUnfortunately, once it&#39;s written, it&#39;s actually very hard to immediately or quickly find a problem regex. In the end, recognizing a bad regex is like recognizing any other bad code - it takes a lot of time and experience and/or a single catastrophic event.\n\nInterestingly, since this answer was first written, a team at the University of Texas at Austin published a paper describing the development of a tool capable of performing static analysis of regular expressions with the express purpose of finding these &quot;evil&quot; patterns. The tool was developed to analyse Java programs, but I suspect that in the coming years we&#39;ll see more tools developed around analysing and detecting problematic patterns in JavaScript and other languages, especially as the rate of ReDoS attacks continues to climb.\n\nStatic Detection of DoS Vulnerabilities in\nPrograms that use Regular Expressions\nValentin W&#252;stholz, Oswaldo Olivo, Marijn J. H. Heule, and Isil Dillig\nThe University of Texas at Austin\n\n",
            "excerpt": "In the end, recognizing a bad <span class=\"highlight\">regex</span> is like recognizing any other bad code - it takes a lot of time <span class=\"highlight\">and</span> experience <span class=\"highlight\">and</span>/or a single catastrophic event. &hellip; , especially as the rate of <span class=\"highlight\">ReDoS</span> attacks continues to climb. &hellip; ",
            "title": "How can I recognize an evil regex?"
        },
        {
            "tags": [
                "javascript",
                "sonarqube"
            ],
            "question_score": 7,
            "is_accepted": true,
            "answer_id": 60505306,
            "is_answered": false,
            "question_id": 60449047,
            "item_type": "answer",
            "score": 6,
            "last_activity_date": 1628754541,
            "creation_date": 1583231864,
            "body": "This is not really an issues, but a security warning.\nDid you check the SonarQube description of the error ?\n\nEvaluating regular expressions against input strings is potentially an\nextremely CPU-intensive task. Specially crafted regular expressions\nsuch as (a+)+s will take several seconds to evaluate the input string\naaaaaaaaaaaaaaaaaaaaaaaaaaaaabs.\nThe problem is that with every additional a character added to the\ninput, the time required to evaluate the regex doubles. However, the\nequivalent regular expression, a+s (without grouping) is efficiently\nevaluated in milliseconds and scales linearly with the input size.\nEvaluating such regular expressions opens the door to Regular\nexpression Denial of Service (ReDoS) attacks. In the context of a web\napplication, attackers can force the web server to spend all of its\nresources evaluating regular expressions thereby making the service\ninaccessible to genuine users.\nThis rule flags any execution of a hardcoded regular expression which\nhas at least 3 characters and at least two instances of any of the\nfollowing characters: *+{.\nExample: (a+)*\nAsk Yourself Whether • the executed regular expression is sensitive\nand a user can provide a string which will be analyzed by this regular\nexpression.  • your regular expression engine performance decrease\nwith specially crafted inputs and regular expressions.\nYou may be at risk if you answered yes to any of those questions.\n\nTo solve the issue, you need to humanly check if the RegEx is at risk. If not, you can just flag it as a false positive, otherwise, reviewing the regex can be mandatory.\nAdditional information on regex DoS issues can be found on OWASP web site\n",
            "excerpt": "Evaluating such regular expressions opens the door to Regular\nexpression Denial of Service (<span class=\"highlight\">ReDoS</span>) attacks. &hellip; To solve the issue, you need to humanly check if the <span class=\"highlight\">RegEx</span> is at risk. If not, you can just flag it as a false positive, otherwise, reviewing the <span class=\"highlight\">regex</span> can be mandatory. &hellip; ",
            "title": "SonarQube Regex vulnerability issue in JavaScript"
        },
        {
            "tags": [
                "javascript",
                "html",
                "regex",
                "email-validation"
            ],
            "question_score": 5476,
            "is_accepted": false,
            "answer_id": 61180079,
            "is_answered": false,
            "question_id": 46155,
            "item_type": "answer",
            "score": 4,
            "last_activity_date": 1622266070,
            "creation_date": 1586738818,
            "body": "If you get this error: Using regular expressions is security-sensitive.\nThen here is what you are looking for. This solution is free from &quot; Regular expression Denial of Service (ReDoS) &quot;\nRegex to validate emails without (ReDoS):\n\nPlease let me know if this solution works for you.\nThanks.\n",
            "excerpt": "This solution is free from &quot; Regular expression Denial of Service (<span class=\"highlight\">ReDoS</span>) &quot;\n<span class=\"highlight\">Regex</span> to validate emails without (<span class=\"highlight\">ReDoS</span>):\n/^[a-z0-9](?!.*?[^\\na-z0-9]{2})[^\\s@]+@[^\\s@]+\\. &hellip; ",
            "title": "How can I validate an email address in JavaScript?"
        },
        {
            "tags": [
                "javascript",
                "fuse.js"
            ],
            "question_score": 11,
            "is_accepted": false,
            "answer_id": 67736057,
            "is_answered": false,
            "question_id": 51187276,
            "item_type": "answer",
            "score": 3,
            "last_activity_date": 1622193150,
            "creation_date": 1622193150,
            "body": "We had a similar need, and ended up solving it as follows:\n(Note: I originally shared this on https://github.com/krisk/Fuse/issues/235#issuecomment-850269634)\n\n\nFor anyone who ends up here from a google search or otherwise, we ended up taking a different approach in https://github.com/sparkletown/sparkle/pull/1460 (thanks to @yarikoptic&#39;s &gt; awesome work debugging, exploring, and refining this)\nWe basically split our search query using regex (), to tokenise each individual word, but keep words that are between  and  as a single token):\n\nhttps://github.com/sparkletown/sparkle/blob/c0e7e40fe7a18db916eae9c48fc4e966f099642e/src/utils/text.ts#L1-L12\n\n\n(Note: Please check https://github.com/github/codeql/issues/5964 as the regex may have a ReDoS vulnerability, but it also might just be a false positive in the CodeQL scanner)\nWith our standard Fuse config:\n\nhttps://github.com/sparkletown/sparkle/blob/c0e7e40fe7a18db916eae9c48fc4e966f099642e/src/hooks/posters.ts#L72-L87\n\n\nBut then use our  tokeniser + customised Fuse query (using  to join each of our tokens, then  for the different fields) for the search:\n\nhttps://github.com/sparkletown/sparkle/blob/c0e7e40fe7a18db916eae9c48fc4e966f099642e/src/hooks/posters.ts#L90-L115\n\n\nThis seems to work pretty effectively for our needs from my testing of it all today.&gt;\n\n",
            "excerpt": "split our search query using <span class=\"highlight\">regex</span> (tokeniseStringWithQuotesBySpaces), to tokenise each individual word, but keep words that are between &quot; <span class=\"highlight\">and</span> &quot; as a single token):\n\nhttps://github.com/sparkletown/sparkle &hellip; [];\n\n(Note: Please check https://github.com/github/codeql/issues/5964 as the <span class=\"highlight\">regex</span> may have a <span class=\"highlight\">ReDoS</span> vulnerability, but it also might just be a false positive in the CodeQL scanner)\nWith our standard Fuse &hellip; ",
            "title": "Fuse.js : retrieve records which exactly match a multiple word search"
        },
        {
            "tags": [
                "javascript",
                "uuid",
                "denial-of-service"
            ],
            "question_score": 0,
            "is_accepted": true,
            "answer_id": 67608989,
            "is_answered": false,
            "question_id": 67608900,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1621449218,
            "creation_date": 1621449218,
            "body": "The OWASP article you linked has your answer. A pattern is considered &quot;Evil&quot; (vulnerable to a ReDOS attack) if it contains repetition inside a repeated group.\n\nEvil Regexes\nA Regex is called “evil” if it can stuck on crafted input.\nEvil Regex pattern contains:\n\nGrouping with repetition\nInside the repeated group:\n\nRepetition\nAlternation with overlapping\n\n\n\n\n\nYour pattern does not have grouping inside of repetition so it is not vulnerable. That said, if you know you expect a UUID inside the first 36 characters of the string you are searching, there is an efficiency benefit to trimming the string  before you attempt to match. I don&#39;t know if the splice is hard enough to read to warrant the extra time searching your string, you&#39;ll have to judge that for yourself.\n",
            "excerpt": "A pattern is considered &quot;Evil&quot; (vulnerable to a <span class=\"highlight\">ReDOS</span> attack) if it contains repetition inside a repeated group.\n\nEvil Regexes\nA <span class=\"highlight\">Regex</span> is called “evil” if it can stuck on crafted input. &hellip; Evil <span class=\"highlight\">Regex</span> pattern contains:\n\nGrouping with repetition\nInside the repeated group:\n\nRepetition\nAlternation with overlapping\n\n\n\n\n\nYour pattern does not have grouping inside of repetition so it is not vulnerable &hellip; ",
            "title": "Is regex uuid validator is safe for untrusted strings"
        },
        {
            "tags": [
                "javascript",
                "uuid",
                "denial-of-service"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 2,
            "is_answered": true,
            "question_id": 67608900,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1621449218,
            "creation_date": 1621448789,
            "body": "I&#39;m using a uuid package which can validate if string is a UUID.\nI&#39;m afraid of ReDOS attacks. Is this regex exposed to ReDOS attacks? maybe other attacks I don&#39;t think about?\n\nCurrently I slice the string before pass it to the function, but it&#39;s cumbersome and less readable:\n\n",
            "excerpt": "I&#39;m afraid of <span class=\"highlight\">ReDOS</span> attacks. Is this <span class=\"highlight\">regex</span> exposed to <span class=\"highlight\">ReDOS</span> attacks? maybe other attacks I don&#39;t think about?\n/^(? &hellip; :[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i\n\nCurrently I slice the string before pass it to the function, but it&#39;s cumbersome <span class=\"highlight\">and</span> less &hellip; ",
            "title": "Is regex uuid validator is safe for untrusted strings"
        },
        {
            "tags": [
                "java",
                "exception",
                "while-loop",
                "file-io",
                "infinite-loop"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 0,
            "is_answered": false,
            "question_id": 66935986,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1617484896,
            "creation_date": 1617484896,
            "body": "I&#39;ve been writing code that manually prints json (without the json library) after reading a CSV. It&#39;s to understand the structure for a project of this scale, which involves IO and Exception handling.\nSo, I&#39;ve been debugging this snippet of code since yesterday. I&#39;ve identified the problem, but have not been able to solve it.\nI currently have an infinite loop after the exception message is printed. For context, in the part of the code that is missing, the user inputs the number of files and it creates an array of files. The snippet of code inside my message is a method which verifies if a csv has a an empty field. Count is there to count the line numbers, if count == 1 and there is an empty field, it will throw , which is a custom exception I made for this project. If count is bigger than 1, it throws , i.e. another custom exception.\nThe timeline of the debugging goes as follows:\nAt first, when I had the infinite loop, I thought the regex caused my error, since I heard it could be badly implemented. I checked and each element is exactly what I want (a string, which represents a field in the csv). So, it wasn&#39;t regex since the behavior was normal.\nSecondly, I realized I accidentally put my try block was inside my while loop, so I put it on the outside. No Luck. The issue still persisted.\nThen, I figured out the issue. It read the line handled the exception and since there was no failsafe to exit the while loop, it did so non-stop.  So, I added an exit condition for the while loop. So, I added\n\nThis checks if the line number is higher than 1 and if the nextLine is null or empty. I thought this had solved the infinite loop problem that I had. Once I implemented this, nothind after the regex ended up being outputted. I checked with multiple println().\nI then realized I made a typo in one of the for loops. Now, I&#39;m back to the same behavior it exhibited earlier. It&#39;s redoing the same sequence inside the while loop again. In this case, it&#39;s looping the message from , so i.e. \nSo, I&#39;m assuming there&#39;s something that doesn&#39;t make sense logically. I&#39;ve tried multiple solutions and the exceptions are now never reached.\nSorry for the long code, the element that is being repeated is at the bottom, and everything else is inside the while loop, so I&#39;m not sure if it&#39;s something I implemented there.\n\n",
            "excerpt": "I checked <span class=\"highlight\">and</span> each element is exactly what I want (a string, which represents a field in the csv). So, it wasn&#39;t <span class=\"highlight\">regex</span> since the behavior was normal. &hellip; remove the quotes <span class=\"highlight\">and</span> extra space, so that the text remains clean <span class=\"highlight\">and</span> similar\n                String[] line_parts = lines.replaceAll(&quot;^\\&quot;&quot;, &quot;&quot;).split(&quot;\\&quot;? &hellip; ",
            "title": "The exception message is printed in an infinite loop"
        },
        {
            "tags": [
                "algorithm",
                "regular-language"
            ],
            "question_score": 1,
            "is_accepted": false,
            "answer_id": 66605671,
            "is_answered": false,
            "question_id": 66605216,
            "item_type": "answer",
            "score": 0,
            "last_activity_date": 1615575326,
            "creation_date": 1615575326,
            "body": "No,  matches the same string as , but it is an anti-pattern because of ReDoS. On its own the  is not harmful, but many regex engines can be frozen with the  string if you use the  pattern. Another difference that you have a capturing group in .\n",
            "excerpt": "No, (a+)* matches the same string as a*, but it is an anti-pattern because of <span class=\"highlight\">ReDoS</span>. &hellip; On its own the (a+)* is not harmful, but many <span class=\"highlight\">regex</span> engines can be frozen with the &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaab&quot; string if you use the (a+)*x pattern. &hellip; ",
            "title": "is the language (a+)* the same as a*?"
        },
        {
            "tags": [
                "regex",
                "vim"
            ],
            "question_score": 1,
            "is_accepted": false,
            "answer_id": 65661046,
            "is_answered": false,
            "question_id": 25365901,
            "item_type": "answer",
            "score": 0,
            "last_activity_date": 1610336710,
            "creation_date": 1610336390,
            "body": "Depends on what replacement you want to perform exactly, you might be able to do that with macros.\nFor example: Given this text\n\nreplace  with .\nTo do that:\n\nPosition the cursor at the begin of the text\n\n to begin recording a macro\nDo something to change the data independent of the content inside (use  to go to matching bracket, and some register/mark/plugin to delete around the bracket). For example  -- but macros are usually unreadable.\n to go to next match,  to stop recording\n repeatedly ( can be used from the second time)\n\nThis is probably not very convenient because it&#39;s easy to make a mistake (press , ,  for example) and you have to redo the macro from the beginning, but it works.\nAlternatively, you can do something similar to  plugin to extend vim&#39;s regex format to support this (so you don&#39;t have to retype the huge regex every time).\nProof of concept:\n\nAfter this,  can be used to do the same task above (after selecting the text in visual mode)\n",
            "excerpt": "you have to <span class=\"highlight\">redo</span> the macro from the beginning, but it works. &hellip; Alternatively, you can do something similar to eregex.vim plugin to extend vim&#39;s <span class=\"highlight\">regex</span> format to support this (so you don&#39;t have to retype the huge <span class=\"highlight\">regex</span> every time). &hellip; ",
            "title": "In Vim, is there a &quot;matching braces/parenthesis/etc&quot; equivalent in substitute/search symbols?"
        },
        {
            "tags": [
                "javascript",
                "html"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 0,
            "is_answered": false,
            "question_id": 65605499,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1610242951,
            "creation_date": 1609983142,
            "body": "I&#39;ve been experimenting with a local sign in/log in system and I&#39;ve hit a error. I was trying to make a regular expression that checks if the user&#39;s username and password contain 8 characters and 2 numbers. I really am not sure how to do that but this is all my code I&#39;ve been able too put togheter.\nHTML code:\n\nMy JS code:\n\nEDIT: Was able to redo a part of the code, I&#39;m still using regex to check for letters because I&#39;m not sure how to do it without it.\nCurrent error: &#39;first can&#39;t be a Regular Expression&#39;.\n",
            "excerpt": "I was trying to make a regular expression that checks if the user&#39;s username <span class=\"highlight\">and</span> password contain 8 characters <span class=\"highlight\">and</span> 2 numbers. &hellip; }\n document.forms[&#39;forms1&#39;].submit()\n}\n\nEDIT: Was able to <span class=\"highlight\">redo</span> a part of the code, I&#39;m still using <span class=\"highlight\">regex</span> to check for letters because I&#39;m not sure how to do it without it. &hellip; ",
            "title": "Regular expression (For digits and characters)"
        },
        {
            "tags": [
                "java",
                "spring",
                "sonarqube"
            ],
            "question_score": 1,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 1,
            "is_answered": false,
            "question_id": 62621417,
            "item_type": "question",
            "score": 1,
            "last_activity_date": 1608072608,
            "creation_date": 1593341024,
            "body": "I use the SonarQube for my Projects, and I have the Security Hotspot for &quot;^.\\+json[;]?\\s$&quot;:\n\nHier is the Message from SonarQube for ,\nUsing regular expressions is security-sensitive. It has led in the past to the following vulnerabilities:\nCVE-2017-16021\nCVE-2018-13863\nEvaluating regular expressions against input strings is potentially an extremely CPU-intensive task. Specially crafted regular expressions such as (a+)+s will take several seconds to evaluate the input string aaaaaaaaaaaaaaaaaaaaaaaaaaaaabs. The problem is that with every additional a character added to the input, the time required to evaluate the regex doubles. However, the equivalent regular expression, a+s (without grouping) is efficiently evaluated in milliseconds and scales linearly with the input size.\nEvaluating such regular expressions opens the door to Regular expression Denial of Service (ReDoS) attacks. In the context of a web application, attackers can force the web server to spend all of its resources evaluating regular expressions thereby making the service inaccessible to genuine users.\nThis rule flags any execution of a hardcoded regular expression which has at least 3 characters and at least two instances of any of the following characters: *+{.\nExample: (a+)*\nExceptions\nCalls to String.split(regex) and String.split(regex, limit) will not raise an exception despite their use of a regular expression. These methods are used most of the time to split on simple regular expressions which don&#39;t create any vulnerabilities.\nwhy?, and how can I it resolve?\n",
            "excerpt": "Evaluating such regular expressions opens the door to Regular expression Denial of Service (<span class=\"highlight\">ReDoS</span>) attacks. &hellip; Example: (a+)*\nExceptions\nCalls to String.split(<span class=\"highlight\">regex</span>) <span class=\"highlight\">and</span> String.split(<span class=\"highlight\">regex</span>, limit) will not raise an exception despite their use of a regular expression. &hellip; ",
            "title": "SonarQube security hotspot, Using regular expressions"
        },
        {
            "tags": [
                "ruby",
                "string",
                "methods",
                "startswith"
            ],
            "question_score": 0,
            "is_accepted": true,
            "answer_id": 64953628,
            "is_answered": false,
            "question_id": 64951639,
            "item_type": "answer",
            "score": 2,
            "last_activity_date": 1606044583,
            "creation_date": 1606044583,
            "body": "As a general rule, you should never ever blindly execute inputs from untrusted sources.\nInterpolating untrusted input into a  is not quite as bad as interpolating it into, say, , because the worst thing an attacker can do with a  is to construct an Evil Regex to conduct a Regular expression Denial of Service (ReDoS) attack (see also the section on Performance in the  documentation), whereas with , they could execute arbitrary code, including but not limited to, deleting the entire file system, scanning memory for unencrypted passwords / credit card information / PII and exfiltrate that via the network, etc.\nHowever, it is still a bad idea. For example, when I say &quot;the worst thing that happen is a ReDoS&quot;, that assumes that there are no bugs in the  implementation (Onigmo in the case of YARV, Joni in the case of JRuby and TruffleRuby, etc.) Ruby&#39;s s are quite powerful and thus Onigmo, Joni and co. are large and complex pieces of code, and may very well have their own security holes that could be used by a specially crafted .\nYou should properly sanitize and escape the user input before constructing the . Thankfully, the Ruby core library already contains a method which does exactly that: . So, you could do something like this:\n\nThe reason why your attempt at using  didn&#39;t work, is that  is for representing a  the same way you would have to write it as a  literal, i.e. it is escaping  metacharacters, not  metacharacters and it is including the quote characters around the  that you need to have it recognized as a  literal. You can easily see that when you simply try it out:\n\nSo, that means that \n\nincludes the quotes (which you don&#39;t want),\nescapes characters that don&#39;t need escaping in  just because they need escaping in s (e.g.  or ), and\ndoesn&#39;t escape characters that don&#39;t need escaping in s (e.g. , , , , , , ).\n\n",
            "excerpt": "Interpolating untrusted input into a Regexp is not quite as bad as interpolating it into, say, Kernel#eval, because the worst thing an attacker can do with a Regexp is to construct an Evil <span class=\"highlight\">Regex</span> to conduct &hellip; For example, when I say &quot;the worst thing that happen is a <span class=\"highlight\">ReDoS</span>&quot;, that assumes that there are no bugs in the Regexp implementation (Onigmo in the case of YARV, Joni in the case of JRuby <span class=\"highlight\">and</span> TruffleRuby &hellip; ",
            "title": "Get the same results from string.start_with? and string[ ]"
        },
        {
            "tags": [
                "r",
                "regex",
                "stringr"
            ],
            "question_score": 3,
            "is_accepted": false,
            "answer_id": 63927591,
            "is_answered": false,
            "question_id": 63927507,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1600288538,
            "creation_date": 1600288538,
            "body": "\nThe question is: is there a regex to include the special characters (or bypass them), so I can still extract the needed words? I noticed that the same happens with other characters (eg - ) or with double white space.\n\nSidenode: This is kind of the XY-Problem (https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem)\nYour problem is not, that the regex is not working - your problem is that the Regex IS working, but you expect something different. You use it to select the upcoming 8 words, after a certain string - but there are only 6 words before a non-word () - so that&#39;s just no match of your pattern.\nSo, to provide an &quot;answer&quot; to your question, you should redo your question at first:\nWHAT is your exact expectation?\nThe Solution of akrun would match anything of 4-8 words, but doubt that is what you really need.\n",
            "excerpt": "Sidenode: This is kind of the XY-Problem (https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem)\nYour problem is not, that the <span class=\"highlight\">regex</span> is not working - your problem is that the <span class=\"highlight\">Regex</span> IS working &hellip; So, to provide an &quot;answer&quot; to your question, you should <span class=\"highlight\">redo</span> your question at first:\nWHAT is your exact expectation? &hellip; ",
            "title": "Extract certain number of words or special characters after a string in R"
        },
        {
            "tags": [
                "javascript",
                "html",
                "jquery",
                "regex"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 1,
            "is_answered": true,
            "question_id": 63860711,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1599999240,
            "creation_date": 1599916598,
            "body": "My goal is to be able to undo (using ) a  script after it is clicked.\ne.g.\n will turn into  after clicking  button. I need a feature so that a user can reverse this change using  when they need to.\nI know it&#39;s not automatically supported by the browser since this is a javascript manipulation.\nPlease see my code snippet to demonstrate that undo is not working after clicking \n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\nSo in this sample I have, whenever a user clicks the button, the script to replace double spaces into single space and straight quotes into curly quotes will be activated.\nWhat I have in mind and where I need help as to how to integrate this on this script is this:\n\nThis will supposedly map all the button clicks so that a user can undo/redo them when they need to.\nPlease let me know about your suggestions. I would really appreciate it.\n",
            "excerpt": "What I have in mind <span class=\"highlight\">and</span> where I need help as to how to integrate this on this script is this:\nvar isChrome = !!window.chrome &amp;&amp; !! &hellip; var mappedText = mapObj[currButtonId];\n\njQuery(&quot;#textarea1&quot;).focus();\ndocument.execCommand(&#39;insertText&#39;, false, mappedText);\n});\n\nThis will supposedly map all the button clicks so that a user can undo/<span class=\"highlight\">redo</span> &hellip; ",
            "title": "How to undo/redo javascript regex .replace script?"
        },
        {
            "tags": [
                "javascript",
                "regex",
                "security",
                "denial-of-service",
                "automaton"
            ],
            "question_score": 2,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 2,
            "is_answered": true,
            "question_id": 34042556,
            "item_type": "question",
            "score": 2,
            "last_activity_date": 1597852429,
            "creation_date": 1449058629,
            "body": "Is there an algorithm to determine whether a given JavaScript regex is vulnerable to ReDoS? The algorithm doesn&#39;t have to be perfect - some false positives and false negatives are acceptable. (I&#39;m specifically interested in ECMA-262 regexes.)\n",
            "excerpt": "Is there an algorithm to determine whether a given JavaScript <span class=\"highlight\">regex</span> is vulnerable to <span class=\"highlight\">ReDoS</span>? The algorithm doesn&#39;t have to be perfect - some false positives <span class=\"highlight\">and</span> false negatives are acceptable. &hellip; ",
            "title": "How can I programmatically identify evil regexes?"
        },
        {
            "tags": [
                "javascript",
                "regex",
                "security",
                "pattern-matching",
                "ddos"
            ],
            "question_score": 5,
            "is_accepted": false,
            "answer_id": 63127606,
            "is_answered": false,
            "question_id": 63127145,
            "item_type": "answer",
            "score": 5,
            "last_activity_date": 1595914244,
            "creation_date": 1595914244,
            "body": "This doesn&#39;t directy answer your question, but the simplest way (in my experience) to avoid this type of attack is to use a regex library based off of https://github.com/google/re2, as it will not be vulnerable to ReDOS attacks.  For node the reference library is https://github.com/uhop/node-re2/\n\nRE2 consciously avoids any regular expression features that require worst-case exponential time to evaluate. These features are essentially those that describe a Context-Free Language (CFL) rather than a Regular Expression, and are extensions to the traditional regular expression language because some people don&#39;t know when enough is enough.\n\n\nThe most noteworthy missing features are backreferences and lookahead assertions. If your application uses these features, you should continue to use RegExp. But since these features are fundamentally vulnerable to ReDoS, you should strongly consider replacing them.\n\nIf your regex isn&#39;t compatible with it, then it is almosy certainly vulnerable to ReDOS, and (as a bonus) many that are typically vulnerable to ReDOS (like your example) are still valid, but not vulnerable in re2.\n",
            "excerpt": "to <span class=\"highlight\">ReDOS</span> attacks. &hellip; If your <span class=\"highlight\">regex</span> isn&#39;t compatible with it, then it is almosy certainly vulnerable to <span class=\"highlight\">ReDOS</span>, <span class=\"highlight\">and</span> (as a bonus) many that are typically vulnerable to <span class=\"highlight\">ReDOS</span> (like your example) are still valid, but not vulnerable &hellip; ",
            "title": "Safe regex patterns from ReDos attack"
        },
        {
            "tags": [
                "php",
                "regex",
                "hyperlink",
                "preg-replace"
            ],
            "question_score": 65,
            "is_accepted": false,
            "answer_id": 61920102,
            "is_answered": false,
            "question_id": 1960461,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1590542750,
            "creation_date": 1589998587,
            "body": "Finding Plain Text Links inside HTML\n\nI really liked this answer - yet I needed a solution for possible plain text links that are inside very simple HTML text:\n\n\n\nThis meant I needed the regex patterns to ignore the html chars  and \n\nRegex Adjustment\n\nSo I changed parts of the patterns to  instead of  \n\n\n - not white-space; matches any char that is not white-space (tab, space, newline)\n - a negated set; matches any char not in the set\n\n\nMy version of the function from this answer\n\nI needed another format in addition to HTML so I separated out the regexes from their replacements to accommodate this.\n\nI also added a way to return just the links/emails found into an array so I can save them as a relationship on my posts (great for making meta cards for them later ...and for analytics!).\n\nUPDATE: Consecutive periods were matching\n\nI was getting matches for text like  - So I wanted to ensure I didn&#39;t get any matches that included consecutive dots. \n\nNote: To accomplish fixing this, I added an additional format string to undo matching them to avoid having to redo these otherwise reliable url regexes.\n\n\n",
            "excerpt": "patterns to ignore the html chars &lt; <span class=\"highlight\">and</span> &gt;\n\n<span class=\"highlight\">Regex</span> Adjustment\n\nSo I changed parts of the patterns to [^\\s\\&gt;\\&lt;] instead of \\S \n\n\n\\S - not white-space; matches any char that is not white-space (tab, space &hellip; Note: To accomplish fixing this, I added an additional format string to undo matching them to avoid having to <span class=\"highlight\">redo</span> these otherwise reliable url regexes.\n\n/***\n * based on this answer: https://stackoverflow.com &hellip; ",
            "title": "Convert plain text URLs into HTML hyperlinks in PHP"
        },
        {
            "tags": [
                "php"
            ],
            "question_score": 0,
            "is_accepted": false,
            "answer_id": 61611831,
            "is_answered": false,
            "question_id": 61611271,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1588678804,
            "creation_date": 1588677292,
            "body": "Best I could come up with is stripping your regex pattern into it&#39;s own variable, then splitting this string using &#39;&#39;. I was inspired by the following answer, which also suggests redoing the regex, but not sure if that is an option. \n\n\n  Source: https://stackoverflow.com/a/12498301/3324415\n\n\nSample:\n\n\n",
            "excerpt": "Best I could come up with is stripping your <span class=\"highlight\">regex</span> pattern into it&#39;s own variable, then splitting this string using &#39;.&#39;. &hellip; I was inspired by the following answer, which also suggests redoing the <span class=\"highlight\">regex</span>, but not sure if that is an option. &hellip; ",
            "title": "Comment a PHP line containing # / character"
        },
        {
            "tags": [
                "javascript",
                "regex",
                "mybb"
            ],
            "question_score": -1,
            "is_accepted": true,
            "answer_id": 61580892,
            "is_answered": false,
            "question_id": 61574043,
            "item_type": "answer",
            "score": 2,
            "last_activity_date": 1588536241,
            "creation_date": 1588536241,
            "body": "While it&#39;s technically correct, strictly speaking, that you can&#39;t use regular expressions here, it&#39;s more of a wrong statement than a right one. Very few languages have a strictly regular implementation of regex, and the most popular regex library (PCRE) has no issues with this task.\n\nNow, doing this in regex is a terrible idea. ReDoS, readability, maintainability, etc., are each so bad with regex, that just by themselves, these issues could rule out a regex-based approach.\n\nBut here&#39;s a regex based solution anyway: https://regex101.com/r/q0zNBU/1\n",
            "excerpt": "Very few languages have a strictly regular implementation of <span class=\"highlight\">regex</span>, <span class=\"highlight\">and</span> the most popular <span class=\"highlight\">regex</span> library (PCRE) has no issues with this task.\n\nNow, doing this in <span class=\"highlight\">regex</span> is a terrible idea. &hellip; <span class=\"highlight\">ReDoS</span>, readability, maintainability, etc., are each so bad with <span class=\"highlight\">regex</span>, that just by themselves, these issues could rule out a <span class=\"highlight\">regex</span>-based approach. &hellip; ",
            "title": "How can I match all MyCode, including nested tags, in regex?"
        },
        {
            "tags": [
                "tomcat"
            ],
            "question_score": 17,
            "is_accepted": false,
            "answer_id": 61492957,
            "is_answered": false,
            "question_id": 1716525,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1588162566,
            "creation_date": 1588125435,
            "body": "Try using Tomcat&#39;s Rewrite Valve (docs here)\n\n{TOMCAT_HOME}/conf/server.xml\n\n\n\n{TOMCAT_HOME}/conf/Catalina/localhost/rewrite.config\n\n\n\nNote this security warning in the Tomcat 9 docs (here),\n\n\n  Security warning: Due to the way Java&#39;s regex matching is done, poorly formed regex patterns are vulnerable to &quot;catastrophic backtracking&quot;, also known as &quot;regular expression denial of service&quot; or ReDoS. Therefore, extra caution should be used for RewriteRule patterns. In general it is difficult to automatically detect such vulnerable regex, and so a good defense is to read a bit on the subject of catastrophic backtracking. A good reference is the OWASP ReDoS guide.\n\n",
            "excerpt": "In general it is difficult to automatically detect such vulnerable <span class=\"highlight\">regex</span>, <span class=\"highlight\">and</span> so a good defense is to read a bit on the subject of catastrophic backtracking. &hellip; A good reference is the OWASP <span class=\"highlight\">ReDoS</span> guide. &hellip; ",
            "title": "Tomcat: two context paths for one webapp"
        },
        {
            "tags": [
                "vim",
                "comments"
            ],
            "question_score": 1523,
            "is_accepted": false,
            "answer_id": 50144981,
            "is_answered": false,
            "question_id": 1676632,
            "item_type": "answer",
            "score": 6,
            "last_activity_date": 1587414635,
            "creation_date": 1525304377,
            "body": "This answer is most useful if you are unable to install plugins but you still want your comment characters to follow existing indentation levels.\n\nThis answer is here to 1) show the correct code to paste into a  to get  to do block commenting/uncommenting while keeping indentation level with 1 shortcut in visual mode and 2) to explain it. \nHere is the code: \n\n\n\nHow it works:\n\n\n : This creates a variable in vim. the  here refers to the scope, which in this case is contained to the buffer, meaning the currently opened file. Your comment characters are strings and need to be wrapped in quotes, the quotes are not part of what will be substituted in when toggling comments.\n : Autocommands trigger on different things, in this case, these are triggering when a new file or the read file ends with a certain extension. Once triggered, the execute the following command, which allows us to change the  depending on filetype. There are other ways to do this, but they are more confusing to novices (like me).\n : Functions are declared by starting with  and ending with . Functions must start with a capital. the  ensures that this function overwrites any previous functions defined as  with this version of . Without the , I had errors, but that might be because I was defining new functions through the vim command line.\n : Execute calls a command. In this case, we are executing , which can take a range (by default this is the current line) such as  for the whole buffer or  for the highlighted section.  is regex to match the start of a line followed by any amount of whitespace, which is then appended to (due to ). The  here is used for string concatenation, since  can&#39;t be wrapped in quotes.  allows you to escape character in  that matches the arguments (in this case,  and ) by prepending them with a . After this, we concatenate again with the end of our  string, which has the  flag. This flag lets us fail silently, meaning that if we do not find a match on a given line, we won&#39;t yell about it. As a whole, this line lets us put a comment character followed by a space just before the first text, meaning we keep our indentation level.\n : This is similar to our last huge long command. Unique to this one, we have , which makes sure that we don&#39;t have to escape our , and , which refers to the group we made with our . Basically, we&#39;re matching a line that starts with any amount of whitespace and then our comment character followed by any amount of whitespace, and we are only keeping the first set of whitespace. Again,  lets us fail silently if we don&#39;t have a comment character on that line.\n : this sets a variable much like we did with our comment character, but  refers to the local scope (local to this function).  gets the position of, in this case, the start of our highlighting, and the  means we only care about the line number, not other things like the column number.\n : you know how  works.  checks if the first thing contains the second thing, so we grab the line that we started our highlighting on, and check if it starts with whitespace followed by our comment character.  returns the index where this is true, and  if no matches were found. Since  evaluates all nonzero numbers to be true, we have to compare our output to see if it&#39;s greater than -1. Comparison in  returns 0 if false and 1 if true, which is what  wants to see to evaluate correctly.\n :  means map the following command in visual mode, but don&#39;t map it recursively (meaning don&#39;t change any other commands that might use  in other ways). Basically, if you&#39;re a vim novice, always use  to make sure you don&#39;t break things.  means &quot;I don&#39;t want your words, just your actions&quot; and tells it not to print anything to the command line.  is the thing we&#39;re mapping, which is ctrl+r in this case (note that you can still use C-r normally for &quot;redo&quot; in normal mode with this mapping).  is kinda confusing, but basically it makes sure you don&#39;t lose track of your visual highlighting (according to this answer it makes your command start with  which is what we want).  here just tells vim to execute the function we named, and  refers to hitting the  button. We have to hit it once to actually call the function (otherwise we&#39;ve just typed  on the command line, and we have to hit it again to get our substitutes to go through all the way (not really sure why, but whatever). \n\n\nAnyway, hopefully this helps. This will take anything highlighted with , , or , check if the first line is commented, if yes, try to uncomment all highlighted lines, and if not, add an extra layer of comment characters to each line. This is my desired behavior; I did not just want it to toggle whether each line in the block was commented or not, so it works perfectly for me after asking multiple questions on the subject. \n",
            "excerpt": "^\\s* is <span class=\"highlight\">regex</span> to match the start of a line followed by any amount of whitespace, which is then appended to (due to &amp;). &hellip; &lt;C-r&gt; is the thing we&#39;re mapping, which is ctrl+r in this case (note that you can still use C-r normally for &quot;<span class=\"highlight\">redo</span>&quot; in normal mode with this mapping). &hellip; ",
            "title": "What&#39;s a quick way to comment/uncomment lines in Vim?"
        },
        {
            "tags": [
                "ios",
                "swift",
                "regex",
                "string"
            ],
            "question_score": 1,
            "is_accepted": true,
            "answer_id": 61011698,
            "is_answered": false,
            "question_id": 61010309,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1586169336,
            "creation_date": 1585916034,
            "body": "Your pattern is wrong, you have at the start , so you aren&#39;t detecting anything.\n\nAlso, prefers utf16 count with NSStuff (because with NSString, it&#39;s UTF16)\n\n\n\nOutput:\n\n\n\nSome explanation on  (and then redo a  for Swift strings).\n : Detect &quot;%&quot;\n: Detect number (including 12 which weren&#39;t your case before)\n: Detect number, but in a capture group\n: Detect &quot;$&quot; (need an escape because it&#39;s a special char in regex)\n: Detect &quot;s&quot;\n\nSo there are two groups: The whole (corresponding to the whole regex match), and the numbers. The first one would be $0, and the second one $1, that&#39;s why I used  in the template.\n\nNB: I used https://regex101.com to check the pattern.\n\nWith increment, you can&#39;t do it with the template. You have to enumerate all the matches, do the operation and replace.\n\n\n",
            "excerpt": "a special char in <span class=\"highlight\">regex</span>)\ns: Detect &quot;s&quot;\n\nSo there are two groups: The whole (corresponding to the whole <span class=\"highlight\">regex</span> match), <span class=\"highlight\">and</span> the numbers. &hellip; You have to enumerate all the matches, do the operation <span class=\"highlight\">and</span> replace. &hellip; ",
            "title": "Regex pattern match and replace in Swift"
        },
        {
            "tags": [
                "perl"
            ],
            "question_score": 1,
            "is_accepted": true,
            "answer_id": 60855616,
            "is_answered": false,
            "question_id": 60854055,
            "item_type": "answer",
            "score": 9,
            "last_activity_date": 1585168003,
            "creation_date": 1585162775,
            "body": "How much work would you like to do to create the code that could figure out what the fix should be? And, will that amount of work be comparable or less to the work required to examine code by hand?\n\nNow, I&#39;m writing all of this having spent quite a bit of time trying to come up with a system to analyze CPAN installer output to figure out what went wrong (a major impetus for CPANPLUS, now relegated to history). It&#39;s easy to tell that something is not right, but beyond that is a lot of suffering.\n\nIn your example, you have an error about an undeclared variable. How does AutoFix know if that should be a package or a lexical variable? You can guess one or the other, but you actually have two big problems:\n\n\nWhat is the intent of the code?\nDoes the code reflect the actual intent?\n\n\nDetermining the intent of the code is often very difficult for even an experienced human programmer to figure out (just read StackOverflow question comments). Compiling code is often not correct code, in the sense that it doesn&#39;t achieve the desired outcome. Furthermore, does the programmer even understand the problem? Does the code the programmer wrote (incorrectly here) reflect the actual work the code should do? It&#39;s difficult for humans in code review to figure this out. Tools like Coverity can guess at problems it knows about, but they aren&#39;t going to be able to correct the code.\n\nBut let&#39;s say that the programmer understands the problem. Have they correctly expressed that? The longer you&#39;ve been programming, the more you lean toward &quot;no&quot;, in general, in my experience.\n\nThis is completely different than the database constraint you mentioned. That&#39;s a narrowly targeted fix for an expected and allowed situation. Consider a different parallel: if the record has a New York area code but a Chicago address, should I fix the city? When I was a younger dumbass, I did a similar thing to a database. It was stupid because I thought I knew something I didn&#39;t, and everyone who understood the situation recognized it immediately. Even then, those sorts of constraints are how we model what we know about the world, not what the world actually is.\n\nNow, to make AutoFix, you need to make something that can look at code, understand it, and figure out what it should do. You can make guesses, but you have no basis for playing the probabilities there.\n\nTechnical matters can&#39;t solve this. AutoFix can undo the work of pragmas such that some classes of errors don&#39;t show up, but so what? The program with an error just continues? How does that help anyone?\n\nNot only that, compilers tend to complain when they realize they can&#39;t parse something. What they complain about is often not the problem. The first thing I teach people while debugging is that they need to look at the statement immediately proceeding the line line number in the error message. Any error message you catch can have a virtually infinite number of causes.\n\nConsider this code, which fails in the same way as your example (same error message) but for a completely different but common reason:\n\n\n\nHow do you figure out what the fix should be? It&#39;s not about declaring .\n\nSo, you now have two cases, and you build that your fixer. Then you encounter another case, so you build that in. And you keep doing this until eventually you have a large dictionary of fixes. Maybe you get a bit crazy and do some machine learning (and wouldn&#39;t a corpus of bad code and resolutions be cool).\n\nBut, the program still can&#39;t continue. It has to start over because it has to at least back up to where it should have done something but didn&#39;t. You can&#39;t merely restart the program because you don&#39;t know if its idempotent. Re-runing the program might redo work it shouldn&#39;t, such as inserting duplicate into databases.\n\nHaving said all that, this sort of thing is related to static analysis and the refactoring browser. Adam Kennedy&#39;s Parse Perl Isolated (PPI) project was a first step into understanding Perl code without compiling it, then move toward the Smalltalk ideal of understanding which parts of code represented the same thing. If you knew that two things named  were the same thing, you could rearrange code dealing with . For example, if you renamed a method from  to , you could immediately know which s you should rename and which belonged to some other class.\n\nAdam wrote Acme::BadExample and challenged anyone to get it to run. He wrote &quot;any given piece of Perl source exists in bizarre pseudo-quantum-like state, in that it demonstrates both duality and indeterminism.&quot;\n\nJos Boumans stepped up and used some mind-bending Perl, which he then showed in Barely Legal XXX Perl, which I think he first presented in 2006. He was amazingly creative in his solutions, and in a way that I wouldn&#39;t want in production code.\n\nPerl doesn&#39;t even know, by design, what type of thing will be in a variable or even that the method you might call on it will exist. In fact, it defers so much to the runtime, trusting that things will be in place by the time you need them, that we often say &quot;only Perl can parse perl&quot;. You literally need to be able to run Perl code to properly compile it since  blocks can affect the parse. For example, a  can define a subroutine with a certain arity. How do you parse ? You have to know what has already been defined.\n\nPerl has other &quot;action at a distance&quot; features that make this even tougher.  redefines CORE features to add extra behavior, but you might not be able to see that in the code. You can set default regex flags (and I&#39;ve seen plenty of big screw ups by people applying  to entire files without checking). \n",
            "excerpt": "Re-runing the program might <span class=\"highlight\">redo</span> work it shouldn&#39;t, such as inserting duplicate into databases.\n\nHaving said all that, this sort of thing is related to static analysis <span class=\"highlight\">and</span> the refactoring browser. &hellip; You can set default <span class=\"highlight\">regex</span> flags (<span class=\"highlight\">and</span> I&#39;ve seen plenty of big screw ups by people applying /isxm to entire files without checking). &hellip; ",
            "title": "Perl: Is it possible to dynamically fix compile time error?"
        },
        {
            "tags": [
                "php",
                "regex"
            ],
            "question_score": 2,
            "is_accepted": false,
            "answer_id": 60735732,
            "is_answered": false,
            "question_id": 60735433,
            "item_type": "answer",
            "score": 0,
            "last_activity_date": 1584519528,
            "creation_date": 1584519528,
            "body": "Be careful with \n\nThis pattern corresponds to a REDOS vulnerability. (There are 2^n ways to read the n chars before the last ...\n\nTo keep a regex closed to yours, you can use \n\n\n reads as many blocks &quot;non  nor  chars followed by &quot; as possible.\n\nhttps://regex101.com/r/SMSv5R/2\n",
            "excerpt": ".*\\/)\n\nThis pattern corresponds to a <span class=\"highlight\">REDOS</span> vulnerability. (There are 2^n ways to read the n chars before the last /...\n\nTo keep a <span class=\"highlight\">regex</span> closed to yours, you can use \n/(?&lt;=template=&quot;)([^&quot;]*? &hellip; ",
            "title": "Regex cant limit search range"
        },
        {
            "tags": [
                "r",
                "json",
                "windows"
            ],
            "question_score": 1,
            "is_accepted": true,
            "answer_id": 59768368,
            "is_answered": false,
            "question_id": 59695961,
            "item_type": "answer",
            "score": 2,
            "last_activity_date": 1579174490,
            "creation_date": 1579172986,
            "body": "That issue arises from this part in your regex: . By simply changing that into , the problem disappears. I&#39;m not sure why this happens, but I assume that you basically simplify the path regex has to use to test the string by doing this (testing whether the chars are not those VS that and if it should redo the pattern).\n\n\n\nIf you want however a more complete solution, based on this answer, you can use something like this:\n\n\n\nIt also worked with your json string.\n\n\n",
            "excerpt": "That issue arises from this part in your <span class=\"highlight\">regex</span>: (?:[^{}]|(?R))*. By simply changing that into (?:[^{}]+|(?R))*, the problem disappears. &hellip; I&#39;m not sure why this happens, but I assume that you basically simplify the path <span class=\"highlight\">regex</span> has to use to test the string by doing this (testing whether the chars are not those VS that <span class=\"highlight\">and</span> if it should <span class=\"highlight\">redo</span> &hellip; ",
            "title": "find JSON in string with recursion limit in r (windows)"
        },
        {
            "tags": [
                "python",
                "regex"
            ],
            "question_score": 3,
            "is_accepted": false,
            "answer_id": 59383193,
            "is_answered": false,
            "question_id": 59362244,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1576622778,
            "creation_date": 1576622778,
            "body": "Here&#39;s a simple parser built with ply\n\nIt is certainly less compact than the regex solutions, but it has a couple of considerable advantages:\n\n\nIt&#39;s a lot easier to write and understand. (In fact, my first attempt worked perfectly except for a typo in one of the names.) Moreover, it is reasonably clear by examination exactly what syntax is being parsed. (This assumes some minimal understanding of generative grammars, of course, but the concepts are not particularly difficult and there are many available learning resources.)\nIf you want to add more features in the future, it&#39;s straight-forward to modify. If instead of just reformatting the text, you want to actually make some use of the decomposed structure, that is easily available without much effort.\n\n\nAs with most generated parsers, it has two components: a lexer (or scanner), which decomposes the input into tokens and discards unimportant text such as whitespace, and a parser which analyses the stream of tokens in order to figure out its structure. Normally a parser would construct some kind of data structure representing the input, normally some kind of tree. Here I&#39;ve simplified the process by just recombining the parsed input into a transformed output. (In retrospect, I can&#39;t help thinking that, as usual, it would have been clearer to produce an entire parse tree and then create the output by doing a walk over the tree. Perhaps as penance I&#39;ll redo it later.)\n\nHere&#39;s the scanner. The only meaningful tokens are the punctuation symbols and what I&#39;ve called WORDs, which are sequences of whatever Python considers word characters (usually alphabetic and numeric characters plus underlines), without distinguishing between purely alphabetic, purely numeric, and mixed tokens as in your question.\n\n\n\nNow the parser. The grammar for sequences is a little redundant because it has to special-case a sequence of one item: Since the grammar also explicitly inserts parentheses around  as it parses, it would be incorrect to add them around the entire sequence. But if the entire sequence is one item, the original parenthweses have to be reinserted. For sets, things are much clearer; the elements are not modified at all, the braces must always be added back.\n\nHere&#39;s the entire grammar:\n\n\n\nAnd here&#39;s the implementation, with the grammar repeated, Ply-style, as docstrings:\n\n\n\nNow, a (very) simple driver:\n\n\n",
            "excerpt": "Here&#39;s a simple parser built with ply\n\nIt is certainly less compact than the <span class=\"highlight\">regex</span> solutions, but it has a couple of considerable advantages:\n\n\nIt&#39;s a lot easier to write <span class=\"highlight\">and</span> understand. &hellip; Perhaps as penance I&#39;ll <span class=\"highlight\">redo</span> it later.)\n\nHere&#39;s the scanner. &hellip; ",
            "title": "String manipulation in Regex with seemingly too many exceptions"
        },
        {
            "tags": [
                "node.js",
                "regex"
            ],
            "question_score": 3,
            "is_accepted": false,
            "answer_id": 59293858,
            "is_answered": false,
            "question_id": 59062569,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1576097383,
            "creation_date": 1576097383,
            "body": "My guess would be that your complicated regex is causing &quot;redos&quot; to your node.js server. Since node.js is single-threaded it tries to resolve your regex expression using way too much CPU which after some time crushes node execution.\n\nYou can prevent that by not using your own regex and try to use some well known regexes or if it is for validation use something like Joi or validator.js\n\nHere is something about &quot;redos&quot;:\n\nhttps://blog.malwarebytes.com/security-world/technology/2018/08/explained-regular-expression-regex/\n\nor \n\nhttps://javascript.info/regexp-catastrophic-backtracking\n\nHope this helps :)\n",
            "excerpt": "My guess would be that your complicated <span class=\"highlight\">regex</span> is causing &quot;<span class=\"highlight\">redos</span>&quot; to your node.js server. &hellip; You can prevent that by not using your own <span class=\"highlight\">regex</span> <span class=\"highlight\">and</span> try to use some well known regexes or if it is for validation use something like Joi or validator.js\n\nHere is something about &quot;<span class=\"highlight\">redos</span>&quot;:\n\nhttps://blog.malwarebytes.com &hellip; ",
            "title": "nodejs regex kills process"
        },
        {
            "tags": [
                "java",
                "cucumber-java"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 2,
            "is_answered": false,
            "question_id": 58293458,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1571860024,
            "creation_date": 1570565641,
            "body": "We are attempting to switch over entirely to Cucumber expressions and no longer use Regex.  My question is it possible to create a type that allows for a String entry in the feature file?\n\nFor example: (the &quot;second&quot; user is ) instead of (the second user is )\n\nHere is the custom paramType method I am using.\n\n\n\nCurrently it allows for no strings entry but I would like to keep it with quotes to avoid having to redo a lot of feature files/steps.\n",
            "excerpt": "We are attempting to switch over entirely to Cucumber expressions <span class=\"highlight\">and</span> no longer use <span class=\"highlight\">Regex</span>.  My question is it possible to create a type that allows for a String entry in the feature file? &hellip; |second|3rd|third&quot;,\n                String.class,\n                (String arg) -&gt; arg\n        ));\n\n\nCurrently it allows for no strings entry but I would like to keep it with quotes to avoid having to <span class=\"highlight\">redo</span> &hellip; ",
            "title": "Cucumber Capture Custom Expressions Java - How to allow for string entry in feature steps?"
        },
        {
            "tags": [
                "regex"
            ],
            "question_score": 4,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 2,
            "is_answered": true,
            "question_id": 58345142,
            "item_type": "question",
            "score": 4,
            "last_activity_date": 1570850481,
            "creation_date": 1570810899,
            "body": "Regex : \n\n\n  \n\n\nI tried to break it with : \n\n\n  1234567890.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1x]\n\n\nthat is 200x&quot;.1&quot;\n\nI have read about ReDos attacks from :\n\n\nPreventing Regular Expression Denial of Service (ReDoS)\nRunaway Regular Expressions: Catastrophic Backtracking\n\n\nHowever, I am not too confident in my skills to prepare a ReDos attack on an expression. I tried to trigger catastrophic backtracking due to &quot;Nested Quantifiers&quot;.\n\nIs that expression breakable? What input should be used for that and, if yes, how did you come up with it?\n",
            "excerpt": "<span class=\"highlight\">Regex</span> : \n\n\n  ^\\d+(\\. &hellip; What input should be used for that <span class=\"highlight\">and</span>, if yes, how did you come up with it? &hellip; ",
            "title": "is this regex vulnerable to REDOS attacks"
        },
        {
            "tags": [
                "c#",
                "regex"
            ],
            "question_score": -1,
            "is_accepted": true,
            "answer_id": 58332412,
            "is_answered": false,
            "question_id": 58331979,
            "item_type": "answer",
            "score": 0,
            "last_activity_date": 1570750711,
            "creation_date": 1570750711,
            "body": "About your pattern:\n\n\n\nA): The two capturing groups are not exactly wrong, but they&#39;re oddly written.  captures &quot;one or more spaces, OR nothing at all&quot;, which can be expressed as &quot;zero or more spaces&quot;. In regex, the &quot;zero or more&quot; quantifier is the star, so you can replace this group with . Same for  which becomes .\nThen there&#39;s the issue with trying to match this pattern multiple times: the /pattern can, and will match quotes. To avoid this you can replace the dot by a negated character class that will match anything except for quotes: .\nSo now your pattern should look like this:\n\n\n\nB): Then... You don&#39;t use any of this. You seem to only use the match as a whole and redo the pattern by hand to get the part you need. I understand you added the parentheses in your pattern to be able to use the | operator, but they also have the nifty effect of creating capturing groups. A capturing group, for short, is what you&#39;re asking your regex engine to specifically look for and point out for you when matching. You can access these groups with the  property. In your case, because there are two pairs of parentheses in your pattern, you&#39;ll create two groups, the first one contains the spacing between the equal sign and the first quote of your input. You don&#39;t seem to need it, so let&#39;s remove it, and instead capture the name of your &#39;var&#39;:\n\n\n\nYou can now access the var&#39;s name with  and its value with , and before you ask,  does exist but it always stores the entire match, so for your purposes it&#39;s the same as .\n\nNow to overhaul all this code:\n\n\n\nand you should be good.\n",
            "excerpt": "You seem to only use the match as a whole <span class=\"highlight\">and</span> <span class=\"highlight\">redo</span> the pattern by hand to get the part you need. &hellip; A capturing group, for short, is what you&#39;re asking your <span class=\"highlight\">regex</span> engine to specifically look for <span class=\"highlight\">and</span> point out for you when matching. You can access these groups with the Match.Groups property. &hellip; ",
            "title": "All regex matches inside of one value"
        },
        {
            "tags": [
                "python-3.x"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 2,
            "is_answered": false,
            "question_id": 57786132,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1567665804,
            "creation_date": 1567591570,
            "body": "I want to remove the URL&#39;s in a domain using RegEx. Example URL&#39;s below. however when I want to remove the URL on the 3rd example below. It doesn&#39;t work.\n\n\n\nMy first IF condition works fine if the URL is say http://www.domain.com.org . I use a split() to separate the whole URL by dot. \nHowever if my URL is w/o the www (http://domain.com.org) it doesn&#39;t work. In my FOR loop I would would compare the current value of x to my regex2 result if they match I would remove() it by creating another regex to strip down the URL and leave the domain and have it added in my var(word)\n\nI know there are other way to do this, however based on my skill level on both python and regex this is how I would approach it. Is my code really feasible or I am doing an impossible thing and my code needs redoing?\n\nI&#39;m  pretty new in Python and I just learned RegEx a couple of days ago. However I know my regex is good based on my test. I believe my code flow is really screwed up. Any idea folks?\n\n\n",
            "excerpt": "In my FOR loop I would would compare the current value of x to my regex2 result if they match I would remove() it by creating another <span class=\"highlight\">regex</span> to strip down the URL <span class=\"highlight\">and</span> leave the domain <span class=\"highlight\">and</span> have it added &hellip; Is my code really feasible or I am doing an impossible thing <span class=\"highlight\">and</span> my code needs redoing?\n\nI&#39;m  pretty new in Python <span class=\"highlight\">and</span> I just learned <span class=\"highlight\">RegEx</span> a couple of days ago. &hellip; ",
            "title": "remove the URL string and leave just the domain using regex in python"
        },
        {
            "tags": [
                "c#"
            ],
            "question_score": -1,
            "is_accepted": false,
            "answer_id": 57781827,
            "is_answered": false,
            "question_id": 57781122,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1567574580,
            "creation_date": 1567573766,
            "body": "The simplest regex in terms of comprehension would be:\n\n\n\nBut beware, this would probably let them type in Unicode numbers outside the ascii range too\n\nTo be honest, excessive validation is more irritating to users than it is helpful to you, especially when your error messages are so poor. Having some complicated requirement for input and then only telling them &quot;the given name is required&quot;  is bad. What if their name really is &quot;Q&quot;? You don&#39;t say &quot;given name must be at least two characters&quot; (better error message) but then my question in this is &quot;why must a name be at least two characters?&quot; What do you care if a person puts one character in as their name?\n\nLikewise for phone numbers , let them type in whatever they like, any old how. Strip all the crap they typed in when you validate and check they entered 10 digits starting with 04. The error message should say &quot;phone number should start with 04 and have 10 digits in total&quot;. Prepopulate the box with 04 to help them out, and run this on what they give you:\n\n\n\nIt strips out all the hyphens, brackets, spaces etc. Check the length of the result. The message here is: &quot;don&#39;t require your user to type spaces in because the spaces really don&#39;t matter. You can put them in yourself in code, after you strip the user input of  down to just numbers , simply using string substring\n\n&quot;Be tolerant of what you accept and strict of what you send&quot; is the mantra for writing servers that talk HTTP, but it&#39;s a good thing to apply to any user input; Always aim to take as much varied junk input off the user and clean it up to meet your standards rather than forcing the user to meet it, and if you are forcing the user, definitely tell them exactly where they&#39;re going wrong. Aim for validation that feeds back instantly- don&#39;t have them submit the whole form then reject it and sent them back to one that is missing the values for its complicated double passwords fields and have them redo the captcha, or worse blank out all their input that was invalid \n",
            "excerpt": "The simplest <span class=\"highlight\">regex</span> in terms of comprehension would be:\n\n^04\\d\\d \\d\\d\\d \\d\\d\\d$\n\n\nBut beware, this would probably let them type in Unicode numbers outside the ascii range too\n\nTo be honest, excessive validation &hellip; them <span class=\"highlight\">redo</span> the captcha, or worse blank out all their input that was invalid &hellip; ",
            "title": "Is there a Regex expression for phone number validation?"
        },
        {
            "tags": [
                "regex",
                "powershell",
                "csv"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 2,
            "is_answered": false,
            "question_id": 56961359,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1562815766,
            "creation_date": 1562712449,
            "body": "Every month, I download twitter analytics for some work related handles that I am responsible for.\n\nI do some data massaging in powershell (changing -&#39;s to nulls for number columns) so that my Excel Power Query can work with the data easily.\n\nI&#39;ve decided I wanted to copy the hashtags out of the Tweet Text column into their own column for some investigation as to how they perform.\n\nMy entire script:\n\n\n\nSince I recognize I might have to do multiple months at once, I decided to simply redo the merged file each month. \n\nI&#39;m looking at what I need to add to pull out the hashtags and I&#39;m pretty sure I&#39;m on the right track with:\n\n\n\nOf course, the trouble is I&#39;m not sure what I need to put in XYZZY. I know my regex is #[a-zA-Z0-9] (I&#39;ve had trouble getting #\\w to capture anything beyond the first letter of the hashtag in some of my previous attempts.\n\n&#39;Tweet text&#39; is the column name.\n\nTweets range anywhere from 0 to 6 hashtags. One problem I see is that every regex matches option seems to return items in an object where I&#39;m hoping to simply add them as a space delimited list in that final field.\n\nQuestions I might see coming up:\nWhy not do this in Excel?\nGood question. I initially wanted to add it to the power query import, but it doesn&#39;t actually seem to be possible. While I could do it in VBA, I&#39;d rather this be packagable as a solution.\n\nWhy not do this in Python?\nI do have a solution mostly done, but I&#39;d really like to keep this as a simple process.\n\nWhat are the headers?\n&quot;Tweet id&quot;,&quot;Tweet permalink&quot;,&quot;Tweet text&quot;,&quot;time&quot;,&quot;impressions&quot;,&quot;engagements&quot;,&quot;engagement rate&quot;,&quot;retweets&quot;,&quot;replies&quot;,&quot;likes&quot;,&quot;user profile clicks&quot;,&quot;url clicks&quot;,&quot;hashtag clicks&quot;,&quot;detail expands&quot;,&quot;permalink clicks&quot;,&quot;app opens&quot;,&quot;app installs&quot;,&quot;follows&quot;,&quot;email tweet&quot;,&quot;dial phone&quot;,&quot;media views&quot;,&quot;media engagements&quot;,&quot;promoted impressions&quot;,&quot;promoted engagements&quot;,&quot;promoted engagement rate&quot;,&quot;promoted retweets&quot;,&quot;promoted replies&quot;,&quot;promoted likes&quot;,&quot;promoted user profile clicks&quot;,&quot;promoted url clicks&quot;,&quot;promoted hashtag clicks&quot;,&quot;promoted detail expands&quot;,&quot;promoted permalink clicks&quot;,&quot;promoted app opens&quot;,&quot;promoted app installs&quot;,&quot;promoted follows&quot;,&quot;promoted email tweet&quot;,&quot;promoted dial phone&quot;,&quot;promoted media views&quot;,&quot;promoted media engagements&quot;\n\nHow about some sample tweets?\nWell, I mean, they&#39;re tweets. Here&#39;s some examples:\n\n\n",
            "excerpt": "\\merged\\merged.csv -NoTypeInformation -Append\n\n\nSince I recognize I might have to do multiple months at once, I decided to simply <span class=\"highlight\">redo</span> the merged file each month. &hellip; I&#39;m looking at what I need to add to pull out the hashtags <span class=\"highlight\">and</span> I&#39;m pretty sure I&#39;m on the right track with:\n\nImport-Csv . &hellip; ",
            "title": "Extract Hashtags and add to new csv field in Powershell"
        },
        {
            "tags": [
                "javascript",
                "regex",
                "code-injection"
            ],
            "question_score": 2,
            "is_accepted": false,
            "answer_id": 56280482,
            "is_answered": false,
            "question_id": 56280327,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1558633635,
            "creation_date": 1558633527,
            "body": " is safe from injection vulnerabilities, but it is a denial of service vector (ReDoS).\n\n&quot;Reviewing Regexes in The Application&quot; explains how to vet the regexp that you got from the server.\n",
            "excerpt": "new RegExp(...).test(userInput) is safe from injection vulnerabilities, but it is a denial of service vector (<span class=\"highlight\">ReDoS</span>). &hellip; ",
            "title": "Is code injection possible in the test string of a RegExp?"
        },
        {
            "tags": [
                "node.js",
                "regex",
                "mongodb",
                "denial-of-service"
            ],
            "question_score": 6,
            "is_accepted": false,
            "answer_id": 55848966,
            "is_answered": false,
            "question_id": 53008875,
            "item_type": "answer",
            "score": 3,
            "last_activity_date": 1556194057,
            "creation_date": 1556194057,
            "body": "According to MongoDB Docs\n\n\n  MongoDB uses Perl compatible regular expressions (i.e. “PCRE” ) version 8.41 with UTF-8 support.\n\n\nAlso it&#39;s stated here for Handling Regexes Provided by The User \n\n\n  The PCRE engine allows you to set recursion limits. The lower your limits the better the protection against ReDoS, but higher the risk of aborting legitimate regexes that would find a valid match given slightly more time. Low recursion limits may prevent long regex matches. Low timeouts may abort searches through large files too early.\n\n\nPCRE uses hard limit on number of iterations according to Wikipedia\n\n\n  PCRE has a hard limit on recursion depth, Perl does not\n  \n  With default build options &quot;bbbbXcXaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot; =~ /.X(.+)+X/ will fail to match due to stack overflow, but Perl will match this correctly. Perl uses the heap for recursion and has no hard limit for recursion depth, whereas PCRE has a compile time hard limit.\n\n\nUnfortunately I couldn&#39;t get what actual hard limit does Mongo apply on PCRE recursion depth.\n\nfor more details on PCRE recursion depth check this answer\n",
            "excerpt": "Low recursion limits may prevent long <span class=\"highlight\">regex</span> matches. Low timeouts may abort searches through large files too early. &hellip; Perl uses the heap for recursion <span class=\"highlight\">and</span> has no hard limit for recursion depth, whereas PCRE has a compile time hard limit. &hellip; ",
            "title": "MongoDB ReDOS test"
        },
        {
            "tags": [
                "regex",
                "marklogic"
            ],
            "question_score": 2,
            "is_accepted": true,
            "answer_id": 55246425,
            "is_answered": false,
            "question_id": 55232902,
            "item_type": "answer",
            "score": 0,
            "last_activity_date": 1553017445,
            "creation_date": 1553015015,
            "body": "Basically you&#39;re doing a substring match with your search string as , and for that fn:contains will suffice\n\n\n\nSome advice: \n\n\n  Avoid regex if you can by replacing with simple string search filters\n\n\nI&#39;ve once had to redo an entire project in Java making use of not so complex regex, but even those few lookarounds made it very slow. I had to break those regex into multiple levels of string search filters, and boy what difference that made. In MarkLogic, functions like fn:substring-before and fn:substring-after can help you in reducing the text length as you go through your levels of string search filters.\n\nStill, if you have to use regex and are stuck with performance issues, then besides parallel computing, it&#39;s best to delegate the responsibility of the regex matching to a language / technology like Perl who is best at it.\n",
            "excerpt": "o, &quot;Name&quot;)\n\n\nSome advice: \n\n\n  Avoid <span class=\"highlight\">regex</span> if you can by replacing with simple string search filters\n\n\nI&#39;ve once had to <span class=\"highlight\">redo</span> an entire project in Java making use of not so complex <span class=\"highlight\">regex</span>, but even those &hellip; I had to break those <span class=\"highlight\">regex</span> into multiple levels of string search filters, <span class=\"highlight\">and</span> boy what difference that made. &hellip; ",
            "title": "Scalability of Regular Expressions (MarkLogic)"
        },
        {
            "tags": [
                "angular",
                "internet-explorer-11"
            ],
            "question_score": 3,
            "is_accepted": true,
            "answer_id": 55195398,
            "is_answered": false,
            "question_id": 55194822,
            "item_type": "answer",
            "score": 2,
            "last_activity_date": 1552734082,
            "creation_date": 1552729545,
            "body": "I encountered the same problem and was not able to get a comma as the decimal separator with  even when setting the language to a different locale and using a step smaller than 1:\n\n\nSo I opted for a custom solution based on  with a custom filtering  mechanism to only allow numbers in.\nSee this stackblitz for a complete demo.\n\nThe most important part is filtering what the user inputs in the field. I suggest you write a directive that listens to input/keydown/paste events and that uses a regex to only allow float/integer numbers.\nThe following regex () allows a number to begin with an optional  followed by digits, then a comma or dot and more digits.\nIf the new value (current value + key pressed) does not match the regex, simply prevent the event from happening with . Otherwise, do nothing and let the value go to the input.\nNote that you also have to take care of the copy/cut/paste/undo/redo special keys. And also take into account the cursor position and the selection if any.\nOnce the filtering is done, you can implement the  interface and bind it to your input via its  events. Do the string to number conversions in these handlers and do the number to string conversion in a getter or a pipe that you bind to the  attribute.\nHere is an example of such a directive, you could generalize it by giving the regex as an input parameter.\n\nAnd a custom input-number component implementing :\n\nThe component can then be used with two-way binding with  or with . It will work with reactive-forms too:\n\n",
            "excerpt": "I suggest you write a directive that listens to input/keydown/paste events <span class=\"highlight\">and</span> that uses a <span class=\"highlight\">regex</span> to only allow float/integer numbers.\nThe following <span class=\"highlight\">regex</span> (/^-?\\d*(,|\\.)? &hellip; Note that you also have to take care of the copy/cut/paste/undo/<span class=\"highlight\">redo</span> special keys. <span class=\"highlight\">And</span> also take into account the cursor position <span class=\"highlight\">and</span> the selection if any. &hellip; ",
            "title": "Support for &#39;,&#39; in input type=&quot;number&quot; in IE 11 using Angular + material"
        },
        {
            "tags": [
                "php",
                "regex",
                ".htaccess"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 1,
            "is_answered": true,
            "question_id": 53216900,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1541719644,
            "creation_date": 1541714954,
            "body": "I&#39;m redoing a website and on this website there are two types of URL such as:\n\n\n\nI need to get only  without the extension  or  in any of the above situations, so I can submit the  to be searched in mySQL.\n\nSo if the URL does not have a  it just removes the  extension, otherwise removes the  from the URL.\n\nWhat would be the best way to do this (php, regex or )?\n",
            "excerpt": "I&#39;m redoing a website <span class=\"highlight\">and</span> on this website there are two types of URL such as:\n\nhttp://www.example.com/category/subcategory/one-friend-url-040569485.php\nhttp://www.example.com/category/subcategory/one-friend-url.php &hellip; What would be the best way to do this (php, <span class=\"highlight\">regex</span> or .htaccess)? &hellip; ",
            "title": "Removing characters after last alpha character (if exist) in url in PHP"
        },
        {
            "tags": [
                "regex",
                "sonarqube"
            ],
            "question_score": 3,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 1,
            "is_answered": true,
            "question_id": 52756066,
            "item_type": "question",
            "score": 3,
            "last_activity_date": 1539256461,
            "creation_date": 1539248121,
            "body": "This is the regex pattern suggested for email validation by the W3C HTML spec:\n\n\n\nSonarQube flags it as &quot;vulnerable to a denial of service attack (ReDOS)&quot;.\nI think it&#39;s a false positive, but I&#39;m no expert on this field and I might be missing something.\n\nI believe Sonar thinks it might be susceptible to ReDoS attacks due to nesting repetitions -  contained in the group followed by the asterisk. But still, I think that when regex engine backtracks this expression it can resolve it quickly as either dot or end of the line is expected afterward. Is my reasoning correct?\n",
            "excerpt": "*$\n\n\nSonarQube flags it as &quot;vulnerable to a denial of service attack (<span class=\"highlight\">ReDOS</span>)&quot;.\nI think it&#39;s a false positive, but I&#39;m no expert on this field <span class=\"highlight\">and</span> I might be missing something. &hellip; I believe Sonar thinks it might be susceptible to <span class=\"highlight\">ReDoS</span> attacks due to nesting repetitions - [a-zA-Z0-9-]{0,61} contained in the group followed by the asterisk. &hellip; ",
            "title": "Is email regex pattern suggested by W3C spec prone to ReDoS attacks?"
        },
        {
            "tags": [
                "php"
            ],
            "question_score": 0,
            "is_accepted": false,
            "answer_id": 52141798,
            "is_answered": false,
            "question_id": 52141692,
            "item_type": "answer",
            "score": 2,
            "last_activity_date": 1535939445,
            "creation_date": 1535932106,
            "body": "Start with  specifically \n\n\n\nOutput\n\n\n\nSandbox\n\nThe Regex for this is just matches  if it&#39;s the start of the string, you could probably do this part a few ways, such as with \n\nNo subdomain\n\nIf you don&#39;t want any subdomain at all:\n\n\n\nSandbox\n\nNo subdomain, no Country Code\n\n\n\nSandbox\n\nHow it works,\n\nSame as the previous one but the domain is separated from the host, and instead of just capturing everything, we capture everything but the  and outside the new group we capture everything (confusingly the . is everything here) but with  which means  0 or more times,  non-greedy don&#39;t take characters from previous expressions.\n\nOr to put it another way.  Capture anything 0 or more times don&#39;t steal characters from previous matches.  This way if there is nothing such as  we are only worried about stuff after  then its 0 matches.  But if its  it matches the .\n\nSingle Line Answer.\n\nSome versions of PHP, I forget what ones but the newer ones actually let you do this:\n\n\n\nSo taking the last example we can compress that into one line and remove the variable assignment.\n\n\n\nSee it in action\n\nThat was just for fun!\n\nSummery\n\nUsing  is really the &quot;correct&quot; way to do it.  Or the proper way to start as it removes a lot of the other &quot;stuff&quot; and gives you a good starting place. Anyway this was fun for me ... :) ...  And I needed a break from coding my Website, because it&#39;s tedious for me now (It was 8 years old, so I&#39;m redoing it in WordPress, and I&#39;ve done about a zillion WordPress site) ...\n\nCheers, hope it helps!\n",
            "excerpt": "\\n&quot;;\n\n\nOutput\n\nsite.google.com\ngoogle.com\n\n\nSandbox\n\nThe <span class=\"highlight\">Regex</span> for this is just matches www. if it&#39;s the start of the string, you could probably do this part a few ways, such as with \n\nNo subdomain\n\nIf &hellip; <span class=\"highlight\">And</span> I needed a break from coding my Website, because it&#39;s tedious for me now (It was 8 years old, so I&#39;m redoing it in WordPress, <span class=\"highlight\">and</span> I&#39;ve done about a zillion WordPress site) ... &hellip; ",
            "title": "Getting base domain name php"
        },
        {
            "tags": [
                "javascript",
                "regex",
                "parentheses"
            ],
            "question_score": 0,
            "is_accepted": false,
            "answer_id": 52045084,
            "is_answered": false,
            "question_id": 52044832,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1535395183,
            "creation_date": 1535394640,
            "body": "You will not be able to do this in pure regex, this is similar of trying to parse HTML with regex. in short, it is not possible (and have been answered many time over in all possible way)\n\nSo you will need javascript. To do this in javascript will not be simple, as you will need to parse the entire string to find &quot;^-who-are-not-in-parenthese&quot;.\n\nI would first check if there is some parser for mathematical operation or other who already exist and could be adapted for your need.\n\nIf you do not find something, you will need to create yourself. \n\nYou could do it with a loop passing character by character, having a counter for the indentation level of parenthesis, and a tree-like data structure as an output.\n\nyou could also use regex to find the last level of indentation and creating a bottom-up parser. you find all the innerest parenthesis group, saved them, and replace them with a special identifier character. you can then redo the operation to find the now innerest parenthesis group, check if there is special character in them and place them in the tree (as parent of the element identified by the character.)\n\nonce you have your tree structure (in one way or another), the root and the first level of element should be what you want.\n",
            "excerpt": "You will not be able to do this in pure <span class=\"highlight\">regex</span>, this is similar of trying to parse HTML with <span class=\"highlight\">regex</span>. in short, it is not possible (<span class=\"highlight\">and</span> have been answered many time over in all possible way)\n\nSo you will &hellip; . you can then <span class=\"highlight\">redo</span> the operation to find the now innerest parenthesis group, check if there is special character in them <span class=\"highlight\">and</span> place them in the tree (as parent of the element identified by the character &hellip; ",
            "title": "How to apply regexp before and after a certain character"
        },
        {
            "tags": [
                "java",
                "android",
                "regex"
            ],
            "question_score": 0,
            "is_accepted": true,
            "answer_id": 51562388,
            "is_answered": false,
            "question_id": 51562237,
            "item_type": "answer",
            "score": 2,
            "last_activity_date": 1532710324,
            "creation_date": 1532710324,
            "body": "I&#39;d suggest taking a look at https://en.wikipedia.org/wiki/ReDoS#Evil_regexes\n\nYour regex contains several repeated patterns:\n\n\n\nand\n\n\n\nJust as a quick example of how this might slow it down, take a look at the processing time and steps on these examples: a few characters versus having even more characters at the end and even worse, that set repeated many times\n\nTo fix this, you should try narrowing down your regular expressions a bit depending on what you&#39;re actually trying to grab, and remove some of the recursion in them. Without knowing more about your desired input/output it&#39;s kind of hard to guess what you want, but I&#39;d wager something like this would accomplish the same thing faster:\n\n\n\nor more inclusively\n\n\n\nAnother good reference\n",
            "excerpt": "I&#39;d suggest taking a look at https://en.wikipedia.org/wiki/<span class=\"highlight\">ReDoS</span>#Evil_regexes\n\nYour <span class=\"highlight\">regex</span> contains several repeated patterns:\n\n([a-zA-Z]+[’&#39;,.\\-]?[a-zA-Z ]*)+ \n\n\n<span class=\"highlight\">and</span>\n\n([a-zA-Z]+[’&#39;,.\\-]? &hellip; [a-zA-Z ]+)+$\n\n\nJust as a quick example of how this might slow it down, take a look at the processing time <span class=\"highlight\">and</span> steps on these examples: a few characters versus having even more characters at the end <span class=\"highlight\">and</span> &hellip; ",
            "title": "Android slow matcher regex"
        },
        {
            "tags": [
                "java",
                "regex",
                "performance"
            ],
            "question_score": 1,
            "is_accepted": false,
            "answer_id": 51560012,
            "is_answered": false,
            "question_id": 51559537,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1532701463,
            "creation_date": 1532701463,
            "body": "I&#39;d suggest taking a look at https://en.wikipedia.org/wiki/ReDoS#Evil_regexes\n\nYour regex contains a repeated pattern:\n\n\n\nJust as a quick example of how this might slow it down, take a look at the processing time on these two examples: exact matches versus having extra characters at the end and even worse, that set repeated several times\n\nEdit: Another good reference\n",
            "excerpt": "I&#39;d suggest taking a look at https://en.wikipedia.org/wiki/<span class=\"highlight\">ReDoS</span>#Evil_regexes\n\nYour <span class=\"highlight\">regex</span> contains a repeated pattern:\n\n(?:(?!-)[a-z0-9-]+(?:(?&lt;!-)\\.)?) &hellip; + \n\n\nJust as a quick example of how this might slow it down, take a look at the processing time on these two examples: exact matches versus having extra characters at the end <span class=\"highlight\">and</span> even worse, that set repeated &hellip; ",
            "title": "Java - Multiline regex bad performance with large string"
        },
        {
            "tags": [
                "c",
                "regex",
                "pcre"
            ],
            "question_score": -2,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 1,
            "is_answered": true,
            "question_id": 50306856,
            "item_type": "question",
            "score": -2,
            "last_activity_date": 1526741530,
            "creation_date": 1526132454,
            "body": "Hey guys I am needing to meet a certain client demand for PCI . I am fairly comfortable in C and I really don&#39;t want to redo the wheel here. I have an regex example in python that I would like to have applied in C.\n\n\n\nI have found some POSIX library &quot;regex.h &quot; and this seems to used the really old regex standard.\n\nI have found two examples one uses POSIX regex which seems to be limited at best. Stolen from Here\n\n\n\nThe problem I see with the above is that it uses (from what I have gathered) Old Regex which doesn&#39;t support removing spaces and dashes.It also only really seems to perform some matching and looking for decent examples for this is not been turning many results for me in Google. So I looked further and in that answer it ( the question above) mentions the use of PCRE.\n\nI found some demo Here\n\nAs I said before, I don&#39;t want to reinvent the wheel . I think it would be terrible to write my own regex for what could contain potential flaws when something clean and simple probably exists.\n\nThe PCI question comes from a client that we need to be able to monitor systems for how/where they are storing PANs and such. It&#39;s sort of a DLP, sphere of audit,and proving that CCNS are stored correctly.\n\nHow can I use regex in C to search for credit card numbers? \n\nPS. I am ok with this regex, and open for better ways of doing this regex.\n",
            "excerpt": "I am fairly comfortable in C <span class=\"highlight\">and</span> I really don&#39;t want to <span class=\"highlight\">redo</span> the wheel here. I have an <span class=\"highlight\">regex</span> example in python that I would like to have applied in C.\n\n  pan_regexs = {&#39;Mastercard&#39;: re.compile(&#39;(? &hellip; I am ok with this <span class=\"highlight\">regex</span>, <span class=\"highlight\">and</span> open for better ways of doing this <span class=\"highlight\">regex</span>. &hellip; ",
            "title": "Regex in C - search for credit card numbers - PCI compliance"
        },
        {
            "tags": [
                "javascript",
                "string",
                "url"
            ],
            "question_score": 544,
            "is_accepted": false,
            "answer_id": 49185442,
            "is_answered": false,
            "question_id": 5717093,
            "item_type": "answer",
            "score": 14,
            "last_activity_date": 1524518799,
            "creation_date": 1520560362,
            "body": "As has been noted the perfect regex is elusive but still seems to be a reasonable approach (alternatives are server side tests or the new experimental URL API). However the high ranking answers are often returning false for common URLs but even worse will freeze your app/page for minutes on even as simple a string as . It&#39;s been pointed out in some of the comments, but most probably haven&#39;t entered a bad value to see it. Hanging like that makes that code unusable in any serious application. I think it&#39;s due to the repeated case insensitive sets in code like . Take out the &#39;i&#39; and it doesn&#39;t hang but will of course not work as desired. But even with the ignore case flag those tests reject high unicode values that are allowed.\n\nThe best already mentioned is:\n\n\n\nThat comes from Github segmentio/is-url. The good thing about a code repository is you can see the testing and any issues and also the test strings run through it. There&#39;s a branch that would allow strings missing protocol like , though you&#39;re probably making too many assumptions then. The repository has been updated and I&#39;m not planning on trying to keep up a mirror here. It&#39;s been broken up into separate tests to avoid RegEx redos which can be exploited for DOS attacks (I don&#39;t think you have to worry about that with client side js, but you do have to worry about your page hanging for so long that your visitor leaves your site).\n\nThere is one other repository I&#39;ve seen that may even be better for isURL at dperini/regex-weburl.js, but it is highly complex. It has a bigger test list of valid and invalid URLs. The simple one above still passes all the positives and only fails to block a few odd negatives like  as well as the special ips.\n\nWhichever you choose, run it through this function which I&#39;ve adapted from the tests on dperini/regex-weburl.js, while using your browser&#39;s Developer Tools inpector.\n\n\n\nAnd then test that string of &#39;a&#39;s.\n\nSee this comparison of isURL regex by Mathias Bynens for more info before you post a seemingly great regex.\n",
            "excerpt": "It&#39;s been broken up into separate tests to avoid <span class=\"highlight\">RegEx</span> <span class=\"highlight\">redos</span> which can be exploited for DOS attacks (I don&#39;t think you have to worry about that with client side js, but you do have to worry about your &hellip; isURL(&quot;http://10.1.1.1&quot;));}\n\n\n<span class=\"highlight\">And</span> then test that string of &#39;a&#39;s.\n\nSee this comparison of isURL <span class=\"highlight\">regex</span> by Mathias Bynens for more info before you post a seemingly great <span class=\"highlight\">regex</span>. &hellip; ",
            "title": "Check if a JavaScript string is a URL"
        },
        {
            "tags": [
                "mysql"
            ],
            "question_score": 0,
            "is_accepted": false,
            "answer_id": 49960430,
            "is_answered": false,
            "question_id": 49960292,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1524346448,
            "creation_date": 1524346448,
            "body": "Yes, you could write a stored procedure that does some sort of string parsing, or use a regex as in @ladd2025&#39;s answer...\n\nBut then you&#39;d be redoing this conversion on every query. There&#39;s the cost of the conversion, but it also means you cannot take advantage of indexing. A query like  has to do a full table scan. Whereas if  were an indexed number to begin with  is a very fast indexed query. This a problem with storing &quot;formatted&quot; information, you have to strip the formatting every time you want to do something with it.\n\nYou&#39;d be far better off normalizing your stored data to store the magnitude as a numeric data type such as bigint, double, or numeric, and the unit as an enum column. Or consider if it makes sense to store all these different units in the same table; does it make sense to compare 8.5 gb with 15.99 Ghz?\n\n stored in bytes would become the  8,500,000,000 (the exact value depends on whether it&#39;s 1000 bytes or 1024 bytes) with the unit .  might become the  15,993,450,000 with the unit . And so on.\n\nYou can accomplish this by adding the new columns to your table, and doing the update to convert from the strings to the units and quantity. And then change whatever is inputting the values to do the same. You can continue to store the original human formatted string if you like, but you might be better off not and applying the formatting as needed.\n\nThis makes your queries much simpler, less chance of bugs. And they can take advantage of indexing, so they&#39;ll be much, much faster.\n",
            "excerpt": "Yes, you could write a stored procedure that does some sort of string parsing, or use a <span class=\"highlight\">regex</span> as in @ladd2025&#39;s answer...\n\nBut then you&#39;d be redoing this conversion on every query. &hellip; <span class=\"highlight\">And</span> so on.\n\nYou can accomplish this by adding the new columns to your table, <span class=\"highlight\">and</span> doing the update to convert from the strings to the units <span class=\"highlight\">and</span> quantity. &hellip; ",
            "title": "MySQL: parse and cast strings which contain numbers with units"
        },
        {
            "tags": [
                "regex",
                "pcre",
                "email-validation"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 1,
            "is_answered": true,
            "question_id": 49360122,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1521978419,
            "creation_date": 1521453562,
            "body": "I have scanned multiple files as pdf and I now want to extract emails from those files using regex. But the PDF sometimes has spaces in between words as it&#39;s image to text interpretation is not perfect. It is not possible to redo the scans as I no longer have the documents in paper. \n\nFor example these are the possibilities:\n\n\n\nI have tried multiple regex expressions but my knowledge of regex is too limited to find all the solutions. \n\nI used the General Email Regex from http://emailregex.com/ and added spaces.\n\n\n\nThis solutions only matches to 4 of the possibilities.\n\nAny suggestions to find more of the emails? Partial solutions are also welcome since I can add them to the results.\n\nNote: The pdf does not contain only the emails. So a line of text could look like this: &quot;email: example.email @ gmail .com?\\&quot;\n",
            "excerpt": "I have scanned multiple files as pdf <span class=\"highlight\">and</span> I now want to extract emails from those files using <span class=\"highlight\">regex</span>. &hellip; I used the General Email <span class=\"highlight\">Regex</span> from http://emailregex.com/ <span class=\"highlight\">and</span> added spaces.\n\n(?:[a-zA-Z0-9!#$%&amp;&#39;*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&amp;&#39;*+/=?^_`{|}~-]+)*|&quot;(? &hellip; ",
            "title": "Finding invalid emails with spaces using Regex"
        },
        {
            "tags": [
                "regex",
                "pattern-matching"
            ],
            "question_score": 0,
            "is_accepted": false,
            "answer_id": 48804824,
            "is_answered": false,
            "question_id": 48801518,
            "item_type": "answer",
            "score": 0,
            "last_activity_date": 1518690115,
            "creation_date": 1518690115,
            "body": "If you&#39;re working in PCRE (with say, PHP):\n\n\n\nBreakdown:\n\n\n - from the start of the string\n - match and capture a single character in the ranges given: a-z, A-Z\n - match and capture a single character in the ranges given: 0-9\n - redo the regex in the first group twice (recursive subpattern)\n - redo the regex in the second group 3 times (recursive subpattern)\n - the end of the string\n\n\nIf you want to match this in the middle of a sentence, exchange  and  for  - which will match a word boundary\n\nSee the demo\n\nIf you&#39;re not using PCRE:\n\n\n\nWhich does the same thing, but has some copy-paste involved\n",
            "excerpt": "1){2} - <span class=\"highlight\">redo</span> the <span class=\"highlight\">regex</span> in the first group twice (recursive subpattern)\n(? &hellip; 2){3} - <span class=\"highlight\">redo</span> the <span class=\"highlight\">regex</span> in the second group 3 times (recursive subpattern)\n$ - the end of the string\n\n\nIf you want to match this in the middle of a sentence, exchange ^ <span class=\"highlight\">and</span> $ for \\b - which will match a &hellip; ",
            "title": "Working with regex for alphanumeric"
        },
        {
            "tags": [
                "node.js",
                "restful-architecture"
            ],
            "question_score": 1,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 0,
            "is_answered": false,
            "question_id": 48209348,
            "item_type": "question",
            "score": 1,
            "last_activity_date": 1515680827,
            "creation_date": 1515680827,
            "body": "I am reading/implementing a RESTful API design, where the author has stated that regex can be used in the query param as part of filtering. \n\nFor example:\n\n\n\nFrom various articles on ReDoS, I can&#39;t help to think that this is not a very good idea because I don&#39;t believe there is a sane way to do validation and whitelisting on the incoming regex. And the datastore/database could suffer heavy penalties.\n\nSo if this requirement is part of an API spec, that I have no control over, how would I safely implement this feature?\n\nI would be using Express.js\n",
            "excerpt": "I am reading/implementing a RESTful API design, where the author has stated that <span class=\"highlight\">regex</span> can be used in the query param as part of filtering. \n\nFor example:\n\nhttps://example.com/users?name=/bil? &hellip; li/\n\n\nFrom various articles on <span class=\"highlight\">ReDoS</span>, I can&#39;t help to think that this is not a very good idea because I don&#39;t believe there is a sane way to do validation <span class=\"highlight\">and</span> whitelisting on the incoming <span class=\"highlight\">regex</span>. &hellip; ",
            "title": "Regular Expression as part of query parameter for RESTful API"
        },
        {
            "tags": [
                "c#",
                "wcf",
                "ebay-api"
            ],
            "question_score": 3,
            "is_accepted": true,
            "answer_id": 48025793,
            "is_answered": false,
            "question_id": 48023631,
            "item_type": "answer",
            "score": 9,
            "last_activity_date": 1514568971,
            "creation_date": 1514566488,
            "body": "Alright, I managed to figure it out. The way to get it working is a bit of a doozy, there&#39;s probably a better way but I couldn&#39;t figure one out. Strap in.\n\nWCF Documentation\n\nBefore I start, Microsoft has great docs about WCF here. Check them out if you&#39;re not familiar with WCF like me. This is using a client, not a server. We&#39;re just talking to eBay&#39;s server, not running our own.\n\nStep 0: Ensure that solution builds\n\nBefore the next step, make sure your solution builds. You cannot add a connected service unless it successfully builds.\n\nStep 1: Add connected service\n\nFirst step is to add the service reference to the project and generate the model from eBay&#39;s server. eBay provides WSDL files for this purpose. We specifically want this one. You can use the  tool in Visual Studio to do this. You must have an ASP.NET project selected, then go to . Use the option for . Enter that .wsdl URL in the  box, click , change the namespace to whatever you want, then click . The namespace is purely preference, I made mine . All other settings can be left as their defaults. A box will pop up with a bunch of logging stuff, you can ignore it and wait until it&#39;s finished. There will be a TON of yellow warnings, those can be ignored as well.\n\n(Note: You can also use  to generate the model instead of Visual Studio&#39;s GUI, but I won&#39;t cover that.)\n\nStep 2: Edit service reference file\n\nThe web project should now have a section in Solution Explorer near the top called . There should be a folder within that&#39;s named whatever namespace you provided previously. Inside will be a file called  that contains all of the parsing information for the eBay service. This file is MASSIVE, mine has nearly 122k lines. We need to do a couple of things in here.\n\nWe need to do a couple find/replace operations. To do this, we have to find/replace two strings. Turn on regex in the replace window, then replace  with nothing. This catches the cases where  is one of multiple parameters on the attribute. Then do the same thing, but replace . Doing this breaks one of the classes that I came across, so find the class . It has a field called  and a property called . Delete both of those.\n\nKeep in mind you&#39;ll need to redo these steps if you ever regenerate the service from the server, as that process overwrites .\n\n(Why do this? The eBay WSDL file specifies the order that elements will be in when they&#39;re returned from the API, but they&#39;re not even close to correct. Because of this, almost none of the responses will actually parse properly. We need to remove the order specifications and let the program handle the parsing via name.)\n\nStep 3: Write client wrapper\n\nIt&#39;s possible to work directly with this service, but doing so gets really messy. I therefore wrote a wrapper around the client that simplifies this greatly. Commented code is below, the DI will come in the next step so don&#39;t worry about that. You would need to add a function for each API endpoint that you&#39;ll use.\n\n\n\nStep 4: Set up dependency injection\n\nI use the built-in ASP.NET Core DI, so that needs to be set up. The base eBay client class can be a singleton, but your wrapper class should be scoped.\n\nIn  / :\n\n\n\nStep 5: Call the wrapper in your code\n\nYour controller might look like this:\n\n\n",
            "excerpt": "Turn on <span class=\"highlight\">regex</span> in the replace window, then replace , Order=\\d{1,3} with nothing. This catches the cases where Order is one of multiple parameters on the attribute. &hellip; Keep in mind you&#39;ll need to <span class=\"highlight\">redo</span> these steps if you ever regenerate the service from the server, as that process overwrites Reference.cs.\n\n(Why do this? &hellip; ",
            "title": "Querying eBay API with WCF"
        },
        {
            "tags": [
                "python",
                "pandas",
                "dataframe"
            ],
            "question_score": 1,
            "is_accepted": false,
            "answer_id": 47818940,
            "is_answered": false,
            "question_id": 47818802,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1513272092,
            "creation_date": 1513272092,
            "body": "The best option would be to read the data once again using regex. If not, redo.\n\n\n",
            "excerpt": "The best option would be to read the data once again using <span class=\"highlight\">regex</span>. If not, <span class=\"highlight\">redo</span>. &hellip; ",
            "title": "Split a column and append to existing values in other columns using pandas"
        },
        {
            "tags": [
                "regex"
            ],
            "question_score": 6,
            "is_accepted": false,
            "answer_id": 7706275,
            "is_answered": false,
            "question_id": 7553722,
            "item_type": "answer",
            "score": 7,
            "last_activity_date": 1511561174,
            "creation_date": 1318191210,
            "body": "I&#39;ll plagiarize myself from my blog post, When to use and when not to use regular expressions...\n\nPublic websites should not allow users to enter regular expressions for searching.  Giving the full power of regex to the general public for a website&#39;s search engine could have a devastating effect.  There is such a thing as a regular expression denial of service (ReDoS) attack that should be avoided at all costs.\n\nHTML/XML parsing should not be done with regular expressions.  First of all, regular expressions are designed to parse a regular language which is the simplest among the Chomsky hierarchy.  Now, with the advent of balancing group definitions in the .NET flavor of regular expressions you can venture into slightly more complex territory and do a few things with XML or HTML in controlled situations.  However, there&#39;s not much point.  There are parsers available for both XML and HTML which will do the job more easily, more efficiently, and more reliably.  In .NET, XML can be handled the old XmlDocument way or even more easily with Linq to XML.  Or for HTML there&#39;s the HTML Agility Pack.\n\nConclusion\n\nRegular expressions have their uses.  I still contend that in many cases they can save the programmer a lot of time and effort. Of course, given infinite time &amp; resources, one could almost always build a procedural solution that&#39;s more efficient than an equivalent regular expression. \n\nYour decision to abandon regex should be based on 3 things:\n\n1.) Is the regular expression so slow in your scenario that it has become a bottleneck?\n\n2.) Is your procedural solution actually quicker &amp; easier to write than the regular expression?\n\n3.) Is there a specialized parser that will do the job better?\n",
            "excerpt": "Giving the full power of <span class=\"highlight\">regex</span> to the general public for a website&#39;s search engine could have a devastating effect. &hellip; There are parsers available for both XML <span class=\"highlight\">and</span> HTML which will do the job more easily, more efficiently, <span class=\"highlight\">and</span> more reliably. &hellip; ",
            "title": "When should I not use regular expressions?"
        },
        {
            "tags": [
                "javascript",
                "regex",
                "eclipse",
                "find-replace"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 1,
            "is_answered": false,
            "question_id": 46919503,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1508946107,
            "creation_date": 1508877059,
            "body": "I am trying to redo all of our JavaScript code for a page and make it consistent.  I have a function that returns getElementById(Id) with just $ but there are a lot of document.form.elementID.value so I need to turn all of these into $(&quot;elementID&quot;).value \n\nWhat would be the Regex to retain the ElementID when I am doing a mass replacement in Ecipse?  I will also need to add the quotes.\n",
            "excerpt": "I am trying to <span class=\"highlight\">redo</span> all of our JavaScript code for a page <span class=\"highlight\">and</span> make it consistent. &hellip; I have a function that returns getElementById(Id) with just $ but there are a lot of document.form.elementID.value so I need to turn all of these into $(&quot;elementID&quot;).value \n\nWhat would be the <span class=\"highlight\">Regex</span> to &hellip; ",
            "title": "Regex javascript code, but retaining middle text"
        },
        {
            "tags": [
                "python",
                "html"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 0,
            "is_answered": false,
            "question_id": 45966321,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1504116196,
            "creation_date": 1504113628,
            "body": "In many of our application&#39;s .htm files, we have Adobe RoboHelp generated references to Javascript files, like so:\n\n\n\nHaving too many of these files increase download/unzip times, so we want to compact all of these .js files into one &quot;master&quot; file, and have these script references made into one reference.\n\nI have the first finished by appending the contents of each .js file to a &quot;new&quot; .js file. To redo the references, I have been trying to write a Python application to automate it for thousands of files. For the second part, I wanted to use regular expressions to find/replace, but from what I&#39;ve read, HTML is not a regular language, and thus cannot be fully and properly accepted by regular expressions. \n\nMy question is, if regexes are okay in this situation, how would I replace many  lines with a single, predefined line? If not, what are some other solutions I could look into?\n",
            "excerpt": "To <span class=\"highlight\">redo</span> the references, I have been trying to write a Python application to automate it for thousands of files. &hellip; For the second part, I wanted to use regular expressions to find/replace, but from what I&#39;ve read, HTML is not a regular language, <span class=\"highlight\">and</span> thus cannot be fully <span class=\"highlight\">and</span> properly accepted by regular expressions. &hellip; ",
            "title": "Python - Replacing many consecutive &lt;script&gt; tags with one &quot;master&quot; tag?"
        },
        {
            "tags": [
                "discrete-mathematics",
                "state-machine"
            ],
            "question_score": 2,
            "is_accepted": false,
            "answer_id": 43789705,
            "is_answered": false,
            "question_id": 43789546,
            "item_type": "answer",
            "score": 0,
            "last_activity_date": 1493923717,
            "creation_date": 1493920430,
            "body": "Okay so, here are my thoughts jason pointed quite well the problems you will encounter, first I would create a table with my codes, and create a set of strings that can be accepted\n\n\n\nand a set of acceptable strings according to your guidelines would be\n 000110\n 001000100001110\n\nGive your letter codes expressions like\n001000 won&#39;t be acceptable with an even 0 parity property. Please notices that that&#39;s just an A so A or C messages won&#39;t be accepted. I would encourage you to redo your letter codes, a 3 digits code will be easier, because you&#39;ll have a larger set of accepted strings and your DFA will be probably smaller.\n\nGive your codes, it is hard to implement a DFA only solution, or a simple DFA only solution. Also remember that codes between letters shouldn&#39;t be prefixes of other codes, this will simplify your problem.\n\nLet&#39;s say our codes are\n\n\n\nthen we have the following set of acceptable messages with an even 0 pairing property:\n\n\n\nNotices that in human language you&#39;ll have an amount of A&#39;s followed by a 0 any amount of BC&#39;s followed by a 0 and so on. You can start forming your regex from there. I hope this is clear enough.\n",
            "excerpt": "I would encourage you to <span class=\"highlight\">redo</span> your letter codes, a 3 digits code will be easier, because you&#39;ll have a larger set of accepted strings <span class=\"highlight\">and</span> your DFA will be probably smaller. &hellip; You can start forming your <span class=\"highlight\">regex</span> from there. I hope this is clear enough. &hellip; ",
            "title": "Creating a Deterministic Finite Automata with Odd 0 Parity - Combining DFA"
        },
        {
            "tags": [
                "regex",
                "security",
                "match",
                "code-injection",
                "denial-of-service"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 2,
            "is_answered": true,
            "question_id": 35798236,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1487595420,
            "creation_date": 1457100853,
            "body": "I planned to provide regex support in my service so my users can configure a regex and a String will be processed if it matches the regex.\n\nThen I stumbled upon these articles:\n\nOWASP ReDOS\n\nblog.makensi.es\n\nAnd found that a simple regex can be disastrous in my servers.\n\nI need only basic matching abilities.\n\nI&#39;m planning to just strip parenthesis from the regex and if it is a valid regex, it&#39;ll be processed. I believe stripping parenthesis alone will be enough to save my servers from those attacks.\n\nAm I right in this or missing anything?\n",
            "excerpt": "I planned to provide <span class=\"highlight\">regex</span> support in my service so my users can configure a <span class=\"highlight\">regex</span> <span class=\"highlight\">and</span> a String will be processed if it matches the <span class=\"highlight\">regex</span>. &hellip; Then I stumbled upon these articles:\n\nOWASP <span class=\"highlight\">ReDOS</span>\n\nblog.makensi.es\n\n<span class=\"highlight\">And</span> found that a simple <span class=\"highlight\">regex</span> can be disastrous in my servers.\n\nI need only basic matching abilities. &hellip; ",
            "title": "Not having parenthesis alone in a regex will prevent ReDOS?"
        },
        {
            "tags": [
                "google-analytics"
            ],
            "question_score": 1,
            "is_accepted": false,
            "answer_id": 41781267,
            "is_answered": false,
            "question_id": 41769900,
            "item_type": "answer",
            "score": 0,
            "last_activity_date": 1485050500,
            "creation_date": 1485013642,
            "body": "If you want the pages grouped only into , , or  then you would need field A of your filter to be\n\n\n\nThis assumes that the string that could show up at the end is numbers only, eg. . You could also modify this so that if you know it&#39;s just going to be numbers before  or , then the regex could be\n\n\n\nThe output field would be . Notice how I included the slashes in the field A groupings to make the output look a little cleaner.\n\nTest this though, because I&#39;m on a mobile right now and can&#39;t access a good online regex tester!!!\n\nEDIT: \n\nTwo changes: 1) note how the  is now a  so that the number is actually required (eg. ). 2) I had to modify the regex because I finally got to testing it and found that the brackets might impact the matching, and also because the advanced filters use the same brackets to piece together the output, I had to redo the regex and break it up into two matching groups (that probably doesn&#39;t make sense but I hope it works!).\n",
            "excerpt": "/blog/1234). 2) I had to modify the <span class=\"highlight\">regex</span> because I finally got to testing it <span class=\"highlight\">and</span> found that the brackets might impact the matching, <span class=\"highlight\">and</span> also because the advanced filters use the same brackets to piece &hellip; together the output, I had to <span class=\"highlight\">redo</span> the <span class=\"highlight\">regex</span> <span class=\"highlight\">and</span> break it up into two matching groups (that probably doesn&#39;t make sense but I hope it works!). &hellip; ",
            "title": "Removing IDs from links in Google Analytics"
        },
        {
            "tags": [
                "c#",
                "swagger-ui",
                "swashbuckle"
            ],
            "question_score": -1,
            "is_accepted": true,
            "answer_id": 39601241,
            "is_answered": false,
            "question_id": 39593770,
            "item_type": "answer",
            "score": 0,
            "last_activity_date": 1474404360,
            "creation_date": 1474395925,
            "body": "Redoing the answer to this to make it more clear.\n\n1) you&#39;ll need to create a RequestExampleAttribute class that just keeps the example class type similar to the link you sent.\n\n2) decorate the action method with the RequestExampleAttribute:\n\n\n\n3) MyRequestExample is a simple class derived from your model, except it has all the properties populated with example values in the constructor\n\n4) Create the operation filter as in your link\n\n5) In the operation filter, find the attribute (should only be one or none):\n\n\n\n6) if exampleAttr is null, return, otherwise, new up an instance of the type with Activator.CreateInstance()\n\n7) set context.SchemaRegistry.Definitions[0].Example to instance created.\n\n\n\n8) check if it works... if not, continue to step 9\n\n9) if its not reading from ...[0].Example, it is reading from the property schema, so you&#39;ll need to modify all the properties:\n\n\n\nThis is just a dictionary key/value pair with the property name in the key. What I did in my code was I loop through the dictionary keys and then use regex to pull the value from the serialized instance created in step #6. I.e.\n\n\n\nso when you loop through the dictionary, the first key will be &quot;prop1&quot; for example, so you can use regex to pull &quot;prop1&quot;: [string] and then copy that string to the Value.Example for the prop.\n\nHopefully you won&#39;t need to do that since the successful return model reads from the &quot;easy&quot; place to modify, so hopefully the request will also pull from the &quot;easy&quot; place.\n\nMake sense now?\n",
            "excerpt": "What I did in my code was I loop through the dictionary keys <span class=\"highlight\">and</span> then use <span class=\"highlight\">regex</span> to pull the value from the serialized instance created in step #6. I.e. &hellip; {\n  &quot;prop1&quot; : &quot;value1&quot;\n}\n\n\nso when you loop through the dictionary, the first key will be &quot;prop1&quot; for example, so you can use <span class=\"highlight\">regex</span> to pull &quot;prop1&quot;: [string] <span class=\"highlight\">and</span> then copy that string to the Value.Example &hellip; ",
            "title": "Assign Default Request Data in Model Schema on Swagger UI using Swagger 6.0.0-rc1-final"
        },
        {
            "tags": [
                "regex"
            ],
            "question_score": 116,
            "is_accepted": false,
            "answer_id": 37715586,
            "is_answered": false,
            "question_id": 12841970,
            "item_type": "answer",
            "score": 7,
            "last_activity_date": 1465436469,
            "creation_date": 1465436469,
            "body": "I have surprisingly come across ReDOS quite a few times performing source code reviews. One thing I would recommend is to use a timeout with whatever Regular Expression engine that you are using. \n\nFor example, in C# I can create the regular expression with a  attribute.\n\n\n\nThis regex is vulnerable to denial of service and without the timeout will spin and eat resources. With the timeout, it will throw a  after the given timeout and will not cause the resource usage leading to a Denial of Service condition.\n\nYou will want to experiment with the timeout value to make sure it works for your usage.\n",
            "excerpt": "I have surprisingly come across <span class=\"highlight\">ReDOS</span> quite a few times performing source code reviews. One thing I would recommend is to use a timeout with whatever Regular Expression engine that you are using. &hellip; );\n} \ncatch (RegexMatchTimeoutException ex)\n{\n    System.Console.WriteLine(&quot;<span class=\"highlight\">RegEx</span> match timeout&quot;);\n}\n\n\nThis <span class=\"highlight\">regex</span> is vulnerable to denial of service <span class=\"highlight\">and</span> without the timeout will spin <span class=\"highlight\">and</span> eat resources. &hellip; ",
            "title": "How can I recognize an evil regex?"
        },
        {
            "tags": [
                "php",
                "regex",
                "security",
                "preg-match",
                "denial-of-service"
            ],
            "question_score": 2,
            "is_accepted": true,
            "answer_id": 37403809,
            "is_answered": false,
            "question_id": 37378330,
            "item_type": "answer",
            "score": 6,
            "last_activity_date": 1464088445,
            "creation_date": 1464059876,
            "body": "There is no way to trigger ReDOS on , , ,  , since there is nothing that can cause match failure and trigger backtracking after the problematic part of the regex.\n\nIf you modify the regex a bit, for example, adding  after each of the regex above, then you can trigger catastrophic backtracking with an input like .......\n\nDepending on the engine&#39;s implementation and optimization, there are cases where we expect catastrophic backtracking, but the engine doesn&#39;t exhibit any sign of such behavior.\n\nFor example, given  and the input ..., PCRE fails the match outright, since it has an optimization that checks for required character in the input string before starting the match proper.\n\nKnowing what the engine does, we can throw off its early detection with the input ... and get the engine to exhibit catastrophic backtracking.\n\nAs for , it is possible to trigger ReDOS, since it has a failing condition of less than  iterations. Given the input string ... (with  or more of character ), the regex keeps trying all permutations of &#39;s at the end of the string as it backtracks away from the end of the string. Therefore, the complexity of the regex is O(2x). Knowing that, we can tell that the effect is more visible when  is larger number, let&#39;s say 20. By the way, this is one rare case where a matching string has the worst case complexity.\n",
            "excerpt": "There is no way to trigger <span class=\"highlight\">ReDOS</span> on (a+)+, ([a-zA-Z]+)*, (a|aa)+, (a|a?)+ , since there is nothing that can cause match failure <span class=\"highlight\">and</span> trigger backtracking after the problematic part of the <span class=\"highlight\">regex</span>. &hellip; *a){x}, it is possible to trigger <span class=\"highlight\">ReDOS</span>, since it has a failing condition of less than x iterations. &hellip; ",
            "title": "How to trigger Regex Denial-of-Service in PHP?"
        },
        {
            "tags": [
                "java",
                "sonarqube",
                "sonarqube5.1"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 0,
            "is_answered": false,
            "question_id": 37191090,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1463736270,
            "creation_date": 1463066168,
            "body": "I recently activated following rules in Sonarqube (5.1.1):\n\n\nsquid:CallToDeprecatedMethod (&quot;@Deprecated&quot; code should not be used)\nsquid:S2737 (&quot;catch&quot; clauses should do more than rethrow)\nsquid:S3398 (&quot;private&quot; methods called only by inner classes should be moved to those classes)\nsquid:LeftCurlyBraceEndLineCheck (An open curly brace should be located at the end of a line)\nsquid:S2445 (Blocks synchronized on fields should not contain assignments of new objects to those fields)\npmd:BooleanGetMethodName (Boolean Get Method Name)\nsquid:S1940 (Boolean checks should not be inverted)\npmd:CallSuperInConstructor (Call Super In Constructor)\nsquid:S2147 (Catches should be combined)\nfindbugs:NM_LCASE_TOSTRING (Class defines tostring(); should it be toString()?)\nsquid:RightCurlyBraceDifferentLineAsNextBlockCheck (Close curly brace and the next &quot;else&quot;, &quot;catch&quot; and &quot;finally&quot; keywords should be on two different lines)\nsquid:S1451 (Copyright and license headers should be defined)\nfb-contrib:AOM_ABSTRACT_OVERRIDDEN_METHOD (Correctness - Abstract method overrides a concrete implementation)\nfb-contrib:SPP_STUTTERED_ASSIGNMENT (Correctness - Method assigns a value to a local twice in a row)\nfb-contrib:SPP_TOSTRING_ON_STRING (Correctness - Method calls toString() on a String)\nfb-contrib:CCNE_COMPARE_CLASS_EQUALS_NAME (Correctness - Method compares class name instead of comparing class)\nfb-contrib:SLS_SUSPICIOUS_LOOP_SEARCH (Correctness - Method continues with a loop without break after finding an setting a variable)\nfb-contrib:LSYC_LOCAL_SYNCHRONIZED_COLLECTION (Correctness - Method creates local variable-based synchronized collection)\nfb-contrib:OC_OVERZEALOUS_CASTING (Correctness - Method manually casts the right hand side of an assignment more specifically than needed)\nfb-contrib:LO_INCORRECT_NUMBER_OF_ANCHOR_PARAMETERS (Correctness - Method passes an incorrect number of parameters to an SLF4J logging statement)\nfb-contrib:SPP_USE_MATH_CONSTANT (Correctness - Method uses non standard math constant)\nfindbugs:RV_01_TO_INT (Correctness - Random value from 0 to 1 is coerced to the integer 0)\nfindbugs:EQ_ALWAYS_FALSE (Correctness - equals method always returns false)\nfindbugs:EQ_ALWAYS_TRUE (Correctness - equals method always returns true)\nfindbugs:SKIPPED_CLASS_TOO_BIG (Dodgy - Class too big for analysis)\nFIXTEST (template squid:S124: Comments matching a regular expression should be handled )\ncommon-java:FailedUnitTests (Failed unit tests should be fixed)\npmd:GodClass (God Class)\nfindbugs:IIO_INEFFICIENT_INDEX_OF (Inefficient use of String.indexOf(String))\nfindbugs:IIO_INEFFICIENT_LAST_INDEX_OF (Inefficient use of String.lastIndexOf(String))\npmd-unit-tests:JUnitTestContainsTooManyAsserts (JUnit Test Contains Too Many Asserts)\npmd-unit-tests:JUnitUseExpected (JUnit Use Expected)\npmd-unit-tests:JUnitSpelling (JUnit spelling)\npmd-unit-tests:JUnitStaticSuite (JUnit static suite)\npmd-unit-tests:JUnitTestsShouldIncludeAssert (JUnit tests should include an assert)\npmd-unit-tests:JUnit4SuitesShouldUseSuiteAnnotation (JUnit4 Suites Should Use Suite Annotation)\npmd-unit-tests:JUnit4TestShouldUseAfterAnnotation (JUnit4 Test Should Use After Annotation)\npmd-unit-tests:JUnit4TestShouldUseBeforeAnnotation (JUnit4 Test Should Use Before Annotation)\npmd-unit-tests:JUnit4TestShouldUseTestAnnotation (JUnit4 Test Should Use Test Annotation)\nsquid:S2701 (Literal boolean values should not be used in assertions)\npmd:LocalVariableCouldBeFinal (Local variable could be final)\nsquid:S1845 (Methods and field names should not be the same or differ only by capitalization)\nsquid:S1659 (Multiple variables should not be declared on the same line)\nfindbugs:IS2_INCONSISTENT_SYNC (Multithreaded correctness - Inconsistent synchronization)\nfb-contrib:UEC_USE_ENUM_COLLECTIONS (Performance - Class uses an ordinary set or map with an enum class as the key)\nfindbugs:HSC_HUGE_SHARED_STRING_CONSTANT (Performance - Huge string constants is duplicated across multiple class files)\nfindbugs:DM_BOOLEAN_CTOR (Performance - Method invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead)\nfindbugs:DM_FP_NUMBER_CTOR (Performance - Method invokes inefficient floating-point Number constructor; use static valueOf instead)\nfindbugs:DM_STRING_VOID_CTOR (Performance - Method invokes inefficient new String() constructor)\nfindbugs:DM_STRING_CTOR (Performance - Method invokes inefficient new String(String) constructor\nfb-contrib:NAB_NEEDLESS_BOOLEAN_CONSTANT_CONVERSION (Performance - Method needlessly boxes a boolean constant)\nfb-contrib:BSB_BLOATED_SYNCHRONIZED_BLOCK (Performance - Method overly synchronizes a block of code)\nfb-contrib:LO_APPENDED_STRING_IN_FORMAT_STRING (Performance - Method passes a concatenated string to Slf4j&#39;s format string)\nfb-contrib:UCPM_USE_CHARACTER_PARAMETERIZED_METHOD (Performance - Method passes constant String of length 1 to character overridden method)\nfb-contrib:SG_SLUGGISH_GUI (Performance - Method performs time consuming operation in GUI thread)\nfb-contrib:DSOC_DUBIOUS_SET_OF_COLLECTIONS (Performance - Method uses a set of collections)\nfb-contrib:SPP_USELESS_TERNARY (Performance - Method uses a ternary operator to cast a boolean to true or false)\nfb-contrib:SPP_USE_GET0 (Performance - Method uses iterator().next() on a List to get the first item)\nfb-contrib:DDC_DOUBLE_DATE_COMPARISON (Performance - Method uses two date comparisons when one would do)\nfindbugs:DM_NEXTINT_VIA_NEXTDOUBLE (Performance - Use the nextInt method of Random rather than nextDouble to generate a random integer)\npmd:RedundantFieldInitializer (Redundant Field Initializer)\nsquid:S2333 (Redundant modifiers should not be used)\nfindsecbugs:REDOS (Security - Regex DOS (ReDOS))\nsquid:S1697 (Short-circuit logic should be used to prevent null pointer dereferences in conditionals)\npmd:SimplifyStartsWith (Simplify Starts With)\npmd-unit-tests:SimplifyBooleanAssertion (Simplify boolean assertion)\nfb-contrib:SPP_SERIALVER_SHOULD_BE_PRIVATE (Style - Class defines a serialVersionUID as non private)\nfb-contrib:NOS_NON_OWNED_SYNCHRONIZATION (Style - Class uses non owned variables to synchronize on)\nfb-contrib:COM_COPIED_OVERRIDDEN_METHOD (Style - Method is implemented with an exact copy of its superclass&#39;s method)\nfb-contrib:SPP_EMPTY_CASING (Style - Method passes an empty string to equalsIgnoreCase or compareToIgnoreCase)\nfb-contrib:CFS_CONFUSING_FUNCTION_SEMANTICS (Style - Method returns modified parameter)\nfb-contrib:STB_STACKED_TRY_BLOCKS (Style - Method stacks similar try/catch blocks)\nfb-contrib:USBR_UNNECESSARY_STORE_BEFORE_RETURN (Style - Method stores return result in local before immediately returning it)\nfb-contrib:LO_STUTTERED_MESSAGE (Style - Method stutters exception message in logger)\nfb-contrib:MRC_METHOD_RETURNS_CONSTANT (Style - Private method only returns one constant value)\nfb-contrib:UP_UNUSED_PARAMETER (Style - Static or private method has unused parameters)\nsquid:S2699 (Tests should include assertions)\npmd:UnnecessaryFinalModifier (Unnecessary Final Modifier)\npmd:UnnecessaryFullyQualifiedName (Unnecessary Fully Qualified Name)\npmd-unit-tests:UnnecessaryBooleanAssertion (Unnecessary boolean assertion)\npmd:UseArraysAsList (Use Arrays As List)\npmd:UseConcurrentHashMap (Use ConcurrentHashMap)\npmd:UseIndexOfChar (Use Index Of Char)\npmd:UseStringBufferForStringAppends (Use String Buffer For String Appends)\npmd:UseStringBufferLength (Use String Buffer Length)\npmd:UseVarargs (Use Varargs)\nsquid:S2208 (Wildcard imports should not be used)\n\n\nNow I get an ArrayOutOfBoundsException:\n\n\n\nAnybody got an idea how I find the rule causing the problem without manually try every rule on its own?\n\nEdit:\nI identified the rules causing my problem (I don&#39;t know why or if this is project-specific):\n\n\nfb-contrib:UCPM_USE_CHARACTER_PARAMETERIZED_METHOD (Performance - Method passes constant String of length 1 to character overridden method)\nfb-contrib:COM_COPIED_OVERRIDDEN_METHOD (Style - Method is implemented with an exact copy of its superclass&#39;s method)\n\n",
            "excerpt": "squid:RightCurlyBraceDifferentLineAsNextBlockCheck (Close curly brace <span class=\"highlight\">and</span> the next &quot;else&quot;, &quot;catch&quot; <span class=\"highlight\">and</span> &quot;finally&quot; keywords should be on two different lines)\nsquid:S1451 (Copyright <span class=\"highlight\">and</span> license headers should &hellip; DOS (<span class=\"highlight\">ReDOS</span>))\nsquid:S1697 (Short-circuit logic should be used to prevent null pointer dereferences in conditionals)\npmd:SimplifyStartsWith (Simplify Starts With)\npmd-unit-tests:SimplifyBooleanAssertion &hellip; ",
            "title": "How to find the rule throwing an ArrayOutOfBoundsException after activating a bunch of rules in Sonarqube?"
        },
        {
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "question_score": 3,
            "is_accepted": false,
            "answer_id": 37106566,
            "is_answered": false,
            "question_id": 37092918,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1462765455,
            "creation_date": 1462756418,
            "body": "Here is a FIDDLE\n\nI wish I could have made this a comment on @scaisEdge &#39;s answer because I just built off of it to add a little more helpful stuff but it is just too much to fit in a comment:\n\nHTML:\n\n\r\n\r\n\r\n\r\n\r\n\n\nI used his answer as a base, then did the following to illustrate more:\n\n\nI added &quot;\\d{4}$&quot; to the end of the regex pattern to force 4 numbers then nothing else\nI added a new text input that showed how to force explicitly specific characters for the alphebetic/dash portion\nI added titles with helpful pattern hints because those are shown in the popup when the pattern is rejected\nI put it all in a form with a submit button to show how it all works together\n\n\nWhat not to do\n\nI spent a lot of time &quot;rolling my own&quot; code to make a version of a text input that specifically limited all actions on it up front (on input change, keydown, keyup, mouse click) to only allow putting in the last 4 digits and nothing else.  It became a game of &quot;chase the corner cases&quot; and I quickly became convinced that using a plugin or library that is thoroughly vetted by the developer community is the way to go for such an endeavor, or using the pattern attribute as discussed above.\n\nNot only was it &quot;vertically oriented&quot; toward this specific pattern, I failed even after much time to iron out all the corner cases and it remained broken.\n\nI even gave an explanation of these difficulties and put up the code and my FIDDLE in this answer, but realized that putting up broken code is just not a good idea on StackOverflow so I made the appropriate edits just now to redo this explanation and get rid of the FIDDLE and code for the alternate route I tried.\n",
            "excerpt": "pattern=&quot;XXX-XX-\\d{4}$&quot; title=&quot;XXX-XX-DDDD - D is any digit, rest as is&quot; /&gt;\r\n&lt;/form&gt;\r\n\r\n\r\n\n\nI used his answer as a base, then did the following to illustrate more:\n\n\nI added &quot;\\d{4}$&quot; to the end of the <span class=\"highlight\">regex</span> &hellip; edits just now to <span class=\"highlight\">redo</span> this explanation <span class=\"highlight\">and</span> get rid of the FIDDLE <span class=\"highlight\">and</span> code for the alternate route I tried. &hellip; ",
            "title": "Allow numbers only after some alphabet?"
        },
        {
            "tags": [
                "linux",
                "unix",
                "binaryfiles",
                "hex-editors"
            ],
            "question_score": 68,
            "is_accepted": false,
            "answer_id": 32034366,
            "is_answered": false,
            "question_id": 839227,
            "item_type": "answer",
            "score": 7,
            "last_activity_date": 1458856797,
            "creation_date": 1439723255,
            "body": "I used to use bvi.\n\nI am developing hexvi to overcome  and &#39;s limitations.\n\nhexvi\n\nFeatures\n\n\nvim-like keybindings and commands\ngoing to specific offsets\ninserting, replacing, deleting\nsearching for stuff (PCRE regexes)\neverything is a command, and can be mapped in \ncolor schemes\nsupport for large files\nsupport for multiple files (via tabs)\nPython so the entry level to hack around should be lower than C&#39;s\nCLI through and through\n\n\nCons\n\n\nas of March 2016, it&#39;s alpha so features are missing, but I&#39;m working on those:\n\n\nfile saving\nundo/redo\ncommand history\nvisual selection\nman page\n\nno autocomplete\n\n\nbvi\n\nFeatures\n\n\nvim-like keybindings and commands\ngoing to specific offsets\ninserting, deleting, replacing\nsearching for stuff (text and hex)\nundo/redo\nCLI through and through\n\n\nCons\n\n\nregarding its vim capabilities - unfortunately, it understands only the most\nbasic things and definitely needs more love in this regard (example: doesn&#39;t\nunderstand , but understands  and )\nno visual selection support whatsoever\nno tab/split screen support\ncrashes often\nno support for large files\nno command history\nno autocomplete\n\n",
            "excerpt": "features are missing, but I&#39;m working on those:\n\n\nfile saving\nundo/<span class=\"highlight\">redo</span>\ncommand history\nvisual selection\nman page\n\nno autocomplete\n\n\nbvi\n\nFeatures\n\n\nvim-like keybindings <span class=\"highlight\">and</span> commands\ngoing to specific &hellip; offsets\ninserting, deleting, replacing\nsearching for stuff (text <span class=\"highlight\">and</span> hex)\nundo/<span class=\"highlight\">redo</span>\nCLI through <span class=\"highlight\">and</span> through\n\n\nCons\n\n\nregarding its vim capabilities - unfortunately, it understands only the most\nbasic &hellip; ",
            "title": "How to edit a binary file on Unix systems"
        },
        {
            "tags": [
                "javascript",
                "regex"
            ],
            "question_score": 1,
            "is_accepted": false,
            "answer_id": 36209658,
            "is_answered": false,
            "question_id": 36209589,
            "item_type": "answer",
            "score": 2,
            "last_activity_date": 1458853906,
            "creation_date": 1458852108,
            "body": "Since  is not supported in JS the only way I can think of is using a group like this.\n\nRegex:  and capture group using  or .\n\nRegex101 Demo\n\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n\n\nAn alternate way using  would be something like this. \n\nBut it takes long in JS. Killed my page thrice. Would make a good ReDoS exploit\n\nRegex:  and capture groups using  or .\n\nRegex101 Demo\n",
            "excerpt": "<span class=\"highlight\">Regex</span>: _([^_]+) <span class=\"highlight\">and</span> capture group using \\1 or $1. &hellip; Would make a good <span class=\"highlight\">ReDoS</span> exploit\n\n<span class=\"highlight\">Regex</span>: (?=_([A-Za-z0-9]+)) <span class=\"highlight\">and</span> capture groups using \\1 or $1.\n\nRegex101 Demo &hellip; ",
            "title": "Getting each &#39;word&#39; after every underscore in a string in Javascript using regex"
        },
        {
            "tags": [
                "regex",
                "algorithm",
                "denial-of-service"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 1,
            "is_answered": true,
            "question_id": 36208257,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1458847703,
            "creation_date": 1458846812,
            "body": "This article describes two ways to detect if a regex is vulnerable to catastrophic backtracking (and thus ReDOS, or regex denial of service, attacks):\n\n\nFuzzing - essentially a brute-force to see if there are inputs that lag\nAnalysis - looks at regexes intelligently, and is able to pinpoint where the slowdown occurs in the regex.\n\n\nAn analysis tool was built for as part of the research, but I&#39;m not sure if it was actually released as an open-source tool (as it said it might be).\n\nSo my question is: based on the linked article, how would I analyze a regex for vulnerabilities? I&#39;m not looking for Fuzzing, as it is more time consuming and fails to identify the location of the problem.\n\nI&#39;m aware that another question asked about ways, in general, (and the answers were all either Fuzzing or &quot;it&#39;s too hard&quot;) to find &quot;bad regexes&quot;.\n",
            "excerpt": "This article describes two ways to detect if a <span class=\"highlight\">regex</span> is vulnerable to catastrophic backtracking (<span class=\"highlight\">and</span> thus <span class=\"highlight\">ReDOS</span>, or <span class=\"highlight\">regex</span> denial of service, attacks):\n\n\nFuzzing - essentially a brute-force to see if there &hellip; are inputs that lag\nAnalysis - looks at regexes intelligently, <span class=\"highlight\">and</span> is able to pinpoint where the slowdown occurs in the <span class=\"highlight\">regex</span>. &hellip; ",
            "title": "How to ANALYZE regexes for possible vulnerabilities?"
        },
        {
            "tags": [
                "c++",
                "mongodb",
                "push-notification"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 1,
            "is_answered": false,
            "question_id": 22014692,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1455297894,
            "creation_date": 1393332480,
            "body": "Problem\n\nI am building a subscription based software system, which provides notification feed based on provided query when results of the query change because of documents changed by add/remove/update. For example,\n\n\nsubscribe\n\n\n\nwhere callback is defined as:\n\n\nif someone calls , the callback will be called, so that the subscribing clients are notified of changes.\n\n\nThis needs to be done as fast as possible, so something like scanning redo log will not work for me.\n\nPossibilities\n\na) A naive way would be remember results of all queries, after each add/remove/update, run all queries again, and then send diffs as notification. \n\nb) A bit smarter way would be take the changing document(before any db operation), check whether it &#39;matches&#39; any query. If so, send notification. However, sounds like this kind of &#39;match&#39; is not supported.\n\nc) Take query is in regex format, serialize the changing document to json format, and run regex match.\n\nI am using C++, although the problem sounds language neutral.\n\nAny inputs are welcome.\n",
            "excerpt": "This needs to be done as fast as possible, so something like scanning <span class=\"highlight\">redo</span> log will not work for me. &hellip; c) Take query is in <span class=\"highlight\">regex</span> format, serialize the changing document to json format, <span class=\"highlight\">and</span> run <span class=\"highlight\">regex</span> match.\n\nI am using C++, although the problem sounds language neutral.\n\nAny inputs are welcome. &hellip; ",
            "title": "MongoDb: How to build realtime subscription based notification system"
        },
        {
            "tags": [
                "vb.net",
                "string",
                "split"
            ],
            "question_score": -1,
            "is_accepted": false,
            "answer_id": 35233252,
            "is_answered": false,
            "question_id": 35232630,
            "item_type": "answer",
            "score": -2,
            "last_activity_date": 1454717087,
            "creation_date": 1454705424,
            "body": "In light of your recent edit I am going to redo this answer.\n\nSince it looks like everything is coming in on one line of text here is how I would handle it.\n\n\n\nThis will break up the long line of text into managable chunks and then it uses regex to add it to a list of URL&#39;s (URLList)\n\nFrom there you can do just about anything with a list(of String). \n\nThere is another way of doing it without splitting on the ,&#39;s \n\nif you use this Regex\n\n\n\nAdding the &quot;?&quot; in there turns it into a greedy statement meaning that it will stop at the first occurance. \n\nAfter that you could create a URLList like this\n\n\n\nIt&#39;s really personal preference\n",
            "excerpt": "In light of your recent edit I am going to <span class=\"highlight\">redo</span> this answer.\n\nSince it looks like everything is coming in on one line of text here is how I would handle it. &hellip; in CommaSplit\n     If str.contains(&quot;thumbnail_src&quot;) Then  \n          URLList.Add(RG.Match(str).value)  \n     End If\nNext\n\n\nThis will break up the long line of text into managable chunks <span class=\"highlight\">and</span> then it uses &hellip; ",
            "title": "How to extract URLs from HTML source in vb.net"
        },
        {
            "tags": [
                "php",
                "arrays",
                "regex"
            ],
            "question_score": -2,
            "is_accepted": true,
            "answer_id": 34010406,
            "is_answered": false,
            "question_id": 34009458,
            "item_type": "answer",
            "score": 2,
            "last_activity_date": 1448954150,
            "creation_date": 1448928636,
            "body": "Please escape your regex input! \n\n\n\nDon&#39;t blindly add user input to your regex, much for the same reason you need to escape user input in SQL queries. In regex, the biggest issue is usually the ReDoS problem, where a malicious user can create a specially crafted regex that will use hours, or more, to execute, stealing all the CPU from your server.\n",
            "excerpt": "Please escape your <span class=\"highlight\">regex</span> input! \n\n$needle2 = &quot;/&quot;.preg_quote($needle,&#39;/&#39;).&quot;/&quot;; // \n\n\nDon&#39;t blindly add user input to your <span class=\"highlight\">regex</span>, much for the same reason you need to escape user input in SQL queries. &hellip; In <span class=\"highlight\">regex</span>, the biggest issue is usually the <span class=\"highlight\">ReDoS</span> problem, where a malicious user can create a specially crafted <span class=\"highlight\">regex</span> that will use hours, or more, to execute, stealing all the CPU from your server. &hellip; ",
            "title": "Php preg_match doesnt work with variable"
        },
        {
            "tags": [
                "google-chrome",
                "google-chrome-extension",
                "google-chrome-app"
            ],
            "question_score": 4,
            "is_accepted": false,
            "answer_id": 33967015,
            "is_answered": false,
            "question_id": 33954876,
            "item_type": "answer",
            "score": 0,
            "last_activity_date": 1448677334,
            "creation_date": 1448677334,
            "body": "OAuth providers will return some sort of reusable access token, which can be re-used on subsequent logins.  Usually these are very long-lived.  For example, dropbox returns an access token in the responseUrl (in the callback from the web flow), matching a regex pattern .  \n\nYou can store this token in local storage and access it on subsequent attempts without going through the auth flow again.  \n\nThe auth tokens don&#39;t always live forever (or they could be manually deauthorized), so you have to watch out for 401 response code, and do the web auth flow again if that occurs.\n\nLogic ends up quite complex, something like:\n\n\nGet stored token\nIf no stored token, then launch web flow and save auth token in local storage\nTry some operation using the stored token\nif 401, then redo auth flow and retry operation\n\n",
            "excerpt": "Logic ends up quite complex, something like:\n\n\nGet stored token\nIf no stored token, then launch web flow <span class=\"highlight\">and</span> save auth token in local storage\nTry some operation using the stored token\nif 401, then <span class=\"highlight\">redo</span> &hellip; auth flow <span class=\"highlight\">and</span> retry operation &hellip; ",
            "title": "Different ways to fetch OAuth token from an extension?"
        },
        {
            "tags": [
                "php",
                "html",
                "regex"
            ],
            "question_score": 0,
            "is_accepted": false,
            "answer_id": 33556082,
            "is_answered": false,
            "question_id": 33551961,
            "item_type": "answer",
            "score": 0,
            "last_activity_date": 1446762875,
            "creation_date": 1446762875,
            "body": "Not an answer to your question. Just a general observation.\nYou could factor out some of the regex parts, and use Named capture groups\nThis way you won&#39;t have to redo the code body when you change/modify the\nregex.  \n\n\n\nOr, if you&#39;re so inclined, format the regex and use the ignore whitespace flag .  \n\nDoing it this way lets you see the variable name in the expression.\nCan avoid confusion in the future. A good tool for doing this is here. \n\n\n",
            "excerpt": "You could factor out some of the <span class=\"highlight\">regex</span> parts, <span class=\"highlight\">and</span> use Named capture groups\nThis way you won&#39;t have to <span class=\"highlight\">redo</span> the code body when you change/modify the\n<span class=\"highlight\">regex</span>.  \n\n$prot   = &#39;(?&lt;Protocol&gt;https?://)?&#39; &hellip; .|$))}&quot;, $text, $match, PREG_OFFSET_CAPTURE, $position))\n{\n\n}\n\n\nOr, if you&#39;re so inclined, format the <span class=\"highlight\">regex</span> <span class=\"highlight\">and</span> use the ignore whitespace flag //x. &hellip; ",
            "title": "Remove multiple trailing hyphens PHP Regex (not covered by &quot;.&quot; character???)"
        },
        {
            "tags": [
                "regex",
                "pcre",
                "backtracking"
            ],
            "question_score": 12,
            "is_accepted": false,
            "answer_id": 26094254,
            "is_answered": false,
            "question_id": 26093501,
            "item_type": "answer",
            "score": 11,
            "last_activity_date": 1437362718,
            "creation_date": 1411974450,
            "body": "So what&#39;s backtracking?\nThe engine comes to quantifiers that are greedy by default. Greedy modifiers matches all possible and backtracks by demand, allowing efficient matches,\n\nas referenced by Greedy vs. Reluctant vs. Possessive Quantifiers:\n\nA greedy quantifier first matches as much as possible. So the  matches the entire string. Then the matcher tries to match the  following, but there are no characters left. So it &quot;backtracks&quot;, making the greedy quantifier match one less thing (leaving the &quot;o&quot; at the end of the string unmatched). That still doesn&#39;t match the  in the regex, so it &quot;backtracks&quot; one more step, making the greedy quantifier match one less thing again (leaving the &quot;oo&quot; at the end of the string unmatched). That still doesn&#39;t match the  in the regex, so it backtracks one more step (leaving the &quot;foo&quot; at the end of the string unmatched). Now, the matcher finally matches the  in the regex, and the  and the next  are matched too. Success! [...]\n\n\nWhat does this have to do with ?\nIn :\n\n The literal character &quot;a&quot;.\n&#160; &#160;  Zero or more, possessive.\n The literal character &quot;b&quot;.\n\n\nAs referenced by Greedy vs. Reluctant vs. Possessive Quantifiers:\n\nA possessive quantifier is just like the greedy quantifier, but it doesn&#39;t backtrack. So it starts out with  matching the entire string, leaving nothing unmatched. Then there is nothing left for it to match with the  in the regex. Since the possessive quantifier doesn&#39;t backtrack, the match fails there.\n\n\nWhy does it matter?\nThe machine won&#39;t realize if it&#39;s doing an (in)efficient match on its own. See here for a decent example: Program run forever when matching regex. In many scenarios, regexes written quickly may not be efficient and may well easily be problematic in deployment.\nSo what&#39;s an atomic group?\nAfter the pattern within the atomic group finishes matching, it will not let go, ever. Study this example:\n\nLooks perfectly legitimate, but this match fails. The steps are simple: The first alternation of the atomic group matches perfectly -  consumes . The group then completes its match - now here is our pointer location:\n\nThe pattern advances. Now we try to match , but there is no . Instead of trying to backtrack (releasing  and consuming ), the match fails.\nWell that&#39;s a bad idea then! Why would we prevent backtracking, Unihedron?\nNow imagine we&#39;re manipulating with a JSON object. This file is not small. Backtracking from the end is going to be a bad idea.\n\nUh oh...\nDo you get what I mean now? :P\nI&#39;ll leave you to figure out the rest, and try to find out more about possessive quantifiers and atomic groups; I&#39;m not writing anything else into this post. Here is where the JSON came from, I saw the answer a few days ago, very inspiring: REGEX reformatting.\nRead also\n\nThe Stack Overflow Regex Reference\nReDoS - Wikipedia\n\n",
            "excerpt": "Now, the matcher finally matches the f in the <span class=\"highlight\">regex</span>, <span class=\"highlight\">and</span> the o <span class=\"highlight\">and</span> the next o are matched too. Success! [...]\n\n\nWhat does this have to do with a*+b? &hellip; Here is where the JSON came from, I saw the answer a few days ago, very inspiring: <span class=\"highlight\">REGEX</span> reformatting.\nRead also\n\nThe Stack Overflow <span class=\"highlight\">Regex</span> Reference\n<span class=\"highlight\">ReDoS</span> - Wikipedia &hellip; ",
            "title": "Atomic groups clarity"
        },
        {
            "tags": [
                "ios",
                "objective-c"
            ],
            "question_score": -2,
            "is_accepted": true,
            "answer_id": 31069868,
            "is_answered": false,
            "question_id": 31069181,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1435311674,
            "creation_date": 1435311674,
            "body": "You really should to use a WebService. Google Maps provides API.\n\nYour issue is that you&#39;re downloading the web page. You said it was working two days ago? Well, they may have change their page since then. \nFor example, there is nowhere the string &quot;&quot; in the document. That why your regex fails. If tomorrow they change the source code of their page (as it may have happened since two days ago), you&#39;re good to redo it, whereas an API should not change (or at least keeps it working for a few moments, years, etc. the deprecated version).\n",
            "excerpt": "That why your <span class=\"highlight\">regex</span> fails. &hellip; If tomorrow they change the source code of their page (as it may have happened since two days ago), you&#39;re good to <span class=\"highlight\">redo</span> it, whereas an API should not change (or at least keeps it working for a few moments &hellip; ",
            "title": "objective c and iphone map route issue"
        },
        {
            "tags": [
                "regex",
                "numbers",
                "delimiter",
                "substitution"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 1,
            "is_answered": true,
            "question_id": 30799560,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1434102122,
            "creation_date": 1434100831,
            "body": "I&#39;m trying to construct a regex to validate and capture numbers that can have either a comma or a dot as delimiter. After validation i want to output the formatted number using substitution.\n\nThis is my input and desired output (or at least enough to show my case):\n\n\n\nwith a maximum of 2 digits on both sides of the delimiter.. \n\nI use the following regex for validation:  \n\n\n\nthe substitution regex below obviously doesn&#39;t work since numbers with no decimals would be wrong.. \n\n\n\ncan it be done with only 1 test &amp; 1 substitution regex ? i guess the whole thing needs a redo.. but how ? :)\n",
            "excerpt": "I&#39;m trying to construct a <span class=\"highlight\">regex</span> to validate <span class=\"highlight\">and</span> capture numbers that can have either a comma or a dot as delimiter. After validation i want to output the formatted number using substitution. &hellip; ${number},${decimals}\n\n\ncan it be done with only 1 test &amp; 1 substitution <span class=\"highlight\">regex</span> ? i guess the whole thing needs a <span class=\"highlight\">redo</span>.. but how ? :) &hellip; ",
            "title": "Regexes for validating &amp; formatting numbers with different decimal delimiters"
        },
        {
            "tags": [
                "mongodb"
            ],
            "question_score": 27,
            "is_accepted": false,
            "answer_id": 27941205,
            "is_answered": false,
            "question_id": 9224841,
            "item_type": "answer",
            "score": -1,
            "last_activity_date": 1421233199,
            "creation_date": 1421232833,
            "body": "If it is a one time thing to do, its no big deal. Run a query like &quot;db.foo.find();&quot; in your mongo shel and paste the entire output to a editor like Textpad or Sublime text, do a column block ( In sublime text it is Ctrl + scroll wheel click &amp; Drag ) , , paste it which will extend to another field, rename the newly pasted column as you want it, once done, do a regex to just edit the whole bunch as &quot;^&quot; with &quot;db.foo.insert({&quot; and at the &quot;$&quot; as &quot;});&quot;\n\nIt is like the following steps.\n\n\n  \n  You pasted the output like\n  { &#39;field1&#39; : value, &#39;field2&#39; : value2 , &#39;field3&#39; : value4 };\n  \n  copy the last set and extend using the editor column block\n  { &#39;field1&#39; : value, &#39;field2&#39; : value2 , &#39;field3&#39; : value4 };\n  Now insert the appropriate words to make it look like a command for mongo\n  db.foo.insert({ &#39;field1&#39; : value, &#39;field2&#39; : value2 , &#39;field3&#39; : value4 });\n  Now copy them all and paste it in your mongo shell which will just do the whole thing for you as you want it. Test it once and redo the whole thing just after you cleanup the collection otherwise it will insert duplicates. Also remove the &quot;_id&quot; fields in the output since it will conflict when you attempt to insert again !! \n  \n  \n\n\nNow, every single line in your editor shows a valid mongo command that can be pasted to your shell to insert a new document to your collection. so test it once and it works fine, clean up your entire collection like &quot;db.foo.remove({});&quot; and paste the entire command from the editor which will do it in a giffy.\n\nIt may be difficult when you attempt for the first time, but if you get it right its gonna be a handy thing for you to work along whenever you want it.... !! \n",
            "excerpt": ", paste it which will extend to another field, rename the newly pasted column as you want it, once done, do a <span class=\"highlight\">regex</span> to just edit the whole bunch as &quot;^&quot; with &quot;db.foo.insert({&quot; <span class=\"highlight\">and</span> at the &quot;$&quot; as &quot;});&quot; &hellip; Test it once <span class=\"highlight\">and</span> <span class=\"highlight\">redo</span> the whole thing just after you cleanup the collection otherwise it will insert duplicates. &hellip; ",
            "title": "Add a new field to a collection with value of an existing field"
        },
        {
            "tags": [
                "javascript",
                "html",
                "regex"
            ],
            "question_score": 0,
            "is_accepted": false,
            "answer_id": 25631531,
            "is_answered": false,
            "question_id": 25631111,
            "item_type": "answer",
            "score": 0,
            "last_activity_date": 1409688927,
            "creation_date": 1409688516,
            "body": "I don&#39;t think this is a good job for regex. You&#39;re probably better off using a  buffer to read 2 lines at a time, and if the first one has only a tag (which you can use a regex to detect I guess), you just read the next line (discarding the line with the tag) and redo. If you don&#39;t detect a tag in the first line, append  to the second line and replace the line.\n\nHere&#39;s a quick-n-dirty regex to parse tags (_note that this is just for demonstration, it will not handle malformed tags and probably will break easily_):\n\n\n\nand here&#39;s somewhere to play with it.\n\nFor the buffer you can use an  with  and  to get rid of the old line and read in the next line respectively. Check the first element in the array with the regex, if it passes, change the second element and replace the string in the file with your new one.\n\nHere&#39;s what it should look like:\n\n\n\n is my input to the javascript console and  is what it returns.\n",
            "excerpt": "I don&#39;t think this is a good job for <span class=\"highlight\">regex</span>. &hellip; line with the tag) <span class=\"highlight\">and</span> <span class=\"highlight\">redo</span>. &hellip; ",
            "title": "RegExp for replacing line breaks with br, on lines that doesnt contain only a tag"
        },
        {
            "tags": [
                "java",
                "regex"
            ],
            "question_score": 2,
            "is_accepted": true,
            "answer_id": 25480175,
            "is_answered": false,
            "question_id": 25235854,
            "item_type": "answer",
            "score": 8,
            "last_activity_date": 1408949004,
            "creation_date": 1408948368,
            "body": "Your program has likely encountered what&#39;s called catastrophic backtracking.\nIf you have a bit of time, let&#39;s look at how your regex works...\nQuick refresher: How regex works: The state machine always reads from left to right, backtracking where necessary.\nOn the left hand side, we have our pattern:\n\nAnd here&#39;s the String to match:\n\nFrom the regex101 debugger, your regex took 78540 steps to fail. This is because you used quantifiers that are greedy and not possessive (backtracking).\n\n... Long story short, because the input string fails to match, every quantifier within your regex causes indefinite backtracking - Every character is released from  and then  and then both and then a group is released from  to backtrack more.\nHere&#39;s a few solutions you should follow:\nAvoid abundant quantifiers!\nIf you revise your expression, you&#39;ll see that the pattern is logically same as:\n\nThis uses a step of logical induction to reduce the regex upstairs to match far quicker, now at 97 steps!\n\nUse possessive quantifiers while you can!\nAs I mentioned,  is evil because it backtracks in a terrible manner. We&#39;re in Java, what can we do?\nThis solution works only because  and  matches distinct items. We can use a possessive group!\n\nThese simple &quot;&quot; denotes &quot;We&#39;re not backtracking if we fail the match from here&quot;. This is an extremely effective solution, and cuts off any need for backtracking. Whenever you have two distinct groups with a quantifier in between, use them. And if you need some proof on the effectiveness, here&#39;s our scorecard:\n\nRead also:\n\nThe Stack Overflow Regex Reference\nReDoS - Wikipedia\n\nOnline Demos:\n\nRegEx demo 1\nRegEx demo 2\n\n",
            "excerpt": "Long story short, because the input string fails to match, every quantifier within your <span class=\"highlight\">regex</span> causes indefinite backtracking - Every character is released from + <span class=\"highlight\">and</span> then * <span class=\"highlight\">and</span> then both <span class=\"highlight\">and</span> then a group &hellip; <span class=\"highlight\">And</span> if you need some proof on the effectiveness, here&#39;s our scorecard:\n\nRead also:\n\nThe Stack Overflow <span class=\"highlight\">Regex</span> Reference\n<span class=\"highlight\">ReDoS</span> - Wikipedia\n\nOnline Demos:\n\n<span class=\"highlight\">RegEx</span> demo 1\n<span class=\"highlight\">RegEx</span> demo 2 &hellip; ",
            "title": "Program run forever when matching regex"
        },
        {
            "tags": [
                "regex",
                "postgresql",
                "groovy",
                "full-text-search"
            ],
            "question_score": 2,
            "is_accepted": false,
            "answer_id": 25269866,
            "is_answered": false,
            "question_id": 25269811,
            "item_type": "answer",
            "score": 0,
            "last_activity_date": 1407955037,
            "creation_date": 1407862391,
            "body": "In a naive implementation, no, it is not safe. There is an attack that people can perform on a regular expression called a ReDoS. You can also read more about it on OWASP. It is a denial of service done by consuming computational resources, which could prevent other requests being responded to.\n\nA ReDoS can be prevented if you cap your regex execution time using , which can be set with . Replace  with a timeout that is more relevant to your environment.\n\nYou could also consider using the  operator to select based on a keyword. Searching based on a keyword is typically more user-friendly than a regular expression, and you don&#39;t have to worry about setting a timeout.\n",
            "excerpt": "A <span class=\"highlight\">ReDoS</span> can be prevented if you cap your <span class=\"highlight\">regex</span> execution time using statement_timeout, which can be set with set statement_timeout to 10000. &hellip; Searching based on a keyword is typically more user-friendly than a regular expression, <span class=\"highlight\">and</span> you don&#39;t have to worry about setting a timeout. &hellip; ",
            "title": "Is it safe to let users enter custom regex patterns?"
        },
        {
            "tags": [
                "php",
                "phpseclib"
            ],
            "question_score": 0,
            "is_accepted": true,
            "answer_id": 24373462,
            "is_answered": false,
            "question_id": 24371104,
            "item_type": "answer",
            "score": 2,
            "last_activity_date": 1403550334,
            "creation_date": 1403550334,
            "body": "\n  The results it returns are including a bunch of stuff that shouldn&#39;t\n  be there:\n  \n  ?[Kuser@PA-3020&gt; request password-hash password test123\n  ?[?1h?=?[24;1H?[K $1$dgkhwrxe$kddYFmKCq9.zfiBKPAyN61\n  \n  ?[24;1H?[K?[?1l?&gt;user@PA-3020&gt;\n\n\nThose are ANSI escape codes. You can use File_ANSI to remove them. More info:\n\nhttp://phpseclib.sourceforge.net/ssh/examples.html#top\n\nAnyway, my guess would be that you need to redo your regex. eg.\n\n\n\nInstead of doing that do this:\n\n\n\nThe thing is...  ^ matches at the start of the line and $ matches at the end. Usually when you do $ssh-&gt;write(...) the command is echo&#39;d back to you and then there&#39;s a new line and then you get your output back. So that&#39;d prevent ^ from working. And as for the $ at the end.. well per your own example $1$ doesn&#39;t occur at the end of a line. So that&#39;s why your code isn&#39;t working.\n",
            "excerpt": "More info:\n\nhttp://phpseclib.sourceforge.net/ssh/examples.html#top\n\nAnyway, my guess would be that you need to <span class=\"highlight\">redo</span> your <span class=\"highlight\">regex</span>. eg. &hellip; ^ matches at the start of the line <span class=\"highlight\">and</span> $ matches at the end. Usually when you do $ssh-&gt;write(...) the command is echo&#39;d back to you <span class=\"highlight\">and</span> then there&#39;s a new line <span class=\"highlight\">and</span> then you get your output back. &hellip; ",
            "title": "Parsing SSH2 Results in PHP"
        },
        {
            "tags": [
                "bash",
                "colors",
                "grep"
            ],
            "question_score": 3,
            "is_accepted": false,
            "answer_id": 22171672,
            "is_answered": false,
            "question_id": 22167455,
            "item_type": "answer",
            "score": 2,
            "last_activity_date": 1393935583,
            "creation_date": 1393935223,
            "body": "You can achieve a  with color rotation using  and a single substitution using an experimental regex feature to wrap each occurrence in ANSI escape sequences. Here&#39;s something to serve as a starting point that you can wrap in a shell function:\n\n\n\nNot very pretty but at least brief.\n\nI&#39;m too lazy to redo the screenshot but you might want to skip the dark grey by doing  instead. If you only want two colors set the divisor to  (obviously).\n\n\n",
            "excerpt": "You can achieve a grep with color rotation using perl <span class=\"highlight\">and</span> a single substitution using an experimental <span class=\"highlight\">regex</span> feature to wrap each occurrence in ANSI escape sequences. &hellip; I&#39;m too lazy to <span class=\"highlight\">redo</span> the screenshot but you might want to skip the dark grey by doing $n = 31 + (++$m % 7) instead. If you only want two colors set the divisor to 2 (obviously). &hellip; ",
            "title": "Grep - Cycle through colors for each match"
        },
        {
            "tags": [
                "regex",
                "coldfusion"
            ],
            "question_score": 3,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 3,
            "is_answered": true,
            "question_id": 21411762,
            "item_type": "question",
            "score": 3,
            "last_activity_date": 1390933401,
            "creation_date": 1390927814,
            "body": "I am trying to take convert urls in a block of html to ensure they are lowercase.\nSome of the links are a mix of uppercase and lowercase and they need to be converted to just lowercase.\nIt would be impossible to run round the site and redo every link so was looking to use a Regex when outputting the text.\n\n\n\nNeeds to be converted to:\n\n\n\nUsing a ColdFusion Regex such as below (although this doesn&#39;t work): \n\n\n\nAny help much appreciated.\n",
            "excerpt": "Some of the links are a mix of uppercase <span class=\"highlight\">and</span> lowercase <span class=\"highlight\">and</span> they need to be converted to just lowercase. &hellip; It would be impossible to run round the site <span class=\"highlight\">and</span> <span class=\"highlight\">redo</span> every link so was looking to use a <span class=\"highlight\">Regex</span> when outputting the text.\n\n&lt;p&gt;Hello world &lt;a href=&quot;http://www.somelink.com/HOME&quot;&gt;Some link&lt;/a&gt;. &hellip; ",
            "title": "Coldfusion Regex to convert a URL to lowercase"
        },
        {
            "tags": [
                "regex"
            ],
            "question_score": 8,
            "is_accepted": false,
            "answer_id": 21401192,
            "is_answered": false,
            "question_id": 20492477,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1390901068,
            "creation_date": 1390900156,
            "body": "Short answer:  You can&#39;t do what you&#39;re asking.  Technically, the first part has an ugly answer, but the second part (as I understand it) has no answer.\n\n\n\nFor your first part, I have a pretty impractical (yet pure regex) answer; anything better would require code (like @rednaw&#39;s much cleaner answer above).  I added to the test to make it more comprehensive.   (For simplicity, I&#39;m using  for PCRE, case insensitive, printing one match per line.)\n\n\n\nI&#39;m basically making a special case for any letter in &quot;ben&quot; so I can include only iterations that are not themselves part of the string &quot;ben.&quot;  As I said, not really practical, even if I am technically answering your question.  I&#39;ve also saved a blow-by-blow explanation of this regex if you want further detail.\n\nIf you&#39;re forced into using a pure regex rather than code, your best bet for items like this is to write code to generate the regex.  That way you can keep a clean copy of it.\n\n\n\nI&#39;m not sure what you&#39;re asking for the remainder of your challenge; a regex is either greedy or lazy [1] [2], and I don&#39;t know of any implementations that can find &quot;every combination&quot; rather than merely the first combination by either method.  If there were such a thing, it would be very very slow in real life (rather than quick examples); the slow speed of regex engines would be intolerable if they were forced to examine every possibility, which would basically be a ReDoS.\n\nExamples:\n\n\n\nI assume you are looking for                  but I don&#39;t think you can get that with a pure regex.  You&#39;d need some code to generate every substring and then you could use a regex to filter out the forbidden pattern (again, this is all about greedy vs lazy vs ReDoS).\n",
            "excerpt": "which would basically be a <span class=\"highlight\">ReDoS</span>. &hellip; You&#39;d need some code to generate every substring <span class=\"highlight\">and</span> then you could use a <span class=\"highlight\">regex</span> to filter out the forbidden pattern (again, this is all about greedy vs lazy vs <span class=\"highlight\">ReDoS</span>). &hellip; ",
            "title": "Match anything that is a something?"
        },
        {
            "tags": [
                "vim",
                "sublimetext2",
                "vi"
            ],
            "question_score": 0,
            "is_accepted": false,
            "answer_id": 18835386,
            "is_answered": false,
            "question_id": 18834310,
            "item_type": "answer",
            "score": 7,
            "last_activity_date": 1379358325,
            "creation_date": 1379358325,
            "body": "This is opinionated question and I expect the question to be closed. However there are many facts about features editors have and do not have. Instead of focusing on what other editors do not have I will focus on what Vim does have. Here is a list of features that I find important.\n\nRelatively unique to Vim:\n\n\nModal editing\nBuilt-in help see \nTerminal UI\nExtensive OS support\nOpen source\nUndo-branches (:h undo-branches)\nPersistent undo\n for simple redo\nShares many common commands with ex and sed\nUses buffers (try opening up 100 files w/ tabs and see how that works out)\nBuilt-in file exploring and remote editing ()\nBuilt-in diff support\nWindow splitting and tab support (same buffer can be multiple places)\nRun commands over many buffers/windows/tabs: , , , and \nCommand line editing ()\n\n\nFeatures that many other editors share:\n\n\nAdvanced repeat with macros\nPlugins and scripting\nQuickfix list - keeps older lists (:h )\nLocation list - quick fix for a specific window\nVisual Block mode - many other editors have this however  is still pretty special ()\nBuilt-in grepping ()\nZero width regex atoms e.g. \nMany completion modes: word, line, tag, spelling, syntax, and omni. Plus you can create your own.\nEasy to create alternate key mappings\nRegisters - your clipboard\nJumps/marks: see , , , \nCustomization fold with foldtext\n\n",
            "excerpt": "Relatively unique to Vim:\n\n\nModal editing\nBuilt-in help see :h\nTerminal UI\nExtensive OS support\nOpen source\nUndo-branches (:h undo-branches)\nPersistent undo\n. for simple <span class=\"highlight\">redo</span>\nShares many common commands &hellip; pretty special (:h v_$)\nBuilt-in grepping (:h :vimgrep)\nZero width <span class=\"highlight\">regex</span> atoms e.g. &hellip; ",
            "title": "Unique features of Vim over more &quot;modern&quot; text editors like Sublime?"
        },
        {
            "tags": [
                "c#"
            ],
            "question_score": 0,
            "is_accepted": false,
            "answer_id": 18275916,
            "is_answered": false,
            "question_id": 18275893,
            "item_type": "answer",
            "score": 10,
            "last_activity_date": 1376664653,
            "creation_date": 1376663982,
            "body": "You know that in  the  means ? Try escaping it! \n\nYour regular expression was equivalent to  (empty string). \n\nThis because you must see it as\n\n\n\nalways matched from left to right, stop at the first positive match. As we will see, just the first condition (match of empty string) is positive everywhere, so it won&#39;t ever go to the other matches.\n\nNow, the regex parser will try to match your regex at the start of the string.\n\nIt is at &quot;/&quot; (first character): does it match? is  part of ? Yes (at least in the &quot;mind&quot; of the regex parser). Now the funny thing is that  will replace the matched part of the string with ... But funnily the matched part of  is , so it will replace an imaginary empty string that is just before the  with . So it will become \n\nNow it will go to the next character (because normally the regex will be tried starting at the end of the previous match, but with a caveat written below), the , redo the same and replace it with , so we will have at this point:\n\n\n\nand so on.\n\nThere is a last little trick (taken from msdn)\n\n\n  When a match attempt is repeated by calling the Matches method, the regular expression engine gives empty matches special treatment. Usually, the regular expression engine begins the search for the next match exactly where the previous match left off. However, after an empty match, the regular expression engine advances by one character before trying the next match. \n\n",
            "excerpt": "So it will become &quot;17/&quot;\n\nNow it will go to the next character (because normally the <span class=\"highlight\">regex</span> will be tried starting at the end of the previous match, but with a caveat written below), the t, <span class=\"highlight\">redo</span> the same &hellip; <span class=\"highlight\">and</span> replace it with &quot;17t&quot;, so we will have at this point:\n\n17/17t\n\n\n<span class=\"highlight\">and</span> so on. &hellip; ",
            "title": "find and replace with regex C#"
        },
        {
            "tags": [
                "javascript",
                "jquery",
                "regex"
            ],
            "question_score": 0,
            "is_accepted": false,
            "answer_id": 17948650,
            "is_answered": false,
            "question_id": 17948217,
            "item_type": "answer",
            "score": 0,
            "last_activity_date": 1375191927,
            "creation_date": 1375191523,
            "body": "Here is a complete redo of your code with a working result... using jquery instead of regex (as I noticed you are using jquery in part): http://jsfiddle.net/T66ph/8/\n\n\n",
            "excerpt": "Here is a complete <span class=\"highlight\">redo</span> of your code with a working result... using jquery instead of <span class=\"highlight\">regex</span> (as I noticed you are using jquery in part): http://jsfiddle.net/T66ph/8/\n\n$(&quot;#container&quot;).append(content);\n$ &hellip; ",
            "title": "Trying to get a list of &lt;tr&gt;...&lt;/tr&gt; with regular expressions in javascript"
        },
        {
            "tags": [
                "python",
                "regex",
                "conditional-statements",
                "named",
                "regex-lookarounds"
            ],
            "question_score": 1,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 2,
            "is_answered": true,
            "question_id": 17563226,
            "item_type": "question",
            "score": 1,
            "last_activity_date": 1373437610,
            "creation_date": 1373435093,
            "body": "I&#39;m hoping to match the beginning of a string differently based on whether a certain block of characters is present later in the string. A very simplified version of this is: \n\n\n\nWhere, if  is matched, I want to see  at the beginning of the string, and if it isn&#39;t then I&#39;d rather see . \n\nI&#39;d use normal numerical lookahead but there&#39;s no guarantee how many groups will or won&#39;t be matched between these two. \n\nI&#39;m currently getting . The sinking feeling in my gut tells me that this is because what I want is impossible (look-ahead to named groups isn&#39;t exactly a feature of a regular language parser), but I really really really want this to work -- the alternative is scrapping 4 or 5 hours&#39; worth of regex writing and redoing it all tomorrow as a recursive descent parser or something. \n\nThanks in advance for any help. \n",
            "excerpt": "want is impossible (look-ahead to named groups isn&#39;t exactly a feature of a regular language parser), but I really really really want this to work -- the alternative is scrapping 4 or 5 hours&#39; worth of <span class=\"highlight\">regex</span> &hellip; writing <span class=\"highlight\">and</span> redoing it all tomorrow as a recursive descent parser or something. &hellip; ",
            "title": "Regex named conditional lookahead (in Python)"
        },
        {
            "tags": [
                "regex",
                "perl"
            ],
            "question_score": 1,
            "is_accepted": false,
            "answer_id": 17368757,
            "is_answered": false,
            "question_id": 15581150,
            "item_type": "answer",
            "score": 0,
            "last_activity_date": 1372434680,
            "creation_date": 1372434680,
            "body": "I&#39;m not sure your perl regex would replace the DNS in string matching several times the old DNS (in the same serialized string).\n\nI made a gist with a script using bash, sed and one big perl regex for this same problem. You may give it a try.\n\nThe regex I use is something like that (exploded for lisibility, and having -7 as the known difference between domain names lengths):\n\n\n\nWhich is maybe not the best one but at least it seems to de the job. The  option manages lines containing several serialized strings to cleanup and the  loop redo the whole job until no replacement occurs in serilized strings (for strings containing several occurences of the DNS). I&#39;m not fan enough of regex to try a recursive one.\n",
            "excerpt": "I made a gist with a script using bash, sed <span class=\"highlight\">and</span> one big perl <span class=\"highlight\">regex</span> for this same problem. You may give it a try. &hellip; The g option manages lines containing several serialized strings to cleanup <span class=\"highlight\">and</span> the while loop <span class=\"highlight\">redo</span> the whole job until no replacement occurs in serilized strings (for strings containing several occurences &hellip; ",
            "title": "perl replacing serialized strings from sql dump"
        },
        {
            "tags": [
                "c#",
                "asp.net",
                "regex",
                "createuserwizard"
            ],
            "question_score": 1,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 2,
            "is_answered": true,
            "question_id": 10605266,
            "item_type": "question",
            "score": 1,
            "last_activity_date": 1370944052,
            "creation_date": 1337100224,
            "body": "I am adding some regex  with the register user steps, they are working because the &#39;&#39; is being displayed but the Wizard will still let me create an account with errors of regex.\n\n\nI tried to redo the wizard \nChanging some features but nothing\n\n\n.\n\nPage Source\n\n\n\nAspx File\n\n\n",
            "excerpt": "I am adding some <span class=\"highlight\">regex</span>  with the register user steps, they are working because the &#39;*&#39; is being displayed but the Wizard will still let me create an account with errors of <span class=\"highlight\">regex</span>. &hellip; I tried to <span class=\"highlight\">redo</span> the wizard \nChanging some features but nothing\n\n\n. &hellip; ",
            "title": "Adding Regex Validators with CreateUserWizard they are not Working"
        },
        {
            "tags": [
                "php",
                "regex",
                "preg-match",
                "preg-match-all"
            ],
            "question_score": 5,
            "is_accepted": true,
            "answer_id": 16262638,
            "is_answered": false,
            "question_id": 16258143,
            "item_type": "answer",
            "score": 10,
            "last_activity_date": 1367183333,
            "creation_date": 1367150501,
            "body": "Solution\n\nThe regex below will allow you to grab the content of all the nested curly braces. Note that this assumes that the nested curly braces are balanced; otherwise, it is hard to define what the answer should be.\n\n\n\nThe result will be in capturing group 1.\n\nDEMO\n\nNote that the order is not as specified in the question, though. The order printed out is defined by the order of appearance of opening curly bracket , which means that the content of the outer most pair will be printed out first.\n\nExplanation\n\nIgnoring the zero-width positive look-ahead  for now, and let us focus on the pattern inside, which is:\n\n\n\nThe part between 2 literal curly braces -  will matches 1 or more instances of either:\n\n\na non-empty non-curly-brace sequence of characters , or\nrecursively match a block enclosed by , which may contain many other non-curly-brace sequences or other blocks.\n\n\nThe pattern above alone can match text that doesn&#39;t contain , which we don&#39;t need. Therefore, we make sure a match is a block enclosed by  by the pair of curly braces  at 2 ends: .\n\nSince we want the content inside the all the nested curly braces, we need to prevent the engine from consuming the text. That&#39;s where the use of the zero-width positive look-ahead comes in to play.\n\nIt is not very efficient since you will redo the match for the nesting braces, but I doubt there is any other general solution with regex that can handle it efficiently.\n\nNormal code can handle everything efficiently in one pass, and is recommended if you are going to extend your requirement in the future.\n",
            "excerpt": "Solution\n\nThe <span class=\"highlight\">regex</span> below will allow you to grab the content of all the nested curly braces. &hellip; It is not very efficient since you will <span class=\"highlight\">redo</span> the match for the nesting braces, but I doubt there is any other general solution with <span class=\"highlight\">regex</span> that can handle it efficiently. &hellip; ",
            "title": "Get all nested curly braces"
        },
        {
            "tags": [
                "python",
                "regex",
                "python-2.7"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 1,
            "is_answered": true,
            "question_id": 15421142,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1363299225,
            "creation_date": 1363298930,
            "body": "I have this regex \n\n\n\nthat excludes all letters/words. But how to redo it so that it still excludes all letters/words except for specified, by us, word. \n",
            "excerpt": "I have this <span class=\"highlight\">regex</span> \n\n[^a-z]*\n\n\nthat excludes all letters/words. But how to <span class=\"highlight\">redo</span> it so that it still excludes all letters/words except for specified, by us, word. &hellip; ",
            "title": "How to exclude all letters except for a specific word - regex"
        },
        {
            "tags": [
                "c#",
                "json",
                "reflection"
            ],
            "question_score": 1,
            "is_accepted": false,
            "answer_id": 14967689,
            "is_answered": false,
            "question_id": 14967618,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1361368940,
            "creation_date": 1361308926,
            "body": "Okay, I&#39;m redoing my answer based on the feedback. The dynamic object generator code still comes from this:\n\nDeserialize JSON into C# dynamic object?\n\nThis uses RegEx, Generic collections and it does use Linq, but only in 2 lines and those can easily rewritten to not use Linq (the two &#39;result = &#39; lines at the end of ). The generic dictionaries can also be replaced with hash tables if necessary.\n\nThe json parser is adapted from How can I deserialize JSON to a simple Dictionary&lt;string,string&gt; in ASP.NET?\n\n\n",
            "excerpt": "This uses <span class=\"highlight\">RegEx</span>, Generic collections <span class=\"highlight\">and</span> it does use Linq, but only in 2 lines <span class=\"highlight\">and</span> those can easily rewritten to not use Linq (the two &#39;result = &#39; lines at the end of DynamicJsonObject.TryGetMember()). &hellip; <span class=\"highlight\">regex</span> = new <span class=\"highlight\">Regex</span>(@&quot;\\\\u([0-9a-z]{4})&quot;, RegexOptions.IgnoreCase);\n        int autoKey = 0;\n        bool inSingleQuotes = false;\n        bool inDoubleQuotes = false;\n        for (int i = start; i &lt; json.Length &hellip; ",
            "title": "deserialize json to class (manually with reflection)"
        },
        {
            "tags": [
                "javascript",
                "jquery",
                "regex"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 1,
            "is_answered": false,
            "question_id": 14291267,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1357997835,
            "creation_date": 1357975526,
            "body": "I have a few javascript statements that I need to store in order to implement later in an undo/redo mechanism.\n\nMy statements consist of setting the HTML of the  div, and editing the global variable .  can consist of many  within it, each with their own inline style attributes. I was previously storing the multiple statements like this:\n\n\n\nand then I would using , when the undo button was pressed. \nAn example of what might be stored in the  variable is this:\n\n\n\n(Notice that after the .html() statement there&#39;s a variable assignment).\n\nSo what I was doing earlier was simply doing , in order to execute both the  and the  statements. \n\nBut I&#39;ve realized  had problems. So while retaining the two (and there could more) javascript statements in the  variable, I just want to extract whatever comes between the brackets in .\n\nSo I want a regex to extract from the variable , only whatever&#39;s returned by , i.e. whatever I had in . That way, instead of using eval, I can directly do \n\nI know I could easily use substring but I would like to know how to do it using regular expressions.\n\nI&#39;ve tried to edit the question but I think it might still be confusing. To simplify, perhaps I&#39;m just asking, how, using regex, can we capture the string between two different substrings, in this case  and ?\n",
            "excerpt": "I have a few javascript statements that I need to store in order to implement later in an undo/<span class=\"highlight\">redo</span> mechanism. &hellip; To simplify, perhaps I&#39;m just asking, how, using <span class=\"highlight\">regex</span>, can we capture the string between two different substrings, in this case $(&#39;#content&#39;).html( <span class=\"highlight\">and</span> );? &hellip; ",
            "title": "javascript regular expression to extract the code returned by content.html() in a string"
        },
        {
            "tags": [
                "javascript",
                "jquery",
                "autocorrect"
            ],
            "question_score": 11,
            "is_accepted": true,
            "answer_id": 13653186,
            "is_answered": false,
            "question_id": 12387910,
            "item_type": "answer",
            "score": 7,
            "last_activity_date": 1354309632,
            "creation_date": 1354309632,
            "body": "Your suggested approach (separating each word in a  and storing additional data in it) at first glance seems to be the most sensible approach. On the editor level, you just need to ensure all text is inside some , and that each of them contains only a single word (splitting it if necessary). On the word level, just listen for changes in the s (binding  and ) and act according to its class/data.\n\nHowever, the real pain is to keep the caret position consistent. When you change the contents of either a  or an element with , the caret moves rather unpredictably, and there&#39;s no easy (cross-browser) way of keeping track of the caret. I searched for solutions both here at SO and elsewhere, and the simplest working solution I found was this blog post. Unfortunatly it only applied to , so the &quot;each word in a span&quot; solution couldn&#39;t be used.\n\nSo, I suggest the following approach:\n\n\nKeep a list of words in an , where each word stores both the current value and the original;\nWhen the contents of the  changes, keep the set of unchanged words and redo the rest;\nOnly apply the spell check if the caret is just after a non-word character (room for improvement) and you&#39;re not hitting ;\nIf the user was unsatisfied with the correction, hitting  once will undo it, and it won&#39;t be checked again unless modified.\n\nIf many corrections were done at once (for instance, if a lot of text were copy-pasted), each  will undo one correction until no one is left.\nHitting any other key will commit the correction, so if the user is still unsatisfied he&#39;ll have to go back and change it again.\nNote: differently from the OP requirements, the changed version will be autocorrected again if the user inputs a non-word character; he&#39;ll need to hit  once to &quot;protect&quot; it.\n\n\n\nI created a simple proof-of-concept at jsFiddle. Details below. Note that you can combine it with other approaches (for instance, detecting a &quot;down arrow&quot; key and displaying a menu with some auto-correcting options) etc.\n\n\n\nSteps of the proof-of-concept explained in detail:\n\n\nKeep a list of words in an , where each word stores both the current value and the original;\n\n\n\nThis regex splits the text into words (each word has a  property and a  one; the latter stores non-word characters immediatly following it)\n\n\nWhen the contents of the  changes, keep the set of unchanged words and redo the rest;\n\n\nOnly apply the spell check if the caret is just after a non-word character (room for improvement) and you&#39;re not hitting ;\n\n\nIf the user was unsatisfied with the correction, hitting  once will undo it, and it won&#39;t be checked again unless modified.\n\n\nThe code for  simply joins all words again into a string, and set the value back to the . The caret is preserved if nothing was changed, or placed just after the last autocorrection done/undone, to account for changes in the text length:\n\n\nThe final plugin structure:\n\n\n\n",
            "excerpt": "words <span class=\"highlight\">and</span> <span class=\"highlight\">redo</span> the rest;\nOnly apply the spell check if the caret is just after a non-word character (room for improvement) <span class=\"highlight\">and</span> you&#39;re not hitting backspace;\nIf the user was unsatisfied with the correction &hellip; Steps of the proof-of-concept explained in detail:\n\n\nKeep a list of words in an Array, where each word stores both the current value <span class=\"highlight\">and</span> the original;\n\nvar words = [];\n\n\nThis <span class=\"highlight\">regex</span> splits the text into &hellip; ",
            "title": "Yielding spellchecker"
        },
        {
            "tags": [
                "string",
                "actionscript-3",
                "flash"
            ],
            "question_score": 1,
            "is_accepted": true,
            "answer_id": 13462656,
            "is_answered": false,
            "question_id": 13458762,
            "item_type": "answer",
            "score": 2,
            "last_activity_date": 1353360922,
            "creation_date": 1353360922,
            "body": "benbjo&#39;s advice is a solid one. If performance is really a concern, the best test case is the situation where you&#39;re actually going to use your code, not least because of garbage collection and the JIT&#39;er making things unpredictable in terms of the actual performance.\n\nThat said, the  approach in general will be (20-50%) faster than . Memory-wise there shouldn&#39;t be much of a difference - both approaches are creating a new string per character. In addition to that, the  obviously also creates an additional array.\n\nA comparison of these two methods:\n\ncharAt:\n\n\n\nsplit:\n\n\n\nThe relevant compiled ABC byte code is predictably identical between the two, except the call to split, and the array access vs. calling . In other words, no crazy optimization stunts by the ASC compiler (those are rare anyway).\n\n10 runs, 1000 iterations each of the above code, release build on release player:\n\n\n\nAvg = average time for each run (of 1000 iterations)\n\nMin = minimum time for a single run\n\nMax = maximum time for a single run\n\nIter = average time for a single iteration.\n\nThe variance between runs is fairly large, likely due to garbage collection happening during some of the runs. But the result is consistently in favour of . Making the  call once before each run rather than redoing it in each iteration doesn&#39;t make much difference. In other words, the difference in performance really does lie in accessing the array being slower than calling . It&#39;s not the huge difference, however, that you&#39;ll get from, say, using  instead of a regex for searching a string.\n\nIn general, although it&#39;s not a hard-and-fast rule, the most obvious approach to simple tasks like string manipulation will likely be the faster one. The FlashPlayer team spent a lot of time optimizing string manipulation, concatenation etc.\n",
            "excerpt": "It&#39;s not the huge difference, however, that you&#39;ll get from, say, using indexOf instead of a <span class=\"highlight\">regex</span> for searching a string. &hellip; In general, although it&#39;s not a hard-<span class=\"highlight\">and</span>-fast rule, the most obvious approach to simple tasks like string manipulation will likely be the faster one. &hellip; ",
            "title": "String&#39;s split or charAt"
        },
        {
            "tags": [
                "python",
                "regex"
            ],
            "question_score": 8,
            "is_accepted": false,
            "answer_id": 12749248,
            "is_answered": false,
            "question_id": 12749175,
            "item_type": "answer",
            "score": 5,
            "last_activity_date": 1349451642,
            "creation_date": 1349450299,
            "body": "Probably a ReDos issue.\n\nSee: http://en.wikipedia.org/wiki/ReDoS\n\nIt&#39;s possible to create a regular expression denial of service on poorly constructed regexes.\n\nFor example, from here: https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n\nThis regex \n\n\n\nFor the input aaaaX there are 16 possible paths in the above graph. But for aaaaaaaaaaaaaaaaX there are 65536 possible paths, and the number is double for each additional a. This is an extreme case where the na&#239;ve algorithm is problematic, because it must pass on many many paths, and then fail.\n\nI suspect a large part of the problem with your regex is this  which is somewhat confusing, as  is already included in .  But creates an option point.\n\nEDIT: I think this was one of the better explanations of the issue I&#39;ve read. \n\nhttp://msdn.microsoft.com/en-us/magazine/ff646973.aspx\n",
            "excerpt": "Probably a <span class=\"highlight\">ReDos</span> issue.\n\nSee: http://en.wikipedia.org/wiki/<span class=\"highlight\">ReDoS</span>\n\nIt&#39;s possible to create a regular expression denial of service on poorly constructed regexes. &hellip; This is an extreme case where the na&#239;ve algorithm is problematic, because it must pass on many many paths, <span class=\"highlight\">and</span> then fail.\n\nI suspect a large part of the problem with your <span class=\"highlight\">regex</span> is this (. &hellip; ",
            "title": "Regular expression that never finishes running"
        },
        {
            "tags": [
                "python",
                "regex"
            ],
            "question_score": 5,
            "is_accepted": false,
            "answer_id": 12141748,
            "is_answered": false,
            "question_id": 12141206,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1346069495,
            "creation_date": 1346069495,
            "body": "Is there some reason you feel compelled to approach this with a single regex?  Is it really a nail(*)?  Is there some reason why you can&#39;t install and use the Python IPAddr module and use it to parse and manipulate your IP addresses?  I guess you could then do something like:\n\n\n\nIn other words there&#39;s a package where someone has done all the heavy lifting of parsing and manipulating IP Address strings.  How much of that do you really want to redo for your code?  How much time do you want to spend testing your new code and finding the same sorts of bugs that the creators of this package have probably found and fixed?\n\nIf I sound like I&#39;m hammering on the point a bit ... it&#39;s because this approach seems entirely too similar to attempts to parse HTML (or XML) using regexes rather than using existing, tested, robust parsers which have already been written.\n\n\n(If the only tool at hand is a hammer, every problem looks like a nail)\n\n",
            "excerpt": "Is there some reason you feel compelled to approach this with a single <span class=\"highlight\">regex</span>?  Is it really a nail(*)? &hellip; How much of that do you really want to <span class=\"highlight\">redo</span> for your code? &hellip; ",
            "title": "IPAddress or CIDR block matching regex"
        },
        {
            "tags": [
                "c#",
                "regex"
            ],
            "question_score": 0,
            "is_accepted": false,
            "answer_id": 10358500,
            "is_answered": false,
            "question_id": 10355781,
            "item_type": "answer",
            "score": 0,
            "last_activity_date": 1335829414,
            "creation_date": 1335564508,
            "body": "You should let a regex do the work for you   \n\nredo 4-29  \n\n\n\nBenchmarks are welcome...\n",
            "excerpt": "You should let a <span class=\"highlight\">regex</span> do the work for you (?=(..)). &hellip; =(.{&quot; + check_len + &quot;})).&quot;);\n        bool bOK = m.Success;\n\n        while (bOK &amp;&amp; m.Success)\n        {\n            // Edit: remove unnecessary &#39;.*&#39; from <span class=\"highlight\">regex</span>.\n            // <span class=\"highlight\">And</span> btw, is <span class=\"highlight\">regex</span> needed at &hellip; ",
            "title": "Password should not contain the user&#39;s account name or parts of the user&#39;s full name that exceed two consecutive characters"
        },
        {
            "tags": [
                "regex",
                "vba",
                "excel",
                "excel-match"
            ],
            "question_score": 6,
            "is_accepted": true,
            "answer_id": 9952260,
            "is_answered": false,
            "question_id": 9951328,
            "item_type": "answer",
            "score": 2,
            "last_activity_date": 1334961416,
            "creation_date": 1333157672,
            "body": "Redo -  \n\nThis is different approach. It might work in your VBA, and is just an example.\nI tested this in Perl and it worked great. But, I won&#39;t show the perl code,\njust regex&#39;s and some explanations.\n\nThis is a two step process. \n\n\nNormalize the column text  \nDo the main parse  \n\n\nNormalize Process\n\n\nGet a column value  \nStrip out all dots  - Globally search for  , replace with nothing   \nTurn whitespaces into spaces - Globally search for  , replace with a single space   \n\n\n(Note that if it can&#39;t be normalized, I don&#39;t see much chance for sucess no matter what is tried)  \n\nMain Parse Process\n\nAfter normalizing a column value (do for both columns), run it through these regex&#39;s.  \n\nColumn 1 regex  \n\n\n\nThe replacement depends on what you want.\nThree types are defined (replace  with  as needed):  \n\n\ntype 1a full middle - \ntype 1b middle initial - \ntype 2  middle initial - \n\n\nExample conversion:  \n\n\n\nColumn 2 regex  \n\n\n\nThe replacement depends on what you want.\nTwo types are defined (replace  with  as needed):  \n\n\ntype 1a full middle - \ntype 1b middle initial - \n\n\nExample conversion:  \n\n\n\nVBA Replacement Help  \n\nThis works on a very old copy of Excel, creating a VBA project.\nThese are two modules created to show an example.\nThey both do the same thing.\n\nThe first is a verbose example of all the replacement types possible.\nThe second is a trimmed down version using just a type-2 comparison.  \n\nI haven&#39;t done VB before as you can tell, but it should be simple enough\nfor you to glean how the replacement works, and how to tie in the excel\ncolumns.  \n\nIf you are doing just a flat comparison, you might want to do a col 1 val\nonce, then check each value in column 2 against it, then go to next val in\ncolumn 1, then repeat.  \n\nFor the fastest way to do this, create 2 extra columns, convert respected\ncolumns vals to type-2 (variables strC1_2 and strC2_2, see example), then copy them\nto the new columns.\nAfter that, you don&#39;t need regex, just compare columns, find the matching rows,\nthen delete the type-2 columns.  \n\nVerbose -  \n\n\n\nType 2 only -  \n\n\n\nParen/Quote Response  \n\n  \n\nIf I understand correctly ..  \n\nYes, you can capture the contents inside quotes and parenthesis separetly.\nIt just requires some modifications. The below regex has the ability to\nformulate a replacement with or without quotes and/or parenthesis,\nor other forms.  \n\nSamples below give ways to formulate replacements.  \n\nVery Important Note here  \n\nIF you are talking about eliminating quotes &quot;&quot; and parenthesis () from the\nmatching regex, that could be done as well. It requires a new regex.  \n\nThe only problem is that ALL distinction between preferred/middle/nick\ngets thrown out the window because these were positional as well as\ndelimited (ie:  (preferred) middle &quot;nick&quot;  ).  \n\nTaking away consideration of that would require regex subexpressions like this  \n\n\n\nAnd, thier being optional, loses all positional reference and renders the midle-initial\nexpression invalid.  \n\nEnd Note  \n\nRegex template (use to formulate replacement strings)  \n\n\n\nVBA regex (2nd edition, tested in my VBA project from above)  \n\n\n\nSample input/output possibilities  \n\n\n\nRe: 4/17 concern  \n\n\n\nActually, no it wouldn&#39;t. In this case, for your form, allowing multiple words in the last name\ninjects the space field delimeter into the last name field.  \n\nHowever, for your particular form, it could be done, since the only handicap is when the\n field is missing. When it is missing and given that there is only one word in the\nmiddle name, 2 permutations are presented.  \n\nHopefully You can get the solution from the 3 regexes and test case output(s) below.\nThe regexes have expunged space delimeters from the capture. So, you can either compose\nreplacements with the Replace method, or just store the capture buffers to compare to\nthe results of capture scenario&#39;s of other columns.\n\n\n",
            "excerpt": "<span class=\"highlight\">Redo</span> -  \n\nThis is different approach. It might work in your VBA, <span class=\"highlight\">and</span> is just an example.\nI tested this in Perl <span class=\"highlight\">and</span> it worked great. &hellip; Very Important Note here  \n\nIF you are talking about eliminating quotes &quot;&quot; <span class=\"highlight\">and</span> parenthesis () from the\nmatching <span class=\"highlight\">regex</span>, that could be done as well. It requires a new <span class=\"highlight\">regex</span>. &hellip; ",
            "title": "Comparing 2 lists in Excel with VBA Regex"
        },
        {
            "tags": [
                "java",
                "regex",
                "performance",
                "regex-lookarounds"
            ],
            "question_score": 2,
            "is_accepted": false,
            "answer_id": 9832171,
            "is_answered": false,
            "question_id": 9831034,
            "item_type": "answer",
            "score": 2,
            "last_activity_date": 1332705473,
            "creation_date": 1332459740,
            "body": "This might shave some time  \n\ngreedy\n  \n\nnon-greedy\n  \n\nredo  \n\nI&#39;ve made my own benches on this issue. Matching a single term at a time like \nas opposed to two terms in one regex will always take less time because it does no\nbacktracking. Its as easy as strncmp(term). And doing 2 terms seperately will then be\nmuch faster.\n\nIf you can define the terms such that there is no possiblity of overlap, then this is\nthe way to go. ie; /term1/ &amp;&amp; /term2/.\n\nThere is no way to combine terms into a single regex without invoking backtracking.  \n\nThat is, if you actually care about overlap, then there are techniques to minimize\nbacktracking.\n\n/(?=.*A)(?=.*B)/ is just like /A/ &amp;&amp; /B/ except it seems a whole lot slower, neither account for overlap.\n\nSo, if you actually care about overlap (and I would strongly recommend you do), there is\nare two ways that could be combined for maximum efficiency.\n\n/(A|B) .* (?!\\1)(?:A|B)/\n\nor  \n\n/A/ &amp;&amp; /B/ &amp;&amp; /(A|B) .* (?!\\1)(?:A|B)/\n\nThis last one will add a small (relative) overhead, but can inhibit access in the logic\nchain, requiring A and B to at least exist, before checking for overlap.\n\nAnd, depending on where A and B exist in the string, /(A|B) .* (?!\\1)(?:A|B)/\ncould also take time, but its still the shortest way that there is when everything\naverages out.\n\nBelow is a Perl program that benchmarks some sample (possible scenarios) strings.\n\nGood luck!\n\n\n\nOutput  \n\n\n",
            "excerpt": "\\1)[AB]  \n\n<span class=\"highlight\">redo</span>  \n\nI&#39;ve made my own benches on this issue. &hellip; <span class=\"highlight\">And</span>, depending on where A <span class=\"highlight\">and</span> B exist in the string, /(A|B) .* (?!\\1)(?:A|B)/\ncould also take time, but its still the shortest way that there is when everything\naverages out. &hellip; ",
            "title": "Poor performance / speed of regex with lookahead"
        },
        {
            "tags": [
                "user-interface",
                "scripting",
                "logparser"
            ],
            "question_score": 9,
            "is_accepted": false,
            "answer_id": 9809604,
            "is_answered": false,
            "question_id": 174803,
            "item_type": "answer",
            "score": 6,
            "last_activity_date": 1332350269,
            "creation_date": 1332350269,
            "body": "Log Parser Lizard GUI, current version 2.5, with its features (even in free version) is still the best GUI for MS Logparser engine available on the market for numerous reasons:\n\n\nQuery organization: organize queries in multiple groups for quick access.\nQuery Editor: syntax highlight, intellisense and tool tips, undo/redo, code snippets and query constants (similar as macro defines in C/C++)\nGreat looking Office 2010 style GUI\n-Tabbed results allows multiple queries to be run and compared\nAdvanced grid: Excel-style filtering capabilities and the ability to do Averages, Counts, Max, Min, and Sum equations on the fly. Column sorting, rows grouping, showing different views of the data without re-running the query (a big time saver when working with gigabytes of logs). Excel style formulas and conditional formatting are also supported.\nSimple interface for building charts and show result in all kinds of chart types (line, pie, bar, column, doughnut, area, 2D and 3D charts, etc…)\nPrint log parser reports\n-Change command line parameters from the GUI\n-Support for multiline (log4net) and regex (regular expressions) input formats and for Т-SQL (OLEDB) queries to maintain your SQL servers from single tool. Also supports Facebook FQL (useful if you are using the tool as Facebook developer).\nInline Visual Basic .Net code (useful for prompting users for input). Change queries using VB.Net code. For instance this query will prompt the user for EventID input (sample from Lizard Labs web site):\n\n\n  select top 100 * from Application  where EventID=&lt;% return\n  Microsoft.VisualBasic.Interaction.InputBox(&quot;Please enter Event\n  ID&quot;,&quot;Event ID&quot;,&quot;1053&quot;) %&gt;\n\n\n\nAnd if you really like it, for very small price you can have added value and even more features like export results to Excel 2007, create PDF reports, save queries in centralized SQL Server Database for easy shearing among users , etc…\nTherefore I believe that you have made a fine choice using Log Parser Lizard. I believe it is much better software than Microsoft Log Parser Studio and Visual Log Parser or any other logparser GUI I have worked with. \n\nI hope that someday Microsoft will release Logparser 3.0 (that we all love v2.2) supporting more input formats (Exchange, Sharepoint, etc…) and with more powerful features instead of releasing the Log Parser Studio GUI (which is not so bad after all but users have to be informed about better alternatives like Log Parser Lizard here).\n",
            "excerpt": "Query Editor: syntax highlight, intellisense <span class=\"highlight\">and</span> tool tips, undo/<span class=\"highlight\">redo</span>, code snippets <span class=\"highlight\">and</span> query constants (similar as macro defines in C/C++)\nGreat looking Office 2010 style GUI\n-Tabbed results allows multiple &hellip; from the GUI\n-Support for multiline (log4net) <span class=\"highlight\">and</span> <span class=\"highlight\">regex</span> (regular expressions) input formats <span class=\"highlight\">and</span> for Т-SQL (OLEDB) queries to maintain your SQL servers from single tool. &hellip; ",
            "title": "What LogParser UI do you use?"
        },
        {
            "tags": [
                "regex",
                "notepad++"
            ],
            "question_score": 4,
            "is_accepted": false,
            "answer_id": 9796680,
            "is_answered": false,
            "question_id": 9795448,
            "item_type": "answer",
            "score": 5,
            "last_activity_date": 1332288058,
            "creation_date": 1332287044,
            "body": "Its probably as simple as going into the Notepad++ tools menu and enterring the text to search for then stipulate to delete each line it finds it in.\n\nOtherwise a normal regex to identify the entire line might be something like this -  \n\nredo  \n\nIf the default is (.) dot as anything but newline, then this  \n\n  \n\nelse, this   \n\n  \n\nThese should match an entire line (plus a newline) if &#39;False&#39; is on the line.\nAnything more like &#39;False&#39; has to be surrounded by delimiters is extra logic.\n",
            "excerpt": "Its probably as simple as going into the Notepad++ tools menu <span class=\"highlight\">and</span> enterring the text to search for then stipulate to delete each line it finds it in. &hellip; Otherwise a normal <span class=\"highlight\">regex</span> to identify the entire line might be something like this -  \n\n<span class=\"highlight\">redo</span>  \n\nIf the default is (.) dot as anything but newline, then this  \n\n.*False.*\\n? &hellip; ",
            "title": "Delete a Line which contains a specific word"
        },
        {
            "tags": [
                "clojure",
                "vim"
            ],
            "question_score": 55,
            "is_accepted": false,
            "answer_id": 9474306,
            "is_answered": false,
            "question_id": 9348687,
            "item_type": "answer",
            "score": 6,
            "last_activity_date": 1330386951,
            "creation_date": 1330386951,
            "body": "This is much harder than it sounds, and borderline-impossible with the vimscript API as it stands, because you don&#39;t just need to parse the file; if you want it to work well, you need to parse the file incrementally. That&#39;s why regular syntax files are limited to what you can do with regexes - when you change a few characters, vim can figure out what&#39;s changed in the syntax highlighting, without redoing the whole file.\n\nThe vim syntax highlighter is limited to dealing with regexes, but if you&#39;re hellbent on doing this, you can roll your own parser in vimscript, and have it generate a buffer-local syntax that refers to tokens in the file by line and column, using the \\%l and \\%c atoms in a regex. This would have to be rerun after every change. Unfortunately there&#39;s no autocmd for &quot;file changed&quot;, but there is the CursorHold autocmd, which runs when you&#39;ve been idle for a configurable duration.\n",
            "excerpt": "This is much harder than it sounds, <span class=\"highlight\">and</span> borderline-impossible with the vimscript API as it stands, because you don&#39;t just need to parse the file; if you want it to work well, you need to parse the file &hellip; tokens in the file by line <span class=\"highlight\">and</span> column, using the \\%l <span class=\"highlight\">and</span> \\%c atoms in a <span class=\"highlight\">regex</span>. &hellip; ",
            "title": "Highlight arguments in function body in vim"
        },
        {
            "tags": [
                "unicode"
            ],
            "question_score": 9,
            "is_accepted": true,
            "answer_id": 8841591,
            "is_answered": false,
            "question_id": 8841290,
            "item_type": "answer",
            "score": 21,
            "last_activity_date": 1326466837,
            "creation_date": 1326398983,
            "body": "ᴇᴅɪᴛ: Added exactly what the original question is looking for at the bottom. This is really cool.\n\n\n\nThe answer to your question about ʀᴏᴍᴀɴ ɴᴜᴍᴇʀᴀʟ ᴏɴᴇ and ʟᴀᴛɪɴ ᴄᴀᴘɪᴛᴀʟ ʟᴇᴛᴛᴇʀ ɪ is YES.  Here’s a quick way to check:\n\n\n\nHowever, the answer to your question as to whether characters that are visually indistinguishable have compatibility equivalence is most definitely NO!\n\nFor example, ᴄʜᴇʀᴏᴋᴇᴇ ʟᴇᴛᴛᴇʀ ɢᴏ (Ꭺ) looks like ʟᴀᴛɪɴ ᴄᴀᴘɪᴛᴀʟ ʟᴇᴛᴛᴇʀ ᴀ (A), but is certainly not  NFKD equivalent.  Similarly with ɢʀᴇᴇᴋ ᴄᴀᴘɪᴛᴀʟ ʟᴇᴛᴛᴇʀ ᴀʟᴘʜᴀ (Α) and ᴄʏʀɪʟʟɪᴄ ᴄᴀᴘɪᴛᴀʟ ʟᴇᴛᴛᴇʀ ᴀ (А) not being NFKD equivalent.  There are effectively uncountably many (well, I can’t count them :) such issues.  The only code points that are NFKD-equiv to ʟᴀᴛɪɴ ᴄᴀᴘɪᴛᴀʟ ʟᴇᴛᴛᴇʀ ᴀ, for example, are:\n\n\n\nSimilarly, here are the codepoints that are NFKD equiv to the ʟᴀᴛɪɴ ᴄᴀᴘɪᴛᴀʟ ʟᴇᴛᴛᴇʀ ɪ you were looking at:\n\n\n\nNotice there’s no ɢʀᴇᴇᴋ ᴄᴀᴘɪᴛᴀʟ ʟᴇᴛᴛᴇʀ ɪᴏᴛᴀ there, just as one example.\n\nYou can’t use NFKD to find lookalikes, and some things that are NKFD equiv don’t look much alike.  So you can’t do it that way in the general case. It’s not a problem you can even begin to look at without looking at actual fonts.  \n\nI believe ICU has an extended, non-standard property for this, like .  I downloaded their datafiles for this, but haven’t played with it much yet.\n\n\n\nUpdate\n\nIt turns out that UTS #39, Unicode Security Mechanisms, has exactly what you are looking for.  If you fetch its raw, plaintext datafiles, you will be able to determine which code points are potentially confusable with one another. \n\nFor example, in the text earlier in this message, I enumerated the code points that were NFKD equivalent to ʟᴀᴛɪɴ ᴄᴀᴘɪᴛᴀʟ ʟᴇᴛᴛᴇʀ ɪ, and pointed out that many potential confusables were missing from that set. That’s because the NFKD mapping is not designed to detect confusables.  However, the datafiles from UTS#39 very much are designed for just that very purpose.\n\nTo redo my ʟᴀᴛɪɴ ᴄᴀᴘɪᴛᴀʟ ʟᴇᴛᴛᴇʀ ɪ enumeration, updating it to handle all code points that UTS#39 deems mutually confusable with it, we have these, formatted using unichars and sorted in order of the Unicode Collation Algorithm using ucsort:\n\n\n\nNifty though that is, it gets even better. The datafiles include not just single-codepoint confusables, but also confusables that may in some cases require multiple code points. For example, here’s one such set, this time in file-native format:\n\n\n\nIsn’t that swell?  The only hitch is unless you use the ICU classes, you’ll have to roll your own from the UTS#39 datafiles.  \n\nSince there are no other language bindings that I am aware of, I’ve added to my ᴛᴏᴅᴏ list to create Perl bindings to mimic the ICU style of writing  in the regex engine.\n\nNote that you may also wish to consider both UTS#36 and UTS#39, which the ICU  class handles for you. It’s specifically for URI-type things (read: Internet identifers, which use a restricted character set), not just any old arbitrary text.\n",
            "excerpt": "The answer to your question about ʀᴏᴍᴀɴ ɴᴜᴍᴇʀᴀʟ ᴏɴᴇ <span class=\"highlight\">and</span> ʟᴀᴛɪɴ ᴄᴀᴘɪᴛᴀʟ ʟᴇᴛᴛᴇʀ ɪ is YES. &hellip; To <span class=\"highlight\">redo</span> my ʟᴀᴛɪɴ ᴄᴀᴘɪᴛᴀʟ ʟᴇᴛᴛᴇʀ ɪ enumeration, updating it to handle all code points that UTS#39 deems mutually confusable with it, we have these, formatted using unichars <span class=\"highlight\">and</span> sorted in order of the Unicode &hellip; ",
            "title": "Do LATIN CAPITAL LETTER I (U+0049) and ROMAN NUMERAL ONE (U+2160) have unicode compatibility equivalence?"
        },
        {
            "tags": [
                "javascript",
                "jquery"
            ],
            "question_score": 0,
            "is_accepted": true,
            "answer_id": 8641442,
            "is_answered": false,
            "question_id": 8641323,
            "item_type": "answer",
            "score": 2,
            "last_activity_date": 1324964583,
            "creation_date": 1324963370,
            "body": "You can try something like the following:\n\n\n\nDemo: http://jsfiddle.net/zMdYg/2/ (updated with longer word list)\n\nI don&#39;t really know what you want to do with the results, so I&#39;ve just stuck them in a simple array, but you can see in the demo I then output them to the page so you can see it working. Obviously you&#39;d substitute your own requirement in that part.\n\nThis is using a regex to test each word. You&#39;ll notice that with  or  you&#39;ll get partial matches, e.g., if you look for &quot;other&quot; it will also match partway through &quot;bother&quot; (and so forth), but with the regex I&#39;ve used  to test on word boundaries.\n\nFor a large list of words you might want to create all the regexes in advance rather than redoing them on the fly in the loop, but it seemed to work fine for my simple test so I thought I wouldn&#39;t start doing premature optimisations. I&#39;ll leave that as an exercise for the reader...\n",
            "excerpt": "This is using a <span class=\"highlight\">regex</span> to test each word. &hellip; You&#39;ll notice that with .split() or .indexOf() you&#39;ll get partial matches, e.g., if you look for &quot;other&quot; it will also match partway through &quot;bother&quot; (<span class=\"highlight\">and</span> so forth), but with the <span class=\"highlight\">regex</span> I&#39;ve used \\b to test &hellip; ",
            "title": "Count the number of occurence of a case sensitive word in a paragraph in jquery"
        },
        {
            "tags": [
                "php",
                "mysql",
                "character-encoding"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 2,
            "is_answered": true,
            "question_id": 8233740,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1321996302,
            "creation_date": 1321995546,
            "body": "I currently operate a website on a PHP 5 and MySQL backbone.  The MySQL databases uses  encoding, and  collation.\n\nI&#39;d like to switch the MySQL databases to  encoding and . I don&#39;t need help converting the content within MySQL as I&#39;m processing that as it goes in and redoing all the content on the site.  Assume I&#39;m doing that correctly for this conversation ( even though I&#39;m probably not ).\n\nI know there are settings in php.ini like  that default to .  I also know that many of PHP&#39;s string manipulation functions like , as well as regexes, will not work correctly if I&#39;m dealing with strings that contain multi-byte UTF-8 characters, which I realize is not all characters in the UTF-8 set.\n\nWhat do I need to do to PHP server side and within my webapp to deal with UTF-8 coming out of my database?  What does it all do?\n",
            "excerpt": "I currently operate a website on a PHP 5 <span class=\"highlight\">and</span> MySQL backbone.  The MySQL databases uses cp1252 West Europe ( latin1 ) encoding, <span class=\"highlight\">and</span> latin1_swedish_cp collation. &hellip; I&#39;d like to switch the MySQL databases to UTF-8 encoding <span class=\"highlight\">and</span> utf8_general_ci. &hellip; ",
            "title": "What should I update in my PHP setup when I change my MySQL databases to UTF-8 encoding?"
        },
        {
            "tags": [
                "javascript",
                "jquery",
                "regex",
                "json",
                "screen-scraping"
            ],
            "question_score": 3,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 1,
            "is_answered": true,
            "question_id": 8068585,
            "item_type": "question",
            "score": 3,
            "last_activity_date": 1320926124,
            "creation_date": 1320857905,
            "body": "I doing a little jquery+greasemonkey which I&#39;m trying to use to redo an interface of an internal work site I have to use every day to try and make it a little more usable.\n\nI&#39;ve got to the stage of fetching the page and sticking it in a div.\nI can use some jquery selectors to identify the data rows of the table im after.\n\nHowever its old verbose html e.g.\n\n\n\nI have another tr which has the info i might at one stage like to use as the keys in my json.\n\nWhats the best way to scrape the important data ? I&#39;d like it to ultimately reside in some JSON ? regex ? templates ???\n",
            "excerpt": "I doing a little jquery+greasemonkey which I&#39;m trying to use to <span class=\"highlight\">redo</span> an interface of an internal work site I have to use every day to try <span class=\"highlight\">and</span> make it a little more usable. &hellip; <span class=\"highlight\">regex</span> ? templates ??? &hellip; ",
            "title": "creating json from old html dom element"
        },
        {
            "tags": [
                "php",
                "regex"
            ],
            "question_score": 1,
            "is_accepted": false,
            "answer_id": 8072779,
            "is_answered": false,
            "question_id": 8071986,
            "item_type": "answer",
            "score": 0,
            "last_activity_date": 1320878472,
            "creation_date": 1320878472,
            "body": "I think it doesen&#39;t work because your sample has only  in it. Otherwise, the regex should work on your sample.\n\nIt could be a problem in that there could be nested .\n\nBut thats html parsing or if its just text, maybe thats not a problem. Recursion could be done with a Perl or C# regex engine. If it were me, I would redo the regex to not allow nesting of :  \n\n\n\nThere might be other concerns as well.\n",
            "excerpt": "Otherwise, the <span class=\"highlight\">regex</span> should work on your sample.\n\nIt could be a problem in that there could be nested &lt;sup&gt;122 ASD &lt;sup&gt; af &lt;/sup&gt; &lt;/sup&gt;. &hellip; Recursion could be done with a Perl or C# <span class=\"highlight\">regex</span> engine. If it were me, I would <span class=\"highlight\">redo</span> the <span class=\"highlight\">regex</span> to not allow nesting of &lt;sup&gt;:  \n\n$text = preg_replace(\n&quot;~&lt;sup&gt;$key((?:(?! &hellip; ",
            "title": "Regex not matching like expected"
        },
        {
            "tags": [
                "java",
                "regex"
            ],
            "question_score": 12,
            "is_accepted": true,
            "answer_id": 7898901,
            "is_answered": false,
            "question_id": 7898865,
            "item_type": "answer",
            "score": 19,
            "last_activity_date": 1319664603,
            "creation_date": 1319605645,
            "body": "The pattern you are using is known as an evil regex according to OWASP (they know what they&#39;re talking about most of the time):\n\nhttps://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n\nIt basically matches  OR  or  (since the b is optional by addition of ) \n\nA Regex like this is vulnerable to a ReDoS or Regex Denial of Service Attack.\n\nSo yes, sort out what you want to match.  I suggest in the above example you should simply match , no need for groups, repitition or alternation:\n\n\n\nAlso as someone pointed out, who now deleted his post, you should not use += to append to strings.  You should use a StringBuffer instead:\n\n\n",
            "excerpt": "The pattern you are using is known as an evil <span class=\"highlight\">regex</span> according to OWASP (they know what they&#39;re talking about most of the time):\n\nhttps://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS &hellip; A <span class=\"highlight\">Regex</span> like this is vulnerable to a <span class=\"highlight\">ReDoS</span> or <span class=\"highlight\">Regex</span> Denial of Service Attack.\n\nSo yes, sort out what you want to match. &hellip; ",
            "title": "Java pattern matching going to infinite loop"
        },
        {
            "tags": [
                "git",
                "git-branch"
            ],
            "question_score": 1,
            "is_accepted": false,
            "answer_id": 7604863,
            "is_answered": false,
            "question_id": 7603503,
            "item_type": "answer",
            "score": -1,
            "last_activity_date": 1317343348,
            "creation_date": 1317343348,
            "body": "Here is my way of working. You can also see some good comments from Martin Fowler and others. Good discussion: https://plus.google.com/109096274754593704906/posts/R4qkeyRadLR\n\nThis may apply well to you if you want to have some control on what you release. But the fact that your &quot;features&quot; are small, you may relate to this type of workflow.\n\nBranch-per-Feature\n\nThe big WHY: Fast, flexible, high quality and confident development/deployment/testing etc. This makes business happy.\n\nIn point form, unorganized and rough:\n\nFeatures are small\n\nOld-school branch-per-feature meant that branches were large and long living to avoid having to integrate because it was a pain. This was a vicious circle as the feature would diverge further and further from other features or the mainline. Features should be as atomic as possible and your development process should abide by the Open Close Principle. Features should be small.\n\nIntegrate relentlessly\n\nThey should be integrated into an integration branch almost as often as you commit to them. This gives feedback immediately. You have some sort of CI running off of the integration branch to tell you if your changes are not adversely affecting other work. This gives you the immediate feedback of trunk-based integration while keeping your work organized and malleable.\n\nDon&#39;t do back-merges\n\nOr at least avoid them. A back-merge is where you want to use something from the integration branch to help you get your work done on the feature. This is a smell that you don&#39;t have independent stories. A reasonable middle-ground is cherry-picking. A successfully cherry-picked commit will not cause you issues when you merge in the future.\n\nKeeping a feature branch filled with commits that only attain what the feature is supposed to do will make working with it much more flexible.\n\nInvolve QA from the start\n\nThis should not even be a contentious point anymore. We all know how important tight feedback loops are. There should not be a QA department with QA employees. QA should be a hat that is worn at different or same people at different times.\n\nKnowing what your Acceptance Criteria is and how you will prove it from the start is integral to getting a lot of things gelling - including a successful branch-per-feature regiment.\n\nA proper DSL a la Ubiquitous Language (see Domain Driven Design) is at the heart of this. The tool that best communicates across to the Product Owner, Regression/Specification Testing and Behaviour Driven Design feedback is currently StoryTeller. One thing that it offers that no other tools offer is communication to the person writing the Acceptance Tests of what the system is capable of doing with the smallest amount of friction caused by technology. You simply pick what you want to do by clicking on links, filling out text boxes and selecting from drop-downs. There is no guessing as to how a tool might interpret your free-form text with it&#39;s regex and English-parsing goodness.\n\nShare your hard work\n\nThere will be conflicts when you merge. This is a fact of life when work is done by more than one person. When you integrate often from your feature to the integration branch, the conflicts you solve should be remembered. This is done by git&#39;s rerere but could be simulated in other systems with little effort. The key is to set up a way of sharing these auto-resolution conflicts to the rest of the team.\n\nNow anyone that tries to integrate that feature and has that conflict will not have to resolve it. No dev required to put together a build. This is a manual share right now if needed. I should have the script published in about a week that does this behind the scenes. If you want to do it yourself, look no further than the .git/rr-cache folder in your repository. Simple synchronization between all devs is the bare minimum that is needed.\n\nTaking features out is more powerful than putting them in\n\nThis might sound counter-intuitive. But at the end of an iteration, a feature that you thought was done may not work as the last bits of testing on the build as a whole make releasing a no-go. Anyone should be able to take out that feature and release anyway.\n\nSo the trick is not to take the feature out of the build. You make a build with the problem feature omitted. You can integrate that feature in the next iteration when there is time. Releasing a build should be painless.\n\nDon&#39;t make a build to test out of the integration branch. Make a separate branch that can be reset relentlessly and tag release candidates. Reset this branch to the start commit of your iteration and merge all the features you know work.\n\nNo conflicts. Remember rerere and the like? Anyone should be able to do this if you followed the practices here. This is &quot;why&quot; the hard work needs to be shared.\n\nThe key is we &quot;threw away&quot; all previous merges and have to redo them. But remembering our conflict resolutions, this is now a trivial matter. If in doubt, we haven&#39;t really thrown them away, they are still there to reference or use. Git&#39;s pick-axe functionality makes it really easy to find certain code changes if you don&#39;t know where to look.\n\nGiant refactorings\n\nYour work is as organized as is possible. Whether you elect to do this off of a certain point in time on the integration branch, release candidate branch or you started a feature branch for it, you have a way of tracking that work and can apply it as a merge, rebase or manual patch to another point if necessary. \n\nAny hardships that you may encounter will be tempered by the fact that you are relentlessly sharing your conflict resolutions and continuously integrating. PROPER BRANCH-PER-FEATURE RELIES ON RELENTLESS CONTINUOUS INTEGRATION\n\nToggles are a hack\n\nThere are exceptions. You&#39;re a giant company. You need to enable a feature for a small subset of early adopter users. This is now an explicit feature that&#39;s important to business. That&#39;s where we all want to be but most of us are not.\n\nHaving to make architectural changes because you can&#39;t effectively organize your work is a process smell plain and simple. Some teams are not mature enough and this may be an OK solution temporarily.\n\nThis is Git Flow Improved\n\nMost of this way of working started from the excellent post called &quot;Git Flow a Successful Branching Strategy&quot;. The important addition to this process is the idea that you start all features in an iteration from a common point. This would be what you released for the last one. This drives home the granular, atomic, flexible nature that features must exhibit for us to deliver to business in the most effective way.\n\nThe other key difference is no back-merge into the feature. Otherwise, you will not be able to exclude this feature later in the iteration.\n\nIt will be bad if you use old tools\n\nNot having a snapshot based history will hurt as branching is effectively copying another branch which will be slow. Not having a base of where the branch originated will make merging difficult as you do not have a base to compare how each side of development has changed. There are many other issues with having a connected-only tool to support what you do in order to work with everyone.\n\nHope this helps!\n",
            "excerpt": "There is no guessing as to how a tool might interpret your free-form text with it&#39;s <span class=\"highlight\">regex</span> <span class=\"highlight\">and</span> English-parsing goodness.\n\nShare your hard work\n\nThere will be conflicts when you merge. &hellip; The key is we &quot;threw away&quot; all previous merges <span class=\"highlight\">and</span> have to <span class=\"highlight\">redo</span> them. But remembering our conflict resolutions, this is now a trivial matter. &hellip; ",
            "title": "Should I create a branch for single commits?"
        },
        {
            "tags": [
                "android",
                "performance",
                "listview",
                "garbage-collection",
                "lag"
            ],
            "question_score": 3,
            "is_accepted": false,
            "answer_id": 7166550,
            "is_answered": false,
            "question_id": 7166427,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1314128834,
            "creation_date": 1314128181,
            "body": "In general, garbage collection is happening because you&#39;re creating too many objects unnecessarily. It&#39;d be easier to help with your code, but I&#39;ll give it a shot anyway.\n\nIn the case of your list, you&#39;re probably recreating your view in every call to . You should instead re-use  when appropriate. See my answer to this other SO question for an idea of how to structure your  method.\n\nYour file reading problem is a bit harder to guess at, but 47s seems ridiculously long for 2,000 lines. Are you also creating objects in that loop? \n\nUpdate:\n\nSo apparently your problem isn&#39;t really with your  objects themselves, but it&#39;s all the work you do every time you get a . You&#39;re doing quite a bit of work every time: a RegEx match, string splitting (and associated string object creation), etc. You should at minimum cache the results of this so that you don&#39;t have to redo the work for each item every time it comes back into view.\n",
            "excerpt": "You&#39;re doing quite a bit of work every time: a <span class=\"highlight\">RegEx</span> match, string splitting (<span class=\"highlight\">and</span> associated string object creation), etc. &hellip; You should at minimum cache the results of this so that you don&#39;t have to <span class=\"highlight\">redo</span> the work for each item every time it comes back into view. &hellip; ",
            "title": "ListView with getView() Over-Ridden Slow Due To Constant GC?"
        },
        {
            "tags": [
                "javascript",
                "regex"
            ],
            "question_score": 1,
            "is_accepted": false,
            "answer_id": 7087023,
            "is_answered": false,
            "question_id": 7086869,
            "item_type": "answer",
            "score": 1,
            "last_activity_date": 1313777910,
            "creation_date": 1313544468,
            "body": "Edit - redo\nAfter revisiting this thread, I noticed these comments:  \n\n&quot;does not have [- &#39;] next to one another&quot; all 9 possibilities here or just the three of\n the same character doubled up? – jswolf19 2 days ago\n @jswolf19 do not have :  ,  or . – Stack 101 2 days ago\n&quot;\n\nIn light of this, you have to go with what @jswolf19 did.\n\nHis regex could probably be simplified a little more:\n\npcre:\n  \n\njs:\n  \n\n\n\nPlease test answers before you mark them as correct. Others may visit this thread\nin the future.  \n",
            "excerpt": "Edit - <span class=\"highlight\">redo</span>\nAfter revisiting this thread, I noticed these comments:  \n\n&quot;does not have [- &#39;] next to one another&quot; all 9 possibilities here or just the three of\n the same character doubled up? &hellip; His <span class=\"highlight\">regex</span> could probably be simplified a little more:\n\npcre:\n/^[A-Z](?:([\\- &#39;])(?!$|\\1)|[a-zA-Z\\x{E0}-\\x{EF}])+$/  \n\njs:\n/^[A-Z](?:([\\- &#39;])(?! &hellip; ",
            "title": "Javascript regex difficulties"
        },
        {
            "tags": [
                "php",
                "javascript"
            ],
            "question_score": 1,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 1,
            "is_answered": false,
            "question_id": 6749304,
            "item_type": "question",
            "score": 1,
            "last_activity_date": 1311090475,
            "creation_date": 1311087574,
            "body": "I have a jsfiddle and have edited it to include sessions for passing values that the user inputs. Currently it does regex checking for phone numbers and parses the value in textbox into an array.\nIt uses localStorage to save the numbers in the list..\n\nhttp://jsfiddle.net/y8Uju/17/\n\nCurrently it takes numbers into that textbox and adds them to the list.  What I want to do is I want name and number to all be in that one textbox and both to be added into the list together WITH error checking. Now the real problem is that once the array passes the list over once you hit submit, I want to read those array values all into a textfile line by line for each array item.\n\nSo for example,\nif a user enters 903456346346 kergfer kerger, due to the invalid number it should give error and tell them to redo...\n\nbut if their lists looks like:\n2195679876 John Polski          (array item 1)\n2195395676 Cara Polski          (array item 2)\n2195679346 Jennifer Ray          (array item 3)\n2195456756 Matt Hardy          (array item 4)\n\nthen they submit, it should make the textfile look like this:\n2195679876 John Polski\n2195395676 Cara Polski\n2195679346 Jennifer Ray\n2195456756 Matt Hardy\n\nI know how to put all the text in a file into one line but thats not how I want it. I want it sorted like the above. I would really liek to use a db for this but I have never used one and they seem kind of complicated...Any tutorial I found starts off with prior knowledge of command-line so I am stuck and decided to either use sessions with session life set to 4 years OR use plain ol text file. The below is what I have and it puts everything into one line..\n\n\n",
            "excerpt": "I have a jsfiddle <span class=\"highlight\">and</span> have edited it to include sessions for passing values that the user inputs. Currently it does <span class=\"highlight\">regex</span> checking for phone numbers <span class=\"highlight\">and</span> parses the value in textbox into an array. &hellip; So for example,\nif a user enters 903456346346 kergfer kerger, due to the invalid number it should give error <span class=\"highlight\">and</span> tell them to <span class=\"highlight\">redo</span>... &hellip; ",
            "title": "File read/write with text file and arrays problem"
        },
        {
            "tags": [
                "regex"
            ],
            "question_score": 6,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 3,
            "is_answered": true,
            "question_id": 6270228,
            "item_type": "question",
            "score": 6,
            "last_activity_date": 1307474104,
            "creation_date": 1307473054,
            "body": "I&#39;d be interested to know what kind of algorithms are used for matching it, and how they are optimised, because I imagine that somes regexes could produce a vast number of possible matches that could cause serious problems on a poorly witten regex parser.\n\nAlso, I recently discovered the concept of a ReDoS, why do regexes such as  or  cause problems?\n\nEDIT: I have used them most in C# and Python, so that&#39;s what was in my mind when I was considering the question. I assume Python&#39;s is written in C like the rest of the interpreter, but I have no idea about C#\n",
            "excerpt": "serious problems on a poorly witten <span class=\"highlight\">regex</span> parser. &hellip; Also, I recently discovered the concept of a <span class=\"highlight\">ReDoS</span>, why do regexes such as (a|aa)+ or (a|a?)+ cause problems? &hellip; ",
            "title": "When a string is being matched against a regular expression, what&#39;s going on behind the scenes?"
        },
        {
            "tags": [
                "c++",
                "design-patterns",
                "filter",
                "decorator",
                "proxy-pattern"
            ],
            "question_score": 3,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 4,
            "is_answered": true,
            "question_id": 6001015,
            "item_type": "question",
            "score": 3,
            "last_activity_date": 1306790844,
            "creation_date": 1305366316,
            "body": "Suppose I&#39;ve tons of filenames in , formatted in a some way:\n\n\n\nFor example  is the ,  the run number,  the data format.\n\nI want to write an interface to do something like this:\n\n\n\nI want lazy behaviour, for example no real filtering has to be done before any action like  or . I don&#39;t want to redo the filtering if it is already done.\nI&#39;m just learning something about design pattern, and I think I can use:\n\n\nan abstract base class  that implement  methods\nfactory to decide from the called method which decorator use\nevery time I call a * method I return a decorated class, for example:\n\n\n\n\n\n\n\n\n\nproxy that build a regex to filter the filenames, but don&#39;t do the filtering\n\n\nI&#39;m also learning jQuery and I&#39;m using a similar chaining mechanism.\n\nCan someone give me some hints? Is there some place where a design like this is explained? The design must be very flexible, in particular to handle new format in the filenames.\n",
            "excerpt": "I don&#39;t want to <span class=\"highlight\">redo</span> the filtering if it is already done. &hellip; to filter the filenames, but don&#39;t do the filtering\n\n\nI&#39;m also learning jQuery <span class=\"highlight\">and</span> I&#39;m using a similar chaining mechanism. &hellip; ",
            "title": "Design for customizable string filter"
        },
        {
            "tags": [
                "c++",
                "xml"
            ],
            "question_score": 3,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 3,
            "is_answered": true,
            "question_id": 6112679,
            "item_type": "question",
            "score": 3,
            "last_activity_date": 1306254487,
            "creation_date": 1306249875,
            "body": "I have a huge (100k+ lines, 5MB+) XML which acts as a database for my C++ Application. The structure of the XML is quite straight forward, for example, it has chunks of:\n\n\n\nThe nesting of tags is several levels deep and there are many items with multiple properties. What is a good way to find and replace chunks of this kind of a file? For example, assume that the above section is repeated a few dozen times and in each chunk the value of the tag  is different. I&#39;d like to make edits such as:\n\n\nSetting all the values contained in tag  to a given value.\nRemove chunks containing certain values\nEtc.\n\n\nSo far, I&#39;ve learnt of the following methods for accomplishing this:\n\n\nFind/Replace: A no-brainer, trivial solution and also my last fall-back. This approach, IMHO is the most time consuming, error prone and painful method. The absolute last resort.\nRegExes: Use regular expressions to match blocks of interest and edit them using replacement expressions. Kinda like this blog entry: http://blogs.msdn.com/b/vseditor/archive/2004/08/12/213770.aspx. But I feel this would be error prone and there could be a bunch of missed items if the regex is not exactly right the first time around.\nParser &amp; Save: Whip up a quick program to parse the XML using Xerces or XML DOM Interfaces (or some other XML library), read the XML in, manipulate it as desired and save back to disk. Again, this approach is a slow process, but once its up and running, easy to make modifications and more flexible then RegExes.\n\n\nAre there any better ways to deal with this? \n(EDIT: Thanks for all the redo it to use a DB suggestions, I know its a huge mess but by &quot;better ways to deal with this&quot; I meant the &quot;find/replace&quot; part. )\n",
            "excerpt": "But I feel this would be error prone <span class=\"highlight\">and</span> there could be a bunch of missed items if the <span class=\"highlight\">regex</span> is not exactly right the first time around. &hellip; (EDIT: Thanks for all the <span class=\"highlight\">redo</span> it to use a DB suggestions, I know its a huge mess but by &quot;better ways to deal with this&quot; I meant the &quot;find/replace&quot; part. ) &hellip; ",
            "title": "Good Option for XML Edit/Replace"
        },
        {
            "tags": [
                "drupal",
                "module"
            ],
            "question_score": 2,
            "is_accepted": false,
            "has_accepted_answer": false,
            "answer_count": 1,
            "is_answered": false,
            "question_id": 1289287,
            "item_type": "question",
            "score": 2,
            "last_activity_date": 1296470922,
            "creation_date": 1249907327,
            "body": "I have my Drupal installation set up to use both Texy for markup (hand-writing HTML soon gets tedious) and GeSHi for syntax highlighting (which is about the only syntax highlighter I found for Drupal at that time).\n\nThe problem now is that since the last update to Texy seemingly nothing really works anymore. I spend a long time trying to convince both of them working together a while ago but it was a pretty flaky setup. Depending on the order of evaluation of both filters I either get no syntax highlighting or all, escaped HTML output, line breaks disappear or, sometimes, it can indeed work.\n\nI am now at a point where it almost works again, but with exceptions. Ideally GeSHi would take care of the code, while Texy handles the rest, but that&#39;s not the case. The nice regular expression\n\n\n\ngets the part between the first two asterisks italicized, since Texy runs over that part as well. Which is unfortunate, since it changes the meaning of the regex.\n\nAnyone out here who has insights of how to peroperly set up multiple filters for input in Drupal and how to handle non-HTML markup and syntax highlighting simultaneously. As I currently have to go over every post that contains code I have written (nearly all) it wouldn probably not much less work to completely redo every page on the site in search for a better setup. As for syntax highlighting, I have much need for the usual common languages, such as C#, Java, etc. but also for more esoteric ones like Windows batch files or Powershell. Simply dumping unhighlighted code there isn&#39;t very pretty.\n\nSo, actually I have two questions here:\n\n\nHow can one convince multiple input filters to work without interfering with each other, specifically Texy and GeSHI?\nWhat other options are out there that meet my requirements of easy-to-write non-HTML markup1 and syntax highlighting even for lesser-used languages2?\n\n\n\n\n1 Often I just need emphasis and strong emphasis, sometimes headings, often images, sometimes also tables. Oh, and usually code :-)\n\n2 The Stack Overflow-like guessing for syntax highlighting doesn&#39;t work very well for most code, it just works well enough to be a little pleasing.\n",
            "excerpt": "Which is unfortunate, since it changes the meaning of the <span class=\"highlight\">regex</span>. &hellip; As I currently have to go over every post that contains code I have written (nearly all) it wouldn probably not much less work to completely <span class=\"highlight\">redo</span> every page on the site in search for a better setup. &hellip; ",
            "title": "Drupal with Texy and GeSHi"
        },
        {
            "tags": [
                "java",
                "text-editor",
                "undo",
                "undo-redo",
                "redo"
            ],
            "question_score": 17,
            "is_accepted": false,
            "answer_id": 3584319,
            "is_answered": false,
            "question_id": 3583901,
            "item_type": "answer",
            "score": 5,
            "last_activity_date": 1282913716,
            "creation_date": 1282913716,
            "body": "If you don&#39;t want anything fancy, you can just add an UndoManager. Your  will fire an  every time you add or remove text. To undo and redo each change, simply call those methods in UndoManager.\n\nThe downside of this is UndoManager adds a new edit each time the user types something in, so typing &quot;apple&quot; will leave you with 5 edits, undoable one at a time. For my text editor, I wrote a wrapper for edits that stores the time it was made in addition to text change and offset, as well as an  that concatenates new edits to previous ones if there is only a short period of time between them (0.5 seconds works well for me).\n\nThis works well for general editting, but causes problems when a massive replace is done. If you had a document with 5000 instances of &quot;apple&quot; and you wanted to replace this with &quot;orange&quot;, you&#39;d end up with 5000 edits all storing &quot;apple&quot;, &quot;orange&quot; and an offset. To lower the amount of memory used, I&#39;ve treated this as a separate case to ordinary edits and am instead storing &quot;apple&quot;, &quot;orange&quot; and an array of 5000 offsets. I haven&#39;t gotten around to applying this yet, but I know that it&#39;ll cause some headaches when multiple strings match the search condition (eg. case insensitive search, regex search).\n",
            "excerpt": "To undo <span class=\"highlight\">and</span> <span class=\"highlight\">redo</span> each change, simply call those methods in UndoManager. &hellip; I haven&#39;t gotten around to applying this yet, but I know that it&#39;ll cause some headaches when multiple strings match the search condition (eg. case insensitive search, <span class=\"highlight\">regex</span> search). &hellip; ",
            "title": "How to design undo &amp; redo in text editor?"
        },
        {
            "tags": [
                "regex",
                "validation",
                "logic"
            ],
            "question_score": 7,
            "is_accepted": false,
            "answer_id": 3283093,
            "is_answered": false,
            "question_id": 3274701,
            "item_type": "answer",
            "score": 0,
            "last_activity_date": 1279558092,
            "creation_date": 1279558092,
            "body": "Regexes aren&#39;t bad for validating most data, if it&#39;s a Regular Language.\n\nBut, as has been noted, sometimes they can become difficult to maintain, and the programmers introduce errors.\n\nThe simplest way to mitigate the situation is with Tests/TDD.  These tests should be calling a method that uses the regular expression to validate email addresses (I currently use this regex  which is working well enough.  This way, when you get a false positive or false negative, you can add another test for that case, adjust your regular expression, and ensure you didn&#39;t break some other condition.  \n\nIf TDD seems a bit much, a tool like Expresso lets you save regexes with test data, and that can aid in keeping track of values that should pass/fail and aid in creating and understanding your regex.\n\nWARNING:\n\nTake some care in constructing regular expressions.  There is potential for introducing ReDos vulnerabilities \n\nSee: http://msdn.microsoft.com/en-us/magazine/ff646973.aspx\n\nIn short, a poorly constructed regex, given the right input can take hours to execute effectively killing your servers performance.\n",
            "excerpt": "If TDD seems a bit much, a tool like Expresso lets you save regexes with test data, <span class=\"highlight\">and</span> that can aid in keeping track of values that should pass/fail <span class=\"highlight\">and</span> aid in creating <span class=\"highlight\">and</span> understanding your <span class=\"highlight\">regex</span>. &hellip; There is potential for introducing <span class=\"highlight\">ReDos</span> vulnerabilities \n\nSee: http://msdn.microsoft.com/en-us/magazine/ff646973.aspx\n\nIn short, a poorly constructed <span class=\"highlight\">regex</span>, given the right input can take hours to execute &hellip; ",
            "title": "Using regular expression for validating data is correct or not?"
        },
        {
            "tags": [
                "forms",
                "jquery-plugins",
                "jquery-validate"
            ],
            "question_score": 0,
            "is_accepted": false,
            "has_accepted_answer": true,
            "answer_count": 1,
            "is_answered": false,
            "question_id": 3236276,
            "item_type": "question",
            "score": 0,
            "last_activity_date": 1279095321,
            "creation_date": 1279017479,
            "body": "how do i add Form validation, with multiple rules on a single textfield, \nand a different action depending on the rule\n\nfor example, a faq module, with pre-defined questions, the user can save and / or publish his answers.\n\ni have a form, with 1 textarea and 2 buttons \n1 button submits the form to save the entered value in the database as draft\n1 button submits the form to save and publish the entered value.\n\n\n\non page load, an existing draft value (if there is one) is displayed inside the textfield,\nthe user should not be able to save, but can publish\nif the field is empty the user should not be able to save or publish\nif the field has text, (and different from the existing draft) the user can save and / or publish.\n\ni have been using jquery validate for a while now but mainly with basic validation of required fields and testing a regex for email and such,\nbut its unclear to me how i can manage the above to validate correctly\n\ni have tried it out, (code below)\ncurrent code:\nfor ease of reading: the question object is the container div where the form is in.\n\n\n\nThis does not entirely what i want, it uses only 1 rule, and then in the error method i test to set the righ tbuttons enabled, but that means that buttons get enabled correctly but the textfield gets the error state sometimes when it does not need to show an error but rather neutral state.\n\ni believe i will need to redo my logic, without doing it inside 1 valid: or error: function, but using the rules option, but its unclear how i can bind the enable / disable functionality to the buttons with the rules object. \n\nanyone to point me in the right direction is very welcome.\n",
            "excerpt": "i have been using jquery validate for a while now but mainly with basic validation of required fields <span class=\"highlight\">and</span> testing a <span class=\"highlight\">regex</span> for email <span class=\"highlight\">and</span> such,\nbut its unclear to me how i can manage the above to validate &hellip; i believe i will need to <span class=\"highlight\">redo</span> my logic, without doing it inside 1 valid: or error: function, but using the rules option, but its unclear how i can bind the enable / disable functionality to the buttons &hellip; ",
            "title": "how to add multiple rules with different handling on a field with jquery validate"
        },
        {
            "tags": [
                "oop",
                "design-patterns",
                "java"
            ],
            "question_score": 672,
            "is_accepted": false,
            "answer_id": 1673964,
            "is_answered": false,
            "question_id": 1673841,
            "item_type": "answer",
            "score": 53,
            "last_activity_date": 1257344185,
            "creation_date": 1257343768,
            "body": "\nFlyweight is used with some values of Byte, Short, Integer, Long and String.\nFacade is used in many place but the most obvious is Scripting interfaces.\nSingleton - java.lang.Runtime comes to mind.\nAbstract Factory - Also Scripting and JDBC API.\nCommand - TextComponent&#39;s Undo/Redo.\nInterpreter - RegEx (java.util.regex.) and SQL (java.sql.) API.\nPrototype - Not 100% sure if this count, but I thinkg  method can be used for this purpose.\n\n",
            "excerpt": "Flyweight is used with some values of Byte, Short, Integer, Long <span class=\"highlight\">and</span> String.\nFacade is used in many place but the most obvious is Scripting interfaces.\nSingleton - java.lang.Runtime comes to mind. &hellip; Abstract Factory - Also Scripting <span class=\"highlight\">and</span> JDBC API.\nCommand - TextComponent&#39;s Undo/<span class=\"highlight\">Redo</span>.\nInterpreter - <span class=\"highlight\">RegEx</span> (java.util.regex.) <span class=\"highlight\">and</span> SQL (java.sql.) API. &hellip; ",
            "title": "Examples of GoF Design Patterns in Java&#39;s core libraries"
        },
        {
            "tags": [
                "perl",
                "shell"
            ],
            "question_score": 17,
            "is_accepted": true,
            "answer_id": 1154355,
            "is_answered": false,
            "question_id": 1152400,
            "item_type": "answer",
            "score": 83,
            "last_activity_date": 1248386915,
            "creation_date": 1248105051,
            "body": "I&#39;ll answer seriously. I do not know of any program to translate a shell script into Perl, and I doubt any interpreter module would provide the performance benefits. So I&#39;ll give an outline of how I would go about it.\n\nNow, you want to reuse your code as much as possible. In that case, I suggest selecting pieces of that code, write a Perl version of that, and then call the Perl script from the main script. That will enable you to do the conversion in small steps, assert that the converted part is working, and improve gradually your Perl knowledge.\n\nAs you can call outside programs from a Perl script, you can even replace some bigger logic with Perl, and call smaller shell scripts (or other commands) from Perl to do something you don&#39;t feel comfortable yet to convert. So you&#39;ll have a shell script calling a perl script calling another shell script. And, in fact, I did exactly that with my own very first Perl script.\n\nOf course, it&#39;s important to select well what to convert. I&#39;ll explain, below, how many patterns common in shell scripts are written in Perl, so that you can identify them inside your script, and create replacements by as much cut&amp;paste as possible.\n\nFirst, both Perl scripts and Shell scripts are code+functions. Ie, anything which is not a function declaration is executed in the order it is encountered. You don&#39;t need to declare functions before use, though. That means the general layout of the script can be preserved, though the ability to keep things in memory (like a whole file, or a processed form of it) makes it possible to simplify tasks.\n\nA Perl script, in Unix, starts with something like this:\n\n\n\nThe first line, obviously, points to the commands to be used to run the script, just like normal shells do. The following two &quot;use&quot; lines make then language more strict, which should decrease the amount of bugs you encounter because you don&#39;t know the language well (or plain did something wrong). The third use line imports the &quot;Dumper&quot; function of the &quot;Data&quot; module. It&#39;s useful for debugging purposes. If you want to know the value of an array or hash table, just print Dumper(whatever).\n\nNote also that comments are just like shell&#39;s, lines starting with &quot;#&quot;.\n\nNow, you call external programs and pipe to or pipe from them. For example:\n\n\n\nThat will run cat, passing &quot;&quot;, which would be $1 on shell -- the first argument passed to it. The result of that will be piped into your Perl script through &quot;THIS&quot;, which you can use to read that from it, as I&#39;ll show later.\n\nYou can use &quot;|&quot; at the beginning or end of line, to indicate the mode &quot;pipe to&quot; or &quot;pipe from&quot;, and specify a command to be run, and you can also use &quot;&gt;&quot; or &quot;&gt;&gt;&quot; at the beginning, to open a file for writing with or without truncation, &quot;&lt;&quot; to explicitly indicate opening a file for reading (the default), or &quot;+&lt;&quot; and &quot;+&gt;&quot; for read and write. Notice that the later will truncate the file first.\n\nAnother syntax for &quot;open&quot;, which will avoid problems with files with such characters in their names, is having the opening mode as a second argument:\n\n\n\nThis will do the same thing. The mode &quot;-|&quot; stands for &quot;pipe from&quot; and &quot;|-&quot; stands for &quot;pipe to&quot;. The rest of the modes can be used as they were (). While there is more than this to open, it should suffice for most things.\n\nBut you should avoid calling external programs as much as possible. You could open the file directly, by doing , for example, and have much better performance.\n\nSo, what external programs you could cut out? Well, almost everything. But let&#39;s stay with the basics: cat, grep, cut, head, tail, uniq, wc, sort. \n\nCAT\n\nWell, there isn&#39;t much to be said about this one. Just remember that, if possible, read the file only once and keep it in memory. If the file is huge you won&#39;t do that, of course, but there are almost always ways to avoid reading a file more than once.\n\nAnyway, the basic syntax for cat would be:\n\n\n\nThis opens a file, and prints all it&#39;s contents (&quot;&quot; will loop until EOF, assigning each line to &quot;&quot;), and close it again.\n\nIf I wanted to direct the output to another file, I could do this:\n\n\n\nThis will print the line to the file indicated by &quot;&quot;. You can use ,  and  in the appropriate places as well, without having to open them first. In fact, &quot;&quot; defaults to , and &quot;&quot; defaults to &quot;&quot;.\n\nNotice also the &quot;&quot; and &quot;&quot;. The operators  and  means it will only execute the following command if the first returns false (which means empty string, null reference, 0, and the like). The die command stops the script with an error message.\n\nThe main difference between &quot;&quot; and &quot;&quot; is priority. If &quot;&quot; was replaced by &quot;&quot; in the examples above, it would not work as expected, because the line would be interpreted as:\n\n\n\nWhich is not at all what is expected. As &quot;&quot; has a lower priority, it works. In the line where &quot;&quot; is used, the parameters to  are passed between parenthesis, making it possible to use &quot;&quot;.\n\nAlas, there is something which is pretty much what cat does:\n\n\n\nThat will print all files in the command line, or anything passed through STDIN.\n\nGREP\n\nSo, how would our &quot;grep&quot; script work? I&#39;ll assume &quot;grep -E&quot;, because that&#39;s easier in Perl than simple grep. Anyway:\n\n\n\nThe &quot;o&quot; passed to $patttern instructs Perl to compile that pattern only once, thus gaining you speed. Not the style &quot;something if cond&quot;. It means it will only execute &quot;something&quot; if the condition is true. Finally, &quot;&quot;, alone, is the same as &quot;&quot;, which means compare $_ with the regex pattern indicated. If you want standard  behavior, ie, just substring matching, you could write:\n\n\n\nCUT\n\nUsually, you do better using regex groups to get the exact string than cut. What you would do with &quot;sed&quot;, for instance. Anyway, here are two ways of reproducing cut:\n\n\n\nThat will get you the fourth column of every line, using &quot;,&quot; as separator. Note  and . The  sigil means &quot;array&quot; should be treated as an, well, array. It will receive an array composed of each column in the currently processed line. Next, the  sigil means  is a scalar value. It will return the column you are asking for.\n\nThis is not a good implementation, though, as &quot;split&quot; will scan the whole string. I once reduced a process from 30 minutes to 2 seconds just by not using split -- the lines where rather large, though. Anyway, the following has a superior performance if the lines are expected to be big, and the columns you want are low:\n\n\n\nThis leverages regular expressions to get the desired information, and only that.\n\nIf you want positional columns, you can use:\n\n\n\nWhich will print 10 characters starting from the sixth (again, 0 means the first character).\n\nHEAD\n\nThis one is pretty simple:\n\n\n\nThings to note here. I use &quot;ne&quot; to compare strings. Now, $ARGV will always point to the current file, being read, so I keep track of them to restart my counting once I&#39;m reading a new file. Also note the more traditional syntax for &quot;if&quot;, right along with the post-fixed one.\n\nI also use a simplified syntax to get the number of lines to be printed. When you use &quot;shift&quot; by itself it will assume &quot;shift @ARGV&quot;. Also, note that shift, besides modifying @ARGV, will return the element that was shifted out of it.\n\nAs with a shell, there is no distinction between a number and a string -- you just use it. Even things like &quot;2&quot;+&quot;2&quot; will work. In fact, Perl is even more lenient, cheerfully treating anything non-number as a 0, so you might want to be careful there.\n\nThis script is very inefficient, though, as it reads ALL file, not only the required lines. Let&#39;s improve it, and see a couple of important keywords in the process:\n\n\n\nThe keywords &quot;next&quot; and &quot;last&quot; are very useful. First, &quot;next&quot; will tell Perl to go back to the loop condition, getting the next element if applicable. Here we use it to skip a file unless it is truly a file (not a directory) and readable. It will also skip if we couldn&#39;t open the file even then.\n\nThen &quot;last&quot; is used to immediately jump out of a loop. We use it to stop reading the file once we have reached the required number of lines. It&#39;s true we read one line too many, but having &quot;last&quot; in that position shows clearly that the lines after it won&#39;t be executed.\n\nThere is also &quot;redo&quot;, which will go back to the beginning of the loop, but without reevaluating the condition nor getting the next element.\n\nTAIL\n\nI&#39;ll do a little trick here.\n\n\n\nOk, I&#39;m combining &quot;push&quot;, which appends a value to an array, with &quot;shift&quot;, which takes something from the beginning of an array. If you want a stack, you can use push/pop or shift/unshift. Mix them, and you have a queue. I keep my queue with at most 10 elements with  which will give me the index of the last element in the array. You could also get the number of elements in  with .\n\nUNIQ\n\nNow, uniq only eliminates repeated consecutive lines, which should be easy with what you have seen so far. So I&#39;ll eliminate all of them:\n\n\n\nNow here I&#39;m keeping the whole file in memory, inside . The use of the  sigil indicates this is a hash table. I&#39;m using the lines as keys, and storing nothing as value -- as I have no interest in the values. I check where the key exist with &quot;defined($lines{$_})&quot;, which will test if the value associated with that key is defined or not; the keyword &quot;unless&quot; works just like &quot;if&quot;, but with the opposite effect, so it only prints a line if the line is NOT defined.\n\nNote, too, the syntax  as a way to store something in a hash table. Note the use of  for hash table, as opposed to  for arrays.\n\nWC\n\nThis will actually use a lot of stuff we have seen:\n\n\n\nThree new things. Two are the &quot;+=&quot; operator, which should be obvious, and the &quot;for&quot; expression. Basically, a &quot;for&quot; will assign each element of the array to the variable indicated. The &quot;my&quot; is there to declare the variable, though it&#39;s unneeded if declared previously. I could have an @array variable inside those parenthesis. The &quot;keys %lines&quot; expression will return as an array they keys (the filenames) which exist for the hash table &quot;%lines&quot;. The rest should be obvious.\n\nThe third thing, which I actually added only revising the answer, is the &quot;grep&quot;. The format here is:\n\n\n\nIt will run &quot;code&quot; for each element of the array, passing the element as &quot;$_&quot;. Then grep will return all elements for which the code evaluates to &quot;true&quot; (not 0, not &quot;&quot;, etc). This avoids counting empty strings resulting from consecutive spaces.\n\nSimilar to &quot;grep&quot; there is &quot;map&quot;, which I won&#39;t demonstrate here. Instead of filtering, it will return an array formed by the results of &quot;code&quot; for each element.\n\nSORT\n\nFinally, sort. This one is easy too:\n\n\n\nHere, &quot;sort&quot; will sort the array. Note that sort can receive a function to define the sorting criteria. For instance, if I wanted to sort numbers I could do this:\n\n\n\nHere &quot;&quot; and &quot;&quot; receive the elements to be compared. &quot;&quot; returns -1, 0 or 1 depending on whether the number is less than, equal to or greater than the other. For strings, &quot;cmp&quot; does the same thing.\n\nHANDLING FILES, DIRECTORIES &amp; OTHER STUFF\n\nAs for the rest, basic mathematical expressions should be easy to understand. You can test certain conditions about files this way:\n\n\n\nI&#39;m not trying to be exaustive here, there are many other such tests. I can also do &quot;glob&quot; patterns, like shell&#39;s &quot;*&quot; and &quot;?&quot;, like this:\n\n\n\nIf you combined that with &quot;chdir&quot;, you can emulate &quot;find&quot; as well:\n\n\n\nHere we see, finally, a function. A function is declared with the syntax:\n\n\n\nStrictly speakings, &quot;(params)&quot; is optional. The declared parameter I used, &quot;&quot;, means I&#39;m receiving two scalar parameters. I could have &quot;&quot; or &quot;&quot; in there as well. The array &quot;&quot; has all the parameters passed. The line &quot;&quot; is just a simple way of assigning the first two elements of that array to the variables  and .\n\nThis function does not return anything (it&#39;s a procedure, really), but you can have functions which return values just by adding &quot;&quot; to it, and have it return &quot;something&quot;.\n\nThe rest of it should be pretty obvious.\n\nMIXING EVERYTHING\n\nNow I&#39;ll present a more involved example. I&#39;ll show some bad code to explain what&#39;s wrong with it, and then show better code.\n\nFor this first example, I have two files, the names.txt file, which names and phone numbers, the systems.txt, with systems and the name of the responsible for them. Here they are:\n\nnames.txt\n\n\n\nsystems.txt\n\n\n\nI want, then, to print the first file, with the system appended to the name of the person, if that person is responsible for that system. The first version might look like this:\n\n\n\nThis code won&#39;t work, though. Perl will complain that the function was used too early for the prototype to be checked, but that&#39;s just a warning. It will give an error on line 8 (the first while loop), complaining about a readline on a closed filehandle. What happened here is that &quot;&quot; is global, so the function  is changing it. Let&#39;s rewrite it, fixing both things:\n\n\n\nThis won&#39;t give any error or warnings, nor will it work. It returns just the sysems, but not the names and phone numbers! What happened? Well, what happened is that we are making a reference to &quot;&quot; after calling , but, by reading the file,  is overwriting the value of !\n\nTo avoid that, we&#39;ll make  local inside . This will give it a local scope, and the original value will then be restored once returned from :\n\n\n\nAnd that still doesn&#39;t work! It prints a newline between the name and the system. Well, Perl reads the line including any newline it might have. There is a neat command which will remove newlines from strings, &quot;&quot;, which we&#39;ll use to fix this problem. And since not every name has a system, we might, as well, avoid printing the comma when that happens:\n\n\n\nThat works, but it also happens to be horribly inefficient. We read the whole systems file for every line in the names file. To avoid that, we&#39;ll read all data from systems once, and then use that to process names.\n\nNow, sometimes a file is so big you can&#39;t read it into memory. When that happens, you should try to read into memory any other file needed to process it, so that you can do everything in a single pass for each file. Anyway, here is the first optimized version of it:\n\n\n\nUnfortunately, it doesn&#39;t work. No system ever appears! What has happened? Well, let&#39;s look into what &quot;&quot; contains, by using :\n\n\n\nThe output will be something like this:\n\n\n\nThose  is how  displays a hash table. The odd numbers are the keys, and the succeeding even numbers are the values. Now we can see that each name in  has a preceeding space! Silly regex mistake, let&#39;s fix it:\n\n\n\nSo, here, we are aggressively removing any spaces from the beginning or end of name and system. There are other ways to form that regex, but that&#39;s beside the point. There is still one problem with this script, which you&#39;ll have seen if your &quot;names.txt&quot; and/or &quot;systems.txt&quot; files have an empty line at the end. The warnings look like this:\n\n\n\nWhat happened here is that nothing went into the &quot;&quot; variable when the empty line was processed. There are many ways around that, but I choose the following:\n\n\n\nThe regular expressions now require at least one character for name and system, and we test to see if &quot;&quot; is defined before we use it.\n\nCONCLUSION\n\nWell, then, these are the basic tools to translate a shell script. You can do MUCH more with Perl, but that was not your question, and it wouldn&#39;t fit here anyway.\n\nJust as a basic overview of some important topics, \n\n\nA Perl script that might be attacked by hackers need to be run with the -T option, so that Perl will complain about any vulnerable input which has not been properly handled. \nThere are libraries, called modules, for database accesses, XML&amp;cia handling, Telnet, HTTP &amp; other protocols. In fact, there are miriads of modules which can be found at CPAN.\nAs mentioned by someone else, if you make use of AWK or SED, you can translate those into Perl with A2P and S2P.\nPerl can be written in an Object Oriented way.\nThere are multiple versions of Perl. As of this writing, the stable one is 5.8.8 and there is a 5.10.0 available. There is also a Perl 6 in development, but experience has taught everyone not to wait too eagerly for it.\n\n\nThere is a free, good, hands-on, hard &amp; fast book about Perl called Learning Perl The Hard Way. It&#39;s style is similar to this very answer. It might be a good place to go from here.\n\nI hope this helped.\n\nDISCLAIMER\n\nI&#39;m NOT trying to teach Perl, and you will need to have at least some reference material. There are guidelines to good Perl habits, such as using &quot;&quot; and &quot;&quot; at the beginning of the script, to make it less lenient of badly written code, or using STDOUT and STDERR on the print lines, to indicate the correct output pipe.\n\nThis is stuff I agree with, but I decided it would detract from the basic goal of showing patterns for common shell script utilities.\n",
            "excerpt": "The odd numbers are the keys, <span class=\"highlight\">and</span> the succeeding even numbers are the values. Now we can see that each name in %systems has a preceeding space! Silly <span class=\"highlight\">regex</span> mistake, let&#39;s fix it:\n\n#! &hellip; There are other ways to form that <span class=\"highlight\">regex</span>, but that&#39;s beside the point. &hellip; ",
            "title": "How can I translate a shell script to Perl?"
        },
        {
            "tags": [
                "ruby",
                "syntax"
            ],
            "question_score": 8,
            "is_accepted": false,
            "answer_id": 956291,
            "is_answered": false,
            "question_id": 949568,
            "item_type": "answer",
            "score": 6,
            "last_activity_date": 1244213357,
            "creation_date": 1244213357,
            "body": "First off: I&#39;ll break many of these rules if it&#39;s for a short one-off script, or a one-liner on the command line, or in .  But most of my time is spent in medium sized or larger scripts or applications.  So:\n\nAvoid:\n\n\nusing  code block for class methods.  It&#39;s a cute trick, but no better than , and less readable (especially after the first page).\n: Use  instead.\n: usually  is better.\nclass variables (e.g. ).  They are problematic and can usually be replaced with class-level instance variables without much effort.\nAnything that causes a warning, and preferably anything that causes a warning when run via the more strict .  This is especially important if you are writing a gem to be used by others.\n&#39;&#39; on a &#39;&#39; block.  Personal preference: It&#39;s too much of an edge case and so few people even know it exists or how it works to be worth it.\n and .  You probably don&#39;t need to go there.  You definitely don&#39;t want to go there.\n and  multi-line comments.  Personal preference for line-wise comments.  These just annoy the hell out of me.\n\n\nUse it, but sparingly or as a last resort (and comment it appropriately):\n\n\n (or , etc) when passing in a string.  There are some metaprogramming tricks you just can&#39;t do without passing in a string.  And occasionally, the string version performs dramatically better (and sometimes that matters).  Otherwise, I prefer to send in blocks of actual ruby code for my metaprogramming.  eval can be avoided entirely for many metaprogramming tasks.\nAdding or redefining methods on classes which were not created by me and may be used by code outside my control; a.k.a. monkey-patching.  This rule is mostly for larger codebases and libraries; I&#39;ll gladly and quickly make an exception for small one-off scripts.  I&#39;ll also make an exception for fixing buggy third-party libraries (although you may shoot yourself in the foot when you upgrade!).  Selector namespaces (or something similar) would go a long way to make ruby nice in this regard.  That said, sometimes it is worth the trouble.  ;-)\nGlobal variables (except for classes).  I&#39;ll even pass in $stdout as a parameter to my objects or methods, rather than use them directly.  It makes re-use of the code much easier and safer.  Sometimes you can&#39;t avoid it (e.g. , ,  and other environmental variables, but even then you can limit your usage).\n\n\nspeaking of which, I prefer to limit my usage of the perlish symbol globals entirely, but if they need to be used more than a little bit, then .\n\nbreak, redo, next, try: Often they make a block, loop, or method much more elegant than it otherwise could be.  Usually they just make you scratch your head for a few minutes when you haven&#39;t seen that code for a while.\n for a data-block.  Excellent for a small one-file script.  Unhelpful for a multi-file app.\n\n\nDon&#39;t use it, but don&#39;t really avoid it either:\n\n\ntry/catch\ncontinuations\n\n\nThings I use often, that others might not care for, or I don&#39;t see often:\n\n\n&#39;&#39; and &#39;&#39; keywords: they have different precedence from  and , so you need to be careful with them.  I find their different precedence to be very useful.\nregex black magic (provided I&#39;ve got some examples in unit tests for it)\nHEREDOC strings\n\n",
            "excerpt": "break, <span class=\"highlight\">redo</span>, next, try: Often they make a block, loop, or method much more elegant than it otherwise could be. &hellip; I find their different precedence to be very useful.\n<span class=\"highlight\">regex</span> black magic (provided I&#39;ve got some examples in unit tests for it)\nHEREDOC strings &hellip; ",
            "title": "Are there any Ruby language features you avoid?"
        }
    ]
}